dist: xenial
sudo: false
language: generic
notifications:
  email: false
branches:
  only:
    - master


matrix:
  fast_finish: true
  include:
    - os: linux
      compiler: gcc-8
      env:
        - COMPILER_NAME=gcc
        - GCC_VERSION=8
        - CC=gcc-8
        - CXX=g++-8
        - MATRIX_EVAL="CXX=g++-8 && CC=gcc-8"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
      script:
        - cmake -E make_directory build/Release
        - cd build/Release
        - cmake -DCMAKE_BUILD_TYPE=Release -DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -G "CodeBlocks - Unix Makefiles" ../../
        - cmake --build . --target all  --parallel
        - make install

    - os: linux
      compiler: clang-7
      env:
        - COMPILER_NAME=clang
        - CXX=clang++-7
        - CC=clang-7
        - CLANG_VERSION=7
        - MATRIX_EVAL="CXX=clang++-7 && CC=clang-7"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline:  'ppa:ubuntu-toolchain-r/test'
            - sourceline:  'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main'
              key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - llvm-7-dev
            - clang-7
            - libstdc++-8-dev
      script:
        - cmake -E make_directory build/Release
        - cd build/Release
        - cmake -DCMAKE_BUILD_TYPE=Release -DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -G "CodeBlocks - Unix Makefiles" ../../
        - cmake --build . --target all  --parallel
        - make install

    - os: linux
      compiler: gcc-8 (conda libs)
      env:
        - COMPILER_NAME=gcc
        - GCC_VERSION=8
        - CC=gcc-8
        - CXX=g++-8
        - MATRIX_EVAL="CXX=g++-8 && CC=gcc-8"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
      before_install:
        # Here we just install Miniconda, which you shouldn't have to change.
        - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
        - chmod +x miniconda.sh
        - ./miniconda.sh -b -p $HOME/miniconda
        - export PATH=$HOME/miniconda/bin:$PATH
        - conda update --yes conda
        - conda install --yes hdf5 eigen
      script:
        - cmake -E make_directory build/Release
        - cd build/Release
        - cmake -DCMAKE_BUILD_TYPE=Release -DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -G "CodeBlocks - Unix Makefiles" ../../
        - cmake --build . --target all  --parallel
        - make install

    - os: linux
      compiler: gcc-8 (conda-forge libs)
      env:
        - COMPILER_NAME=gcc
        - GCC_VERSION=8
        - CC=gcc-8
        - CXX=g++-8
        - MATRIX_EVAL="CXX=g++-8 && CC=gcc-8"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
      before_install:
        # Here we just install Miniconda, which you shouldn't have to change.
        - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
        - chmod +x miniconda.sh
        - ./miniconda.sh -b -p $HOME/miniconda
        - export PATH=$HOME/miniconda/bin:$PATH
        - conda update --yes conda
        - conda config --add channels conda-forge
        - conda install --yes hdf5 hdf5-static eigen spdlog
      script:
        - cmake -E make_directory build/Release
        - cd build/Release
        - cmake -DCMAKE_BUILD_TYPE=Release -DPREFER_CONDA_LIBS:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -G "CodeBlocks - Unix Makefiles" ../../
        - cmake --build . --target all  --parallel
        - make install

    - os: linux
      compiler: gcc-7 (conda-forge libs)
      env:
        - COMPILER_NAME=gcc
        - GCC_VERSION=7
        - CC=gcc-7
        - CXX=g++-7
        - MATRIX_EVAL="CXX=g++-7 && CC=gcc-7"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-7
            - g++-7
      before_install:
        # Here we just install Miniconda, which you shouldn't have to change.
        - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
        - chmod +x miniconda.sh
        - ./miniconda.sh -b -p $HOME/miniconda
        - export PATH=$HOME/miniconda/bin:$PATH
        - conda update --yes conda
        - conda config --add channels conda-forge
        - conda install --yes hdf5 hdf5-static eigen spdlog
      script:
        - cmake -E make_directory build/Release
        - cd build/Release
        - cmake -DCMAKE_BUILD_TYPE=Release -DPREFER_CONDA_LIBS:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -G "CodeBlocks - Unix Makefiles" ../../
        - cmake --build . --target all  --parallel
        - make install

    - os: linux
      compiler: gcc-8 (apt libs)
      env:
        - COMPILER_NAME=gcc
        - GCC_VERSION=8
        - CC=gcc-8
        - CXX=g++-8
        - MATRIX_EVAL="CXX=g++-8 && CC=gcc-8"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
            - libhdf5-dev
            - libeigen3-dev
            - libspdlog-dev
      script:
        - cmake -E make_directory build/Release
        - cd build/Release
        - cmake -DCMAKE_BUILD_TYPE=Release -DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -G "CodeBlocks - Unix Makefiles" ../../
        - cmake --build . --target all  --parallel
        - make install


before_install:
  - eval "${MATRIX_EVAL}"

#script:
#  - cmake -E make_directory build/Debug
#  - cd build/Debug
#  - cmake -DCMAKE_BUILD_TYPE=Debug -DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -G "CodeBlocks - Unix Makefiles" ../../
#  - cmake --build .
#  - cd .. && cmake -E make_directory Release && cd Release
#  - cmake -DCMAKE_BUILD_TYPE=Release -DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -G "CodeBlocks - Unix Makefiles" ../../
#  - cmake --build .


