sudo: false
language: cpp
notifications:
  email: false
branches:
  only:
    - master


matrix:
  fast_finish: true
  include:
    - name: "xenial gcc"
      os: linux
      dist: xenial
      compiler: gcc
      env:
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"

    - name: "xenial clang"
      os: linux
      dist: xenial
      compiler: clang
      env:
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"

    - name: "bionic gcc"
      os: linux
      dist: bionic
      compiler: gcc
      env:
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"

    - name: "bionic clang"
      os: linux
      dist: bionic
      compiler: clang
      env:
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"

    - name: "xenial gcc-8"
      os: linux
      dist: xenial
      compiler: gcc
      env:
        - MATRIX_EVAL="CXX=g++-8 && CC=gcc-8"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
      before_install:
        eval "${MATRIX_EVAL}"
      env:
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"

    - name: "xenial clang-7"
      os: linux
      dist: xenial
      compiler: clang
      env:
        - MATRIX_EVAL="CXX=clang++-7 && CC=clang-7"
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline:  'ppa:ubuntu-toolchain-r/test'
            - sourceline:  'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main'
              key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - llvm-7-dev
            - clang-7
            - libstdc++-8-dev
      before_install:
        eval "${MATRIX_EVAL}"

    - name: "xenial gcc-8 conda libs"
      os: linux
      dist: xenial
      compiler: gcc
      env:
        - MATRIX_EVAL="CXX=g++-8 && CC=gcc-8"
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=OFF -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"

      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
      before_install:
        - eval "${MATRIX_EVAL}"
        # Here we just install Miniconda, which you shouldn't have to change.
        - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
        - chmod +x miniconda.sh
        - ./miniconda.sh -b -p $HOME/miniconda
        - export PATH=$HOME/miniconda/bin:$PATH
        - conda update --yes conda
        - conda install --yes hdf5 eigen


    - name: "xenial gcc-8 conda-forge libs"
      dist: xenial
      os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CXX=g++-8 && CC=gcc-8"
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=OFF -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
      before_install:
        - eval "${MATRIX_EVAL}"

        # Here we just install Miniconda, which you shouldn't have to change.
        - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
        - chmod +x miniconda.sh
        - ./miniconda.sh -b -p $HOME/miniconda
        - export PATH=$HOME/miniconda/bin:$PATH
        - conda update --yes conda
        - conda config --add channels conda-forge
        - conda install --yes hdf5 hdf5-static eigen spdlog

    - name: "xenial gcc-7 conda-forge libs"
      dist: xenial
      os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CXX=g++-7 && CC=gcc-7"
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=OFF -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-7
            - g++-7
      before_install:
        - eval "${MATRIX_EVAL}"
        # Here we just install Miniconda, which you shouldn't have to change.
        - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
        - chmod +x miniconda.sh
        - ./miniconda.sh -b -p $HOME/miniconda
        - export PATH=$HOME/miniconda/bin:$PATH
        - conda update --yes conda
        - conda config --add channels conda-forge
        - conda install --yes hdf5 hdf5-static eigen spdlog


    - name: "xenial gcc-8 apt libs"
    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CXX=g++-8 && CC=gcc-8"
        - CMAKE_FLAGS="-DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF"
      cache:
        apt: true
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
            - libhdf5-dev
            - libeigen3-dev
            - libspdlog-dev
      before_install:
        - eval "${MATRIX_EVAL}"




script:
  - cmake -E make_directory build/Debug
  - cd build/Debug
  - cmake -DCMAKE_BUILD_TYPE=Debug $CMAKE_FLAGS -G "CodeBlocks - Unix Makefiles" ../../
  - cmake --build . --target all  --parallel
  - make test
  - make install
#    - cd .. && cmake -E make_directory Release && cd Release
#  - cmake -DCMAKE_BUILD_TYPE=Release -DDOWNLOAD_MISSING:BOOL=ON -DENABLE_TESTS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -G "CodeBlocks - Unix Makefiles" ../../
#  - cmake --build .


