@PACKAGE_INIT@


####################################################################
### Append search paths for find_package and find_library calls  ###
####################################################################
if(H5PP_DOWNLOAD_METHOD MATCHES "find|fetch")
    # Search the same directories as during configure
    set(H5PP_SEARCH_PATHS @PACKAGE_H5PP_SEARCH_PATHS@)
    # Make sure we use h5pp find modules
    list(INSERT CMAKE_MODULE_PATH 0 ${CMAKE_CURRENT_LIST_DIR})
    # Append search paths for find_package and find_library calls
    if(EXISTS ${PACKAGE_PREFIX_DIR}/h5pp)
        list(INSERT CMAKE_PREFIX_PATH 0 ${PACKAGE_PREFIX_DIR}/h5pp)
    endif()
    list(INSERT CMAKE_PREFIX_PATH 0 ${PACKAGE_PREFIX_DIR})
    list(APPEND CMAKE_PREFIX_PATH "${H5PP_SEARCH_PATHS}")
    list(REMOVE_DUPLICATES CMAKE_PREFIX_PATH)
    list(REMOVE_DUPLICATES CMAKE_MODULE_PATH)
endif()


include(CMakeFindDependencyMacro)
if (NOT TARGET Eigen3::Eigen AND Eigen3::Eigen IN_LIST H5PP_ENABLED_TARGETS)
    find_dependency(Eigen3 3.3.4 REQUIRED)
    if(TARGET Eigen3 AND NOT TARGET Eigen3::Eigen)
        add_library(Eigen3::Eigen ALIAS Eigen3)
    endif()
endif()
if(TARGET Eigen3::Eigen)
    list(APPEND H5PP_FOUND_TARGETS Eigen3::Eigen)
endif()

if (NOT TARGET spdlog::spdlog AND spdlog::spdlog IN_LIST H5PP_ENABLED_TARGETS)
    find_dependency(spdlog 1.3.1 REQUIRED)
    if(TARGET spdlog AND NOT TARGET spdlog::spdlog)
        add_library(spdlog::spdlog ALIAS spdlog)
    endif()
endif()
if(TARGET spdlog::spdlog)
    list(APPEND H5PP_FOUND_TARGETS spdlog::spdlog)
endif()

if (NOT TARGET hdf5::hdf5 AND hdf5::hdf5 IN_LIST H5PP_ENABLED_TARGETS)
    find_dependency(HDF5 1.8 COMPONENTS C HL REQUIRED)
endif()

if(TARGET hdf5::hdf5)
    list(APPEND H5PP_FOUND_TARGETS  hdf5::hdf5)
endif()

if(NOT H5PP_FIND_QUIETLY)
    message(STATUS "h5pp: Found dependency targets: ${H5PP_FOUND_TARGETS}")
endif()