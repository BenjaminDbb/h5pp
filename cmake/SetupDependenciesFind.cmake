
if(H5PP_PACKAGE_MANAGER MATCHES "find")
    if(H5PP_PACKAGE_MANAGER STREQUAL "find")
        set(REQUIRED REQUIRED)
    endif()

    if(NOT "${CMAKE_BINARY_DIR}" IN_LIST CMAKE_MODULE_PATH)
        list(PREPEND CMAKE_MODULE_PATH ${CMAKE_BINARY_DIR})
        list(PREPEND CMAKE_MODULE_PATH ${CMAKE_BINARY_DIR}/conan)
    endif()

    # Start finding the dependencies
    if(H5PP_ENABLE_EIGEN3 AND NOT Eigen3_FOUND )
        find_package(Eigen3 3.3 ${REQUIRED})
        if(Eigen3_FOUND)
            target_link_libraries(deps INTERFACE Eigen3::Eigen)
        endif()
    endif()

    if(H5PP_ENABLE_FMT AND NOT fmt_FOUND)
        find_package(fmt 6.1.2 ${REQUIRED})
        if(fmt_FOUND)
            target_link_libraries(deps INTERFACE fmt::fmt)
        endif()
    endif()
    if(H5PP_ENABLE_SPDLOG AND NOT spdlog_FOUND)
        find_package(spdlog 1.5.0 ${REQUIRED})
        if(spdlog_FOUND AND TARGET spdlog AND NOT TARGET spdlog::spdlog)
            add_library(spdlog::spdlog ALIAS spdlog)
        endif()
        if(spdlog_FOUND)
            target_link_libraries(deps INTERFACE spdlog::spdlog)
        endif()
    endif()

    if (NOT HDF5_FOUND)
        # FindHDF5.cmake bundled with h5pp defines target HDF5::HDF5 with "everything"
        # CMake version >= 3.20 defines target HDF5::HDF5 with imp lib. but no link dependencies.
        # CMake version >= 3.19 Earlier versions of CMake define target hdf5::hdf5_hl
        # hdf5-config.cmake from source installations will define target hdf5_hl-<static|shared>

        set(HDF5_FIND_DEBUG ON)
        find_package(HDF5 1.8 COMPONENTS C HL ${REQUIRED})
        if(HDF5_FOUND)
            if(TARGET HDF5::HDF5)
                target_link_libraries(deps INTERFACE HDF5::HDF5)
            elseif(TARGET hdf5::hdf5_hl)
                target_link_libraries(deps INTERFACE hdf5::hdf5_hl)
            elseif(TARGET hdf5_hl-static OR TARGET hdf5_hl-shared)
                if(NOT BUILD_SHARED_LIBS OR HDF5_USE_STATIC_LIBRARIES)
                    if(TARGET hdf5_hl-static)
                        target_link_libraries(deps INTERFACE hdf5_hl-static)
                    elseif(TARGET hdf5_hl-shared)
                        target_link_libraries(deps INTERFACE hdf5_hl-shared)
                    endif()
                endif()
            else()
                add_library(HDF5::HDF5 INTERFACE IMPORTED)
                target_link_libraries(HDF5::HDF5 INTERFACE ${HDF5_LIBRARIES})
                target_include_directories(HDF5::HDF5 INTERFACE ${HDF5_INCLUDE_DIRS} ${HDF5_INCLUDE_DIR})
                target_compile_definitions(HDF5::HDF5 INTERFACE ${HDF5_DEFINITIONS})
                target_link_directories(deps INTERFACE HDF5::HDF5)
            endif()
        endif()
    endif()
endif()