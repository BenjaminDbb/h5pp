@PACKAGE_INIT@



set(H5PP_VALID_COMPONENTS EIGEN3 SPDLOG HDF5 ALL NONE)

if(NOT H5PP_FIND_COMPONENTS)
    list(APPEND H5PP_FIND_COMPONENTS ALL)
endif()

foreach(component ${H5PP_FIND_COMPONENTS})
    if(NOT "${component}" IN_LIST H5PP_VALID_COMPONENTS)
        message(FATAL_ERROR "Given component [${component}] is not one of EIGEN3, SPDLOG, HDF5, NONE or ALL")
    elseif("ALL" IN_LIST H5PP_VALID_COMPONENTS)
        list(APPEND H5PP_CHOSEN_COMPONENTS EIGEN3 SPDLOG HDF5)
        break()
    elseif("NONE" IN_LIST H5PP_VALID_COMPONENTS)
        set(H5PP_CHOSEN_COMPONENTS)
        break()
    elseif("${component}" IN_LIST H5PP_VALID_COMPONENTS)
        list(APPEND H5PP_CHOSEN_COMPONENTS ${component})
    endif()
endforeach()


if(H5PP_FIND_REQUIRED_EIGEN3)
    set(EIGEN3_REQUIRED REQUIRED)
endif()

if(H5PP_FIND_REQUIRED_SPDLOG)
    set(SPDLOG_REQUIRED REQUIRED)
endif()

if(H5PP_FIND_REQUIRED_HDF5)
    set(HDF5_REQUIRED REQUIRED)
endif()

if(H5PP_FIND_REQUIRED_ALL)
    set(EIGEN3_REQUIRED REQUIRED)
    set(SPDLOG_REQUIRED REQUIRED)
    set(HDF5_REQUIRED REQUIRED)
endif()

if(NOT H5PP_FIND_QUIETLY)
    message(STATUS "h5pp: Searching for dependencies [${H5PP_CHOSEN_COMPONENTS}]")
endif()



include(CMakeFindDependencyMacro)
if (NOT TARGET Eigen3::Eigen AND "EIGEN3" IN_LIST H5PP_CHOSEN_COMPONENTS)
    set(PACKAGE_PREFIX_DIR              ${H5PP_PACKAGE_PREFIX_DIR_SAVED})
    find_dependency(Eigen3 3.3.4)
    if(TARGET Eigen3::Eigen)
        list(APPEND H5PP_FOUND_TARGETS Eigen3::Eigen)
    elseif(TARGET Eigen3)
        add_library(Eigen3::Eigen ALIAS Eigen3)
    endif()
elseif(TARGET Eigen3::Eigen)
    # Just add it to h5pp::deps
    list(APPEND H5PP_FOUND_TARGETS Eigen3::Eigen)
endif()
if(TARGET Eigen3::Eigen AND NOT H5PP_FIND_QUIETLY)
    message(STATUS "h5pp: Found dependency [EIGEN3] -- Target: Eigen3::Eigen")
endif()

if (NOT TARGET spdlog::spdlog AND "SPDLOG" IN_LIST H5PP_CHOSEN_COMPONENTS)
    set(PACKAGE_PREFIX_DIR              ${H5PP_PACKAGE_PREFIX_DIR_SAVED})
    find_dependency(spdlog 1.3.1)

    if(TARGET spdlog::spdlog)
        list(APPEND H5PP_FOUND_TARGETS  spdlog::spdlog)
    elseif(TARGET spdlog)
        add_library(spdlog::spdlog ALIAS spdlog)
    endif()
elseif(TARGET spdlog::spdlog)
        # Just add it to h5pp::deps
        list(APPEND H5PP_FOUND_TARGETS spdlog::spdlog)
endif()
if(TARGET spdlog::spdlog AND NOT H5PP_FIND_QUIETLY)
    message(STATUS "h5pp: Found dependency [SPDLOG] -- Target: spdlog::spdlog")
endif()

if (NOT TARGET hdf5::hdf5 AND "HDF5" IN_LIST H5PP_CHOSEN_COMPONENTS)
    set(PACKAGE_PREFIX_DIR              ${H5PP_PACKAGE_PREFIX_DIR_SAVED})
    include(${H5PP_DIR}/FindPackageHDF5.cmake)
    find_package_hdf5()
    if(TARGET hdf5::hdf5)
        list(APPEND H5PP_FOUND_TARGETS  hdf5::hdf5)
        if(NOT H5PP_FIND_QUIETLY)
            message(STATUS "h5pp: Found dependency [HDF5]   -- Target: hdf5::hdf5")
        endif()
    endif()
elseif(TARGET hdf5::hdf5)
        # Just add it to h5pp::deps
        list(APPEND H5PP_FOUND_TARGETS hdf5::hdf5)
endif()


# Create imported target h5pp::deps
if(NOT TARGET h5pp::deps)
    add_library(h5pp::deps INTERFACE IMPORTED)
endif()

set_target_properties(h5pp::deps PROPERTIES
  INTERFACE_LINK_LIBRARIES "${H5PP_FOUND_TARGETS}"
)

