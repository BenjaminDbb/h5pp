<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="h5pp_hdf5_8h" kind="file" language="C++">
    <compoundname>h5ppHdf5.h</compoundname>
    <includes refid="h5pp_eigen_8h" local="yes">h5ppEigen.h</includes>
    <includes refid="h5pp_enums_8h" local="yes">h5ppEnums.h</includes>
    <includes refid="h5pp_filesystem_8h" local="yes">h5ppFilesystem.h</includes>
    <includes refid="h5pp_hyperslab_8h" local="yes">h5ppHyperslab.h</includes>
    <includes refid="h5pp_info_8h" local="yes">h5ppInfo.h</includes>
    <includes refid="h5pp_logger_8h" local="yes">h5ppLogger.h</includes>
    <includes refid="h5pp_property_lists_8h" local="yes">h5ppPropertyLists.h</includes>
    <includes refid="h5pp_type_sfinae_8h" local="yes">h5ppTypeSfinae.h</includes>
    <includes refid="h5pp_utils_8h" local="yes">h5ppUtils.h</includes>
    <includes local="no">hdf5.h</includes>
    <includes local="no">map</includes>
    <includes local="no">typeindex</includes>
    <includes local="no">utility</includes>
    <includedby refid="h5pp_file_8h" local="yes">/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppFile.h</includedby>
    <includedby refid="h5pp_scan_8h" local="yes">/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h</includedby>
    <incdepgraph>
      <node id="25">
        <label>list</label>
      </node>
      <node id="34">
        <label>h5ppPropertyLists.h</label>
        <link refid="h5pp_property_lists_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>h5ppSpdlog.h</label>
        <link refid="h5pp_spdlog_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iterator</label>
      </node>
      <node id="30">
        <label>h5ppLogger.h</label>
        <link refid="h5pp_logger_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>h5ppTypeCompound.h</label>
        <link refid="h5pp_type_compound_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>variant</label>
      </node>
      <node id="8">
        <label>h5ppDimensionType.h</label>
        <link refid="h5pp_dimension_type_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>numeric</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="31">
        <label>hdf5_hl.h</label>
      </node>
      <node id="37">
        <label>map</label>
      </node>
      <node id="11">
        <label>h5ppTypeSfinae.h</label>
        <link refid="h5pp_type_sfinae_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>h5ppFilesystem.h</label>
        <link refid="h5pp_filesystem_8h"/>
      </node>
      <node id="5">
        <label>h5ppEnums.h</label>
        <link refid="h5pp_enums_8h"/>
      </node>
      <node id="20">
        <label>string_view</label>
      </node>
      <node id="14">
        <label>h5ppHid.h</label>
        <link refid="h5pp_hid_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h</label>
        <link refid="h5pp_hdf5_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>h5ppEigen.h</label>
        <link refid="h5pp_eigen_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>h5ppUtils.h</label>
        <link refid="h5pp_utils_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>optional</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="28">
        <label>utility</label>
      </node>
      <node id="18">
        <label>array</label>
      </node>
      <node id="19">
        <label>sstream</label>
      </node>
      <node id="15">
        <label>hdf5.h</label>
      </node>
      <node id="7">
        <label>h5ppHyperslab.h</label>
        <link refid="h5pp_hyperslab_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>h5ppFormat.h</label>
        <link refid="h5pp_format_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>h5ppInfo.h</label>
        <link refid="h5pp_info_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>h5ppOptional.h</label>
        <link refid="h5pp_optional_8h"/>
      </node>
      <node id="21">
        <label>type_traits</label>
      </node>
      <node id="17">
        <label>complex</label>
      </node>
      <node id="23">
        <label>algorithm</label>
      </node>
      <node id="36">
        <label>cstring</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="32">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/david/GitProjects/h5pp/h5pp/include/h5pp/h5pp.h</label>
        <link refid="h5pp_8h"/>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h</label>
        <link refid="h5pp_hdf5_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppFile.h</label>
        <link refid="h5pp_file_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h</label>
        <link refid="h5pp_scan_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceh5pp">h5pp</innernamespace>
    <innernamespace refid="namespaceh5pp_1_1hdf5">h5pp::hdf5</innernamespace>
    <innernamespace refid="namespaceh5pp_1_1hdf5_1_1internal">h5pp::hdf5::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_eigen_8h" kindref="compound">h5ppEigen.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_enums_8h" kindref="compound">h5ppEnums.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_filesystem_8h" kindref="compound">h5ppFilesystem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_hyperslab_8h" kindref="compound">h5ppHyperslab.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_info_8h" kindref="compound">h5ppInfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_logger_8h" kindref="compound">h5ppLogger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_property_lists_8h" kindref="compound">h5ppPropertyLists.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_type_sfinae_8h" kindref="compound">h5ppTypeSfinae.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h5pp_utils_8h" kindref="compound">h5ppUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hdf5.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeindex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight></codeline>
<codeline lineno="18" refid="namespaceh5pp_1_1hdf5" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceh5pp_1_1hdf5" kindref="compound">h5pp::hdf5</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespaceh5pp_1_1hdf5_1a566e53d7ea1d7430758558216b531ea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1a566e53d7ea1d7430758558216b531ea8" kindref="member">pathCumulativeSplit</ref>(std::string_view<sp/>strv,<sp/>std::string_view<sp/>delim)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string_view&gt;<sp/>output;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentPosition<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(currentPosition<sp/>&lt;<sp/>strv.size())<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>foundPosition<sp/>=<sp/>strv.find_first_of(delim,<sp/>currentPosition);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentPosition<sp/>!=<sp/>foundPosition)<sp/>{<sp/>output.emplace_back(strv.substr(0,<sp/>foundPosition));<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(foundPosition<sp/>==<sp/>std::string_view::npos)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentPosition<sp/>=<sp/>foundPosition<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_base_of_v&lt;h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">::h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">_base&lt;h5x&gt;,<sp/>h5x&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="33" refid="namespaceh5pp_1_1hdf5_1a5c632531114757980c02d118bcd68ecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>std::string<sp/><ref refid="namespaceh5pp_1_1hdf5_1a5c632531114757980c02d118bcd68ecd" kindref="member">getName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>buf;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssize_t<sp/><sp/><sp/><sp/><sp/>namesize<sp/>=<sp/>H5Iget_name(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(namesize<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(namesize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Iget_name(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>buf.data(),<sp/>namesize<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" kindref="member">getRank</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Sget_simple_extent_ndims(space);<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="namespaceh5pp_1_1hdf5_1a1b6eefa6d31ba4a95f244e6c8ba2f1ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" kindref="member">getRank</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dset)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>space<sp/>=<sp/>H5Dget_space(dset);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" kindref="member">getRank</ref>(space);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="namespaceh5pp_1_1hdf5_1aa5f6c1a0e7c3bce369307965e7e26057" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" kindref="member">getRank</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>&amp;attr)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>space<sp/>=<sp/>H5Aget_space(attr);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" kindref="member">getRank</ref>(space);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>hsize_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">getSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(H5Sget_simple_extent_npoints(space));<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespaceh5pp_1_1hdf5_1a084f493971ed7b483a1704393c501772" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>hsize_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">getSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dataset)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>space<sp/>=<sp/>H5Dget_space(dataset);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">getSize</ref>(space);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespaceh5pp_1_1hdf5_1ad97290e3bf87798a49ae014962e3b2d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>hsize_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">getSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>&amp;attribute)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>space<sp/>=<sp/>H5Aget_space(attribute);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">getSize</ref>(space);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>hsize_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(H5Sget_select_npoints(space));<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;hsize_t&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndims<sp/>=<sp/>H5Sget_simple_extent_ndims(space);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ndims<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>dims(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ndims));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sget_simple_extent_dims(space,<sp/>dims.data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dims;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespaceh5pp_1_1hdf5_1aa8f2dfc35e262fa205a817f7eb16060c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;hsize_t&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dataset)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>space<sp/>=<sp/>H5Dget_space(dataset);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(space);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="namespaceh5pp_1_1hdf5_1a7778b737ecc05f34f8954f483fbe98ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;hsize_t&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>&amp;attribute)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>space<sp/>=<sp/>H5Aget_space(attribute);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(space);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespaceh5pp_1_1hdf5_1a5dbf8ec55257c10d08366120311c0bc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>H5D_layout_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1a5dbf8ec55257c10d08366120311c0bc0" kindref="member">getLayout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;dataset_creation_property_list)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Pget_layout(dataset_creation_property_list);<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="namespaceh5pp_1_1hdf5_1ae2ef3e2ce8b12c662df536e329d71a21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>H5D_layout_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1a5dbf8ec55257c10d08366120311c0bc0" kindref="member">getLayout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dataset)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>dcpl<sp/>=<sp/>H5Dget_create_plist(dataset);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Pget_layout(dcpl);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="namespaceh5pp_1_1hdf5_1af1da3a25187be4f7c4f7b89080f04c5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::optional&lt;std::vector&lt;hsize_t&gt;&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1af1da3a25187be4f7c4f7b89080f04c5f" kindref="member">getChunkDimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;dsetCreatePropertyList)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layout<sp/>=<sp/>H5Pget_layout(dsetCreatePropertyList);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(layout<sp/>!=<sp/>H5D_CHUNKED)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ndims<sp/>=<sp/>H5Pget_chunk(dsetCreatePropertyList,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ndims<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>chunk<sp/>dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ndims<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>chunkDims(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ndims));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Pget_chunk(dsetCreatePropertyList,<sp/>ndims,<sp/>chunkDims.data());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chunkDims;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespaceh5pp_1_1hdf5_1a70784481be2afbd68c71dc671bebf606" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::optional&lt;std::vector&lt;hsize_t&gt;&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1af1da3a25187be4f7c4f7b89080f04c5f" kindref="member">getChunkDimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dataset)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>dcpl<sp/>=<sp/>H5Dget_create_plist(dataset);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1af1da3a25187be4f7c4f7b89080f04c5f" kindref="member">getChunkDimensions</ref>(dcpl);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="namespaceh5pp_1_1hdf5_1ab553655036e9987da70ffefb1e07f262" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::optional&lt;std::vector&lt;hsize_t&gt;&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1ab553655036e9987da70ffefb1e07f262" kindref="member">getMaxDimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/>H5D_layout_t<sp/>layout)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(layout<sp/>!=<sp/>H5D_CHUNKED)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_simple_extent_type(space)<sp/>!=<sp/>H5S_SIMPLE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>H5Sget_simple_extent_ndims(space);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rank<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>maxdims(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rank));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sget_simple_extent_dims(space,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>maxdims.data());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxdims;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="namespaceh5pp_1_1hdf5_1a18ed1b43dca9458d5ac4b2198231d842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::optional&lt;std::vector&lt;hsize_t&gt;&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1ab553655036e9987da70ffefb1e07f262" kindref="member">getMaxDimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dataset)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>space<sp/>=<sp/>H5Dget_space(dataset);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>dcpl<sp/><sp/>=<sp/>H5Dget_create_plist(dataset);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ab553655036e9987da70ffefb1e07f262" kindref="member">getMaxDimensions</ref>(space,<sp/><ref refid="namespaceh5pp_1_1hdf5_1a5dbf8ec55257c10d08366120311c0bc0" kindref="member">getLayout</ref>(dcpl));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="namespaceh5pp_1_1hdf5_1aa27a8141d6f4925f4d666a26644527fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>herr_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1aa27a8141d6f4925f4d666a26644527fe" kindref="member">H5Dvlen_get_buf_size_safe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/>hsize_t<sp/>*vlen)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vlen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(type)<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_simple_extent_type(space)<sp/>!=<sp/>H5S_SCALAR)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>retval<sp/>=<sp/>H5Dvlen_get_buf_size(dset,<sp/>type,<sp/>space,<sp/>vlen);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&gt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Dget_storage_size(dset)<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>H5Sget_simple_extent_npoints(space);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>char<sp/>*&gt;<sp/>vdata{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size)};<sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>for<sp/>pointers<sp/>for<sp/>&quot;size&quot;<sp/>number<sp/>of<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HDF5<sp/>allocates<sp/>space<sp/>for<sp/>each<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>retval<sp/>=<sp/>H5Dread(dset,<sp/>type,<sp/>H5S_ALL,<sp/>H5S_ALL,<sp/>H5P_DEFAULT,<sp/>vdata.data());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>up<sp/>the<sp/>number<sp/>of<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_len<sp/>=<sp/>h5pp::constants::maxSizeContiguous;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elem<sp/>:<sp/>vdata)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elem<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vlen<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(strnlen(elem,<sp/>max_len))<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>null-terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Dvlen_reclaim(type,<sp/>space,<sp/>H5P_DEFAULT,<sp/>vdata.data());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="namespaceh5pp_1_1hdf5_1a42fb5d308b0ed7582aed6d4581241f4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>herr_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1a42fb5d308b0ed7582aed6d4581241f4a" kindref="member">H5Avlen_get_buf_size_safe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>&amp;attr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/>hsize_t<sp/>*vlen)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vlen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(type)<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Aget_storage_size(attr)<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>H5Sget_simple_extent_npoints(space);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>char<sp/>*&gt;<sp/>vdata{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size)};<sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>pointers<sp/>for<sp/>&quot;size&quot;<sp/>number<sp/>of<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HDF5<sp/>allocates<sp/>space<sp/>for<sp/>each<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>retval<sp/>=<sp/>H5Aread(attr,<sp/>type,<sp/>vdata.data());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>up<sp/>the<sp/>number<sp/>of<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxLen<sp/>=<sp/>h5pp::constants::maxSizeCompact;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elem<sp/>:<sp/>vdata)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elem<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vlen<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(strnlen(elem,<sp/>maxLen))<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>null-terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Dvlen_reclaim(type,<sp/>space,<sp/>H5P_DEFAULT,<sp/>vdata.data());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" kindref="member">getBytesPerElem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;h5Type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Tget_size(h5Type);<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">getBytesTotal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" kindref="member">getBytesPerElem</ref>(type)<sp/>*<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">getSize</ref>(space);<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="namespaceh5pp_1_1hdf5_1a24ec8a944e3eba035246370d2e99ca03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">getBytesTotal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dset,<sp/>std::optional&lt;hid::h5s&gt;<sp/>space,<sp/>std::optional&lt;hid::h5t&gt;<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>type)<sp/>type<sp/>=<sp/>H5Dget_type(dset);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>space)<sp/>space<sp/>=<sp/>H5Dget_space(dset);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(type.value())<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hsize_t<sp/>vlen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/><sp/>err<sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1aa27a8141d6f4925f4d666a26644527fe" kindref="member">H5Dvlen_get_buf_size_safe</ref>(dset,<sp/>type.<ref refid="classh5pp_1_1hid_1_1hid__base_1a49d7564677e93a9b92fbf6eb06987e52" kindref="member">value</ref>(),<sp/>space.value(),<sp/>&amp;vlen);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vlen;<sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>total<sp/>number<sp/>of<sp/>bytes<sp/>required<sp/>to<sp/>store<sp/>the<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">getBytesTotal</ref>(space.value(),<sp/>type.value());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">getBytesTotal</ref>(space.value(),<sp/>type.value());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="namespaceh5pp_1_1hdf5_1a0977eba6f1ab37131a69210ef47a1b65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">getBytesTotal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>&amp;attr,<sp/>std::optional&lt;hid::h5s&gt;<sp/>space,<sp/>std::optional&lt;hid::h5t&gt;<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>type)<sp/>type<sp/>=<sp/>H5Aget_type(attr);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>space)<sp/>space<sp/>=<sp/>H5Aget_space(attr);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(type.value())<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hsize_t<sp/>vlen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/><sp/>err<sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a42fb5d308b0ed7582aed6d4581241f4a" kindref="member">H5Avlen_get_buf_size_safe</ref>(attr,<sp/>type.<ref refid="classh5pp_1_1hid_1_1hid__base_1a49d7564677e93a9b92fbf6eb06987e52" kindref="member">value</ref>(),<sp/>space.value(),<sp/>&amp;vlen);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vlen;<sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>total<sp/>number<sp/>of<sp/>bytes<sp/>required<sp/>to<sp/>store<sp/>the<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">getBytesTotal</ref>(space.value(),<sp/>type.value());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">getBytesTotal</ref>(space.value(),<sp/>type.value());</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="namespaceh5pp_1_1hdf5_1a8f6b7cdecaddc373aad77a7c82ad2db0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8f6b7cdecaddc373aad77a7c82ad2db0" kindref="member">getBytesSelected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" kindref="member">getBytesPerElem</ref>(type)<sp/>*<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(space);<sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="221" refid="namespaceh5pp_1_1hdf5_1ac48d320203ec4d800865791009888f0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac48d320203ec4d800865791009888f0b" kindref="member">assertWriteBufferIsLargeEnough</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tget_class(type)<sp/>==<sp/>H5T_STRING)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(type))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>This<sp/>transfers<sp/>the<sp/>string<sp/>from<sp/>memory<sp/>until<sp/>finding<sp/>a<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdf5Byte<sp/>=<sp/>H5Tget_size(type);<sp/></highlight><highlight class="comment">//<sp/>Chars<sp/>including<sp/>null-terminator.<sp/>The<sp/>memory<sp/>buffer<sp/>must<sp/>fit<sp/>this<sp/>size.<sp/>Also,<sp/>these<sp/>many<sp/>bytes<sp/>will<sp/>participate<sp/>in<sp/>IO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdf5Size<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(space);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataByte<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1a7b782dfa72ad4bb7d929a453af051d68" kindref="member">h5pp::util::getCharArraySize</ref>(data,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Allocated<sp/>chars<sp/>including<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa8efa111edbaaac102e0bd279dc08a11" kindref="member">h5pp::util::getSize</ref>(data);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataByte<sp/>&lt;<sp/>hdf5Byte)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>text<sp/>buffer<sp/>given<sp/>for<sp/>this<sp/>write<sp/>operation<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>selected<sp/>space<sp/>in<sp/>memory.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Data<sp/>transfer<sp/>would<sp/>read<sp/>from<sp/>memory<sp/>out<sp/>of<sp/>bounds\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>given<sp/><sp/><sp/><sp/>:<sp/>num<sp/>strings<sp/>{}<sp/>|<sp/>bytes<sp/>{}<sp/>=<sp/>{}<sp/>chars<sp/>+<sp/>&apos;\\0&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>selected<sp/>:<sp/>num<sp/>strings<sp/>{}<sp/>|<sp/>bytes<sp/>{}<sp/>=<sp/>{}<sp/>chars<sp/>+<sp/>&apos;\\0&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>type<sp/><sp/><sp/><sp/><sp/>:<sp/>[{}]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataByte,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataByte<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Size,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Byte,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Byte<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;()));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(not<sp/>h5pp::type::sfinae::has_size_v&lt;DataType&gt;)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdf5Size<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(space);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdf5Byte<sp/>=<sp/>h5pp::util::getBytesPerElem&lt;DataType&gt;()<sp/>*<sp/>hdf5Size;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataByte<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa9ef02af8c76ad03c851818ac0453ff5" kindref="member">h5pp::util::getBytesTotal</ref>(data);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa8efa111edbaaac102e0bd279dc08a11" kindref="member">h5pp::util::getSize</ref>(data);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataByte<sp/>&lt;<sp/>hdf5Byte)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>buffer<sp/>given<sp/>for<sp/>this<sp/>write<sp/>operation<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>selected<sp/>space<sp/>in<sp/>memory.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Data<sp/>transfer<sp/>would<sp/>read<sp/>from<sp/>memory<sp/>out<sp/>of<sp/>bounds\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>given<sp/><sp/><sp/>:<sp/>size<sp/>{}<sp/>|<sp/>bytes<sp/>{}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>selected:<sp/>size<sp/>{}<sp/>|<sp/>bytes<sp/>{}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>type<sp/><sp/><sp/><sp/><sp/>:<sp/>[{}]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataByte,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Size,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Byte,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;()));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="265" refid="namespaceh5pp_1_1hdf5_1a05e2d3f617c99b45cc39b585605c2ab8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a05e2d3f617c99b45cc39b585605c2ab8" kindref="member">assertReadBufferIsLargeEnough</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tget_class(type)<sp/>==<sp/>H5T_STRING)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(type))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>resized<sp/>on<sp/>the<sp/>fly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdf5Byte<sp/>=<sp/>H5Tget_size(type);<sp/></highlight><highlight class="comment">//<sp/>Chars<sp/>including<sp/>null-terminator.<sp/>The<sp/>memory<sp/>buffer<sp/>must<sp/>fit<sp/>this<sp/>size.<sp/>Also,<sp/>these<sp/>many<sp/>bytes<sp/>will<sp/>participate<sp/>in<sp/>IO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdf5Size<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(space);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataByte<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1a7b782dfa72ad4bb7d929a453af051d68" kindref="member">h5pp::util::getCharArraySize</ref>(data)<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Chars<sp/>including<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa8efa111edbaaac102e0bd279dc08a11" kindref="member">h5pp::util::getSize</ref>(data);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataByte<sp/>&lt;<sp/>hdf5Byte)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>text<sp/>buffer<sp/>allocated<sp/>for<sp/>this<sp/>read<sp/>operation<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>string<sp/>buffer<sp/>found<sp/>on<sp/>the<sp/>dataset.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Data<sp/>transfer<sp/>would<sp/>write<sp/>into<sp/>memory<sp/>out<sp/>of<sp/>bounds\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>allocated<sp/>buffer:<sp/>num<sp/>strings<sp/>{}<sp/>|<sp/>bytes<sp/>{}<sp/>=<sp/>{}<sp/>chars<sp/>+<sp/>&apos;\\0&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>selected<sp/><sp/>buffer:<sp/>num<sp/>strings<sp/>{}<sp/>|<sp/>bytes<sp/>{}<sp/>=<sp/>{}<sp/>chars<sp/>+<sp/>&apos;\\0&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>type<sp/><sp/><sp/><sp/><sp/>:<sp/>[{}]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataByte,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataByte<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Size,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Byte,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Byte<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;()));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(not<sp/>h5pp::type::sfinae::has_size_v&lt;DataType&gt;)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdf5Size<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(space);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdf5Byte<sp/>=<sp/>h5pp::util::getBytesPerElem&lt;DataType&gt;()<sp/>*<sp/>hdf5Size;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataByte<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa9ef02af8c76ad03c851818ac0453ff5" kindref="member">h5pp::util::getBytesTotal</ref>(data);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa8efa111edbaaac102e0bd279dc08a11" kindref="member">h5pp::util::getSize</ref>(data);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataByte<sp/>&lt;<sp/>hdf5Byte)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>buffer<sp/>allocated<sp/>for<sp/>this<sp/>read<sp/>operation<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>selected<sp/>space<sp/>in<sp/>memory.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Data<sp/>transfer<sp/>would<sp/>write<sp/>into<sp/>memory<sp/>out<sp/>of<sp/>bounds\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>allocated<sp/>:<sp/>size<sp/>{}<sp/>|<sp/>bytes<sp/>{}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>selected<sp/><sp/>:<sp/>size<sp/>{}<sp/>|<sp/>bytes<sp/>{}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>type<sp/><sp/><sp/><sp/><sp/>:<sp/>[{}]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataByte,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Size,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdf5Byte,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;()));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>userDataType&gt;</highlight></codeline>
<codeline lineno="309" refid="namespaceh5pp_1_1hdf5_1ab2b9ac30a92563bb0ee2f7aecda940b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ab2b9ac30a92563bb0ee2f7aecda940b1" kindref="member">checkBytesPerElemMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;h5Type)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dsetTypeSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" kindref="member">h5pp::hdf5::getBytesPerElem</ref>(h5Type);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dataTypeSize<sp/>=<sp/>h5pp::util::getBytesPerElem&lt;userDataType&gt;();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tget_class(h5Type)<sp/>==<sp/>H5T_STRING)<sp/>dsetTypeSize<sp/>=<sp/>H5Tget_size(H5T_C_S1);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataTypeSize<sp/>!=<sp/>dsetTypeSize)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>dsetType<sp/>may<sp/>have<sp/>been<sp/>generated<sp/>by<sp/>H5Tpack,<sp/>in<sp/>which<sp/>case<sp/>we<sp/>should<sp/>check<sp/>against<sp/>the<sp/>native<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/>packedTypesize<sp/>=<sp/>dsetTypeSize;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>nativetype<sp/><sp/><sp/><sp/><sp/>=<sp/>H5Tget_native_type(h5Type,<sp/>H5T_DIR_ASCEND);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetTypeSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" kindref="member">h5pp::hdf5::getBytesPerElem</ref>(nativetype);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataTypeSize<sp/>!=<sp/>dsetTypeSize)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Type<sp/>size<sp/>mismatch:<sp/>dataset<sp/>type<sp/>{}<sp/>bytes<sp/>|<sp/>given<sp/>type<sp/>{}<sp/>bytes&quot;</highlight><highlight class="normal">,<sp/>dsetTypeSize,<sp/>dataTypeSize);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Detected<sp/>packed<sp/>HDF5<sp/>type:<sp/>packed<sp/>size<sp/>{}<sp/>bytes<sp/>|<sp/>native<sp/>size<sp/>{}<sp/>bytes.<sp/>This<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>h5pp<sp/>yet!&quot;</highlight><highlight class="normal">,<sp/>packedTypesize,<sp/>dataTypeSize);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataTypeSize<sp/>==<sp/>dsetTypeSize;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;not<sp/>std::is_base_of_v&lt;h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">::h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">_base&lt;DataType&gt;,<sp/>DataType&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="327" refid="namespaceh5pp_1_1hdf5_1a26fbccb921177486030270be41ab25e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a26fbccb921177486030270be41ab25e4" kindref="member">assertBytesPerElemMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;h5Type)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(h5pp::type::sfinae::is_container_of_v&lt;DataType,std::string&gt;)<sp/>return;<sp/>//<sp/>Each<sp/>element<sp/>is<sp/>potentially<sp/>a<sp/>different<sp/>length!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dsetTypeSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" kindref="member">h5pp::hdf5::getBytesPerElem</ref>(h5Type);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dataTypeSize<sp/>=<sp/>h5pp::util::getBytesPerElem&lt;DataType&gt;();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tget_class(h5Type)<sp/>==<sp/>H5T_STRING)<sp/>dsetTypeSize<sp/>=<sp/>H5Tget_size(H5T_C_S1);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataTypeSize<sp/>!=<sp/>dsetTypeSize)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>dsetType<sp/>may<sp/>have<sp/>been<sp/>generated<sp/>by<sp/>H5Tpack,<sp/>in<sp/>which<sp/>case<sp/>we<sp/>should<sp/>check<sp/>against<sp/>the<sp/>native<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/>packedTypesize<sp/>=<sp/>dsetTypeSize;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>nativetype<sp/><sp/><sp/><sp/><sp/>=<sp/>H5Tget_native_type(h5Type,<sp/>H5T_DIR_ASCEND);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetTypeSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" kindref="member">h5pp::hdf5::getBytesPerElem</ref>(nativetype);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataTypeSize<sp/>!=<sp/>dsetTypeSize)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Type<sp/>size<sp/>mismatch:<sp/>dataset<sp/>type<sp/>is<sp/>[{}]<sp/>bytes<sp/>|<sp/>Type<sp/>of<sp/>given<sp/>data<sp/>is<sp/>[{}]<sp/>bytes&quot;</highlight><highlight class="normal">,<sp/>dsetTypeSize,<sp/>dataTypeSize));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Detected<sp/>packed<sp/>HDF5<sp/>type:<sp/>packed<sp/>size<sp/>{}<sp/>bytes<sp/>|<sp/>native<sp/>size<sp/>{}<sp/>bytes.<sp/>This<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>h5pp<sp/>yet!&quot;</highlight><highlight class="normal">,<sp/>packedTypesize,<sp/>dataTypeSize);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="345" refid="namespaceh5pp_1_1hdf5_1ab60e99e8ea132187eec6b21115b98705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ab60e99e8ea132187eec6b21115b98705" kindref="member">setStringSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data,<sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type,<sp/>hsize_t<sp/>&amp;size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;bytes,<sp/>std::vector&lt;hsize_t&gt;<sp/>&amp;dims)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5T_class_t<sp/>dataClass<sp/>=<sp/>H5Tget_class(type);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataClass<sp/>==<sp/>H5T_STRING)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>datatype<sp/>may<sp/>either<sp/>be<sp/>text<sp/>or<sp/>a<sp/>container<sp/>of<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Examples<sp/>of<sp/>pure<sp/>text<sp/>are<sp/>std::string<sp/>or<sp/>char[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example<sp/>of<sp/>a<sp/>container<sp/>of<sp/>text<sp/>is<sp/>std::vector&lt;std::string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>it<sp/>is<sp/>pure<sp/>text<sp/>and<sp/>dimensions<sp/>are<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Space<sp/>is<sp/>H5S_SCALAR<sp/>because<sp/>dimensions<sp/>are<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Rank<sp/>is<sp/>0<sp/>because<sp/>dimensions<sp/>are<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Size<sp/>is<sp/>1<sp/>because<sp/>size<sp/>=<sp/>prod<sp/>1*dim(i)<sp/>*<sp/>dim(j)...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>set<sp/>size<sp/>H5T_VARIABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/>it<sp/>is<sp/>pure<sp/>text<sp/>and<sp/>dimensions<sp/>were<sp/>specified<sp/>other<sp/>than<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Space<sp/>is<sp/>H5S_SIMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Rank<sp/>is<sp/>1<sp/>or<sp/>more<sp/>because<sp/>dimensions<sp/>were<sp/>given<sp/>as<sp/>{i,j,k...}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Size<sp/>is<sp/>n,<sp/>because<sp/>size<sp/>=<sp/>prod<sp/>1*dim(i)<sp/>*<sp/>dim(j)...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Here<sp/>n<sp/>is<sp/>number<sp/>of<sp/>chars<sp/>to<sp/>get<sp/>from<sp/>the<sp/>string<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>set<sp/>the<sp/>string<sp/>size<sp/>to<sp/>n<sp/>because<sp/>each<sp/>element<sp/>is<sp/>a<sp/>char.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>set<sp/>the<sp/>dimension<sp/>to<sp/>{1}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>3)<sp/>it<sp/>is<sp/>a<sp/>container<sp/>of<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Space<sp/>is<sp/>H5S_SIMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>rank<sp/>is<sp/>1<sp/>or<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>space<sp/>size<sp/>is<sp/>the<sp/>number<sp/>of<sp/>strings<sp/>in<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>set<sp/>size<sp/>H5T_VARIABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>dimensions<sp/>remain<sp/>the<sp/>size<sp/>of<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tget_size(type)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>String<sp/>properties<sp/>have<sp/>already<sp/>been<sp/>set,<sp/>probably<sp/>by<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dims.empty())<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Tset_size(type,<sp/>H5T_VARIABLE);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa9ef02af8c76ad03c851818ac0453ff5" kindref="member">h5pp::util::getBytesTotal</ref>(data);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hsize_t<sp/>desiredSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" kindref="member">h5pp::util::getSizeFromDimensions</ref>(dims);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consider<sp/>a<sp/>case<sp/>where<sp/>the<sp/>text<sp/>is<sp/>&quot;this<sp/>is<sp/>a<sp/>text&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>desired<sp/>size<sp/>is<sp/>12.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>resulting<sp/>string<sp/>should<sp/>be<sp/>&quot;this<sp/>is<sp/>a<sp/>t&apos;\0&apos;&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>12<sp/>characters<sp/>in<sp/>total<sp/>including<sp/>the<sp/>null<sp/>terminator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HDF5<sp/>seems<sp/>to<sp/>do<sp/>this<sp/>automatically.<sp/>From<sp/>the<sp/>manual:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;If<sp/>the<sp/>short<sp/>string<sp/>is<sp/>H5T_STR_NULLTERM,<sp/>it<sp/>is<sp/>truncated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>null<sp/>terminator<sp/>is<sp/>appended.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Furthermore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;The<sp/>size<sp/>set<sp/>for<sp/>a<sp/>string<sp/>datatype<sp/>should<sp/>include<sp/>space<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>null-terminator<sp/>character,<sp/>otherwise<sp/>it<sp/>will<sp/>not<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stored<sp/>on<sp/>(or<sp/>retrieved<sp/>from)<sp/>disk&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Tset_size(type,<sp/>desiredSize);<sp/></highlight><highlight class="comment">//<sp/>Desired<sp/>size<sp/>should<sp/>be<sp/>num<sp/>chars<sp/>+<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims<sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/><sp/>=<sp/>desiredSize;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(h5pp::type::sfinae::has_text_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Tset_size(type,<sp/>H5T_VARIABLE);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa9ef02af8c76ad03c851818ac0453ff5" kindref="member">h5pp::util::getBytesTotal</ref>(data);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>size<sp/>on<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>makes<sp/>sure<sp/>there<sp/>is<sp/>a<sp/>single<sp/>&quot;\0&quot;<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>string<sp/>when<sp/>written<sp/>to<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>however<sp/>that<sp/>bytes<sp/>here<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>the<sp/>number<sp/>of<sp/>characters<sp/>including<sp/>null<sp/>terminator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Tset_strpad(type,<sp/>H5T_STR_NULLTERM);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>strpad&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>character<sp/>set<sp/>to<sp/>UTF-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Tset_cset(type,<sp/>H5T_cset_t::H5T_CSET_UTF8);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>char-set<sp/>UTF-8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc_or_h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">_t&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="namespaceh5pp_1_1hdf5_1a71cb3037642949c7d839e1d06fd586e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a71cb3037642949c7d839e1d06fd586e1" kindref="member">checkIfLinkExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>linkPath,<sp/>std::optional&lt;bool&gt;<sp/>linkExists<sp/>=<sp/>std::nullopt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linkExists)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linkExists.value();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;subPath<sp/>:<sp/><ref refid="namespaceh5pp_1_1hdf5_1a566e53d7ea1d7430758558216b531ea8" kindref="member">pathCumulativeSplit</ref>(linkPath,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exists<sp/>=<sp/>H5Lexists(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(subPath).c_str(),<sp/>linkAccess);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exists<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>if<sp/>link<sp/>exists<sp/>[{}]<sp/>...<sp/>false&quot;</highlight><highlight class="normal">,<sp/>linkPath);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exists<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>check<sp/>if<sp/>link<sp/>exists<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>linkPath));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>if<sp/>link<sp/>exists<sp/>[{}]<sp/>...<sp/>true&quot;</highlight><highlight class="normal">,<sp/>linkPath);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc_or_h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">_t&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="namespaceh5pp_1_1hdf5_1aa50d2e158c1a2ab184e48b1986214773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1aa50d2e158c1a2ab184e48b1986214773" kindref="member">checkIfDatasetExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>dsetName,<sp/>std::optional&lt;bool&gt;<sp/>dsetExists<sp/>=<sp/>std::nullopt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;dsetAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetExists)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dsetExists.value();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetExists<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a71cb3037642949c7d839e1d06fd586e1" kindref="member">checkIfLinkExists</ref>(loc,<sp/>dsetName,<sp/>dsetExists,<sp/>dsetAccess);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetExists.value())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5o" kindref="compound">hid::h5o</ref><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>=<sp/>H5Oopen(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(dsetName).c_str(),<sp/>dsetAccess);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5I_type_t<sp/>objectType<sp/>=<sp/>H5Iget_type(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(objectType<sp/>!=<sp/>H5I_DATASET)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>if<sp/>link<sp/>is<sp/>a<sp/>dataset<sp/>[{}]<sp/>...<sp/>false&quot;</highlight><highlight class="normal">,<sp/>dsetName);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>if<sp/>link<sp/>is<sp/>a<sp/>dataset<sp/>[{}]<sp/>...<sp/>true&quot;</highlight><highlight class="normal">,<sp/>dsetName);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x_loc,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc_or_h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">_t&lt;h5x_loc&gt;&gt;</highlight></codeline>
<codeline lineno="461" refid="namespaceh5pp_1_1hdf5_1a83858a0863d1abad29a19abb9bf8df48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>h5x<sp/><ref refid="namespaceh5pp_1_1hdf5_1a83858a0863d1abad29a19abb9bf8df48" kindref="member">openLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x_loc<sp/>&amp;loc,<sp/>std::string_view<sp/>linkPath,<sp/>std::optional&lt;bool&gt;<sp/>linkExists<sp/>=<sp/>std::nullopt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a71cb3037642949c7d839e1d06fd586e1" kindref="member">checkIfLinkExists</ref>(loc,<sp/>linkPath,<sp/>linkExists))<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;h5x,<sp/>hid::h5d&gt;)<sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Opening<sp/>dataset<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>linkPath);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;h5x,<sp/>hid::h5g&gt;)<sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Opening<sp/>group<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>linkPath);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;h5x,<sp/>hid::h5o&gt;)<sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Opening<sp/>object<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>linkPath);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5x<sp/>link;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;h5x,<sp/>hid::h5d&gt;)<sp/>link<sp/>=<sp/>H5Dopen(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(linkPath).c_str(),<sp/>linkAccess);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;h5x,<sp/>hid::h5g&gt;)<sp/>link<sp/>=<sp/>H5Gopen(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(linkPath).c_str(),<sp/>linkAccess);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;h5x,<sp/>hid::h5o&gt;)<sp/>link<sp/>=<sp/>H5Oopen(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(linkPath).c_str(),<sp/>linkAccess);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>existing<sp/>link<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>linkPath));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>link;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Link<sp/>does<sp/>not<sp/>exist<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>linkPath));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_link_or_h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">_t&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="482" refid="namespaceh5pp_1_1hdf5_1a76337fecfd065ad46ef8e9a9092d22c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a76337fecfd065ad46ef8e9a9092d22c1" kindref="member">checkIfAttributeExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><sp/><sp/><sp/>linkPath,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><sp/><sp/><sp/>attrName,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>attrExists<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;<sp/><sp/><sp/><sp/>linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrExists<sp/>and<sp/>attrExists.value())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>if<sp/>attribute<sp/>[{}]<sp/>exitst<sp/>in<sp/>link<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>attrName,<sp/>linkPath);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exists<sp/>=<sp/>H5Aexists_by_name(link,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">).c_str(),<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(attrName).c_str(),<sp/>linkAccess)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>if<sp/>attribute<sp/>[{}]<sp/>exitst<sp/>in<sp/>link<sp/>[{}]<sp/>...<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>attrName,<sp/>linkPath,<sp/>exists);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exists;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc_or_h</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">_t&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="495" refid="namespaceh5pp_1_1hdf5_1af2671a4b93137a75a163d66d16ae2f82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a76337fecfd065ad46ef8e9a9092d22c1" kindref="member">checkIfAttributeExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><sp/><sp/><sp/>linkPath,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><sp/><sp/><sp/>attrName,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>linkExists<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>attrExists<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;<sp/><sp/><sp/><sp/>linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linkExists<sp/>and<sp/>attrExists<sp/>and<sp/>linkExists.value()<sp/>and<sp/>attrExists.value())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>link<sp/>=<sp/>openLink&lt;hid::h5o&gt;(loc,<sp/>linkPath,<sp/>linkExists,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a76337fecfd065ad46ef8e9a9092d22c1" kindref="member">checkIfAttributeExists</ref>(link,<sp/>linkPath,<sp/>attrName,<sp/>attrExists,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type2)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>types<sp/>are<sp/>compound,<sp/>check<sp/>recursively<sp/>that<sp/>all<sp/>members<sp/>have<sp/>equal<sp/>types<sp/>and<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5T_class_t<sp/>dataClass1<sp/>=<sp/>H5Tget_class(type1);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5T_class_t<sp/>dataClass2<sp/>=<sp/>H5Tget_class(type1);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataClass1<sp/>==<sp/>H5T_COMPOUND<sp/>and<sp/>dataClass2<sp/>==<sp/>H5T_COMPOUND)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeType1<sp/>=<sp/>H5Tget_size(type1);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeType2<sp/>=<sp/>H5Tget_size(type2);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sizeType1<sp/>!=<sp/>sizeType2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nMembers1<sp/>=<sp/>H5Tget_nmembers(type1);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nMembers2<sp/>=<sp/>H5Tget_nmembers(type2);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nMembers1<sp/>!=<sp/>nMembers2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>nMembers1;<sp/>idx++)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/><sp/><sp/><sp/>=<sp/>H5Tget_member_type(type1,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/><sp/><sp/><sp/>=<sp/>H5Tget_member_type(type2,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem1<sp/><sp/>=<sp/>H5Tget_member_name(type1,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem2<sp/><sp/>=<sp/>H5Tget_member_name(type2,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/>n1<sp/><sp/><sp/><sp/>=<sp/>mem1;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/>n2<sp/><sp/><sp/><sp/>=<sp/>mem2;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equal<sp/>=<sp/>n1<sp/>==<sp/>n2;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5free_memory(mem1);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5free_memory(mem2);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>equal)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(t1,<sp/>t2))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataClass1<sp/>==<sp/>dataClass2)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataClass1<sp/>==<sp/>H5T_STRING)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type1<sp/>==<sp/>type2;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="namespaceh5pp_1_1hdf5_1afdcc7a0b2603c18c0e1c17dec815a4e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1afdcc7a0b2603c18c0e1c17dec815a4e5" kindref="member">checkIfCompressionIsAvailable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Check<sp/>if<sp/>zlib<sp/>compression<sp/>is<sp/>available<sp/>and<sp/>can<sp/>be<sp/>used<sp/>for<sp/>both</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>compression<sp/>and<sp/>decompression.<sp/>We<sp/>do<sp/>not<sp/>throw<sp/>errors<sp/>because<sp/>this</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>filter<sp/>is<sp/>an<sp/>optional<sp/>part<sp/>of<sp/>the<sp/>hdf5<sp/>library.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htri_t<sp/>zlibAvail<sp/>=<sp/>H5Zfilter_avail(H5Z_FILTER_DEFLATE);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(zlibAvail)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filterInfo;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Zget_filter_info(H5Z_FILTER_DEFLATE,<sp/>&amp;filterInfo);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>zlib_encode<sp/>=<sp/>(filterInfo<sp/>&amp;<sp/>H5Z_FILTER_CONFIG_ENCODE_ENABLED);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>zlib_decode<sp/>=<sp/>(filterInfo<sp/>&amp;<sp/>H5Z_FILTER_CONFIG_DECODE_ENABLED);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>zlibAvail<sp/>and<sp/>zlib_encode<sp/>and<sp/>zlib_decode;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="namespaceh5pp_1_1hdf5_1a7353721a9be096aa00d5e44e0e0e52ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7353721a9be096aa00d5e44e0e0e52ad" kindref="member">getValidCompressionLevel</ref>(std::optional&lt;unsigned<sp/>int&gt;<sp/>desiredCompressionLevel<sp/>=<sp/>std::nullopt)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1afdcc7a0b2603c18c0e1c17dec815a4e5" kindref="member">checkIfCompressionIsAvailable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(desiredCompressionLevel)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(desiredCompressionLevel.value()<sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desiredCompressionLevel.value();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Given<sp/>compression<sp/>level<sp/>{}<sp/>is<sp/>too<sp/>high.<sp/>Expected<sp/>value<sp/>0<sp/>(min)<sp/>to<sp/>9<sp/>(max).<sp/>Returning<sp/>9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>9;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Compression<sp/>is<sp/>not<sp/>available<sp/>with<sp/>this<sp/>HDF5<sp/>library&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_link&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="577" refid="namespaceh5pp_1_1hdf5_1a724430a674bb45d0105ba50fe0cf204d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1a724430a674bb45d0105ba50fe0cf204d" kindref="member">getAttributeNames</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;link)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAttrs<sp/>=<sp/>H5Aget_num_attrs(link);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>attrNames;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numAttrs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>attrId<sp/><sp/>=<sp/>H5Aopen_idx(link,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssize_t<sp/><sp/>bufSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>H5Aget_name(attrId,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bufSize<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>buf;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Aget_name(attrId,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1,<sp/>buf.data());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrNames.emplace_back(buf);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>attribute<sp/>names&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attrNames;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;</highlight></codeline>
<codeline lineno="599" refid="namespaceh5pp_1_1hdf5_1aa3523271724509fc4d6d800239ec4511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a724430a674bb45d0105ba50fe0cf204d" kindref="member">getAttributeNames</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>linkPath,<sp/>std::optional&lt;bool&gt;<sp/>linkExists<sp/>=<sp/>std::nullopt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>link<sp/>=<sp/>openLink&lt;hid::h5o&gt;(loc,<sp/>linkPath,<sp/>linkExists,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a724430a674bb45d0105ba50fe0cf204d" kindref="member">getAttributeNames</ref>(link);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="605" refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;std::type_index,<sp/>std::string,<sp/>size_t&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T),<sp/>std::string(h5pp::type::sfinae::type_name&lt;T&gt;()),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)};</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::tuple&lt;std::type_index,<sp/>std::string,<sp/>size_t&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_SHORT))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;short&gt;();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_INT))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;int&gt;();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_LONG))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;long&gt;();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_LLONG))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;long<sp/>long&gt;();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_USHORT))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;unsigned<sp/>short&gt;();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_UINT))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;unsigned<sp/>int&gt;();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_ULONG))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;unsigned<sp/>long&gt;();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_ULLONG))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;unsigned<sp/>long<sp/>long&gt;();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_DOUBLE))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;double&gt;();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_LDOUBLE))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;long<sp/>double&gt;();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_FLOAT))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;float&gt;();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_HBOOL))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;bool&gt;();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tequal(type,<sp/>H5T_NATIVE_CHAR))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;char&gt;();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/>H5Tcopy(H5T_C_S1)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1aa6d20d609d54cc8799d142ca54acf9d5" kindref="member">h5pp::type::compound::H5T_COMPLEX_SHORT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;std::complex&lt;short&gt;&gt;();</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a72d333146d79727000434d8df8090771" kindref="member">h5pp::type::compound::H5T_COMPLEX_INT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;int&gt;&gt;();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a226386f8edeba333cc587a196b28afc4" kindref="member">h5pp::type::compound::H5T_COMPLEX_LONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;long&gt;&gt;();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a910b7f32f6e2ca31fc90d8348a585b48" kindref="member">h5pp::type::compound::H5T_COMPLEX_LLONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;long<sp/>long&gt;&gt;();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1acc918db007bccfde363dd0b77fa3b3ea" kindref="member">h5pp::type::compound::H5T_COMPLEX_USHORT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;unsigned<sp/>short&gt;&gt;();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a3b9789ae80ef3ba9d4bd3fde5daa7580" kindref="member">h5pp::type::compound::H5T_COMPLEX_UINT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;unsigned<sp/>int&gt;&gt;();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a50673b0f6565904d494f414efa594a90" kindref="member">h5pp::type::compound::H5T_COMPLEX_ULONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;unsigned<sp/>long&gt;&gt;();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1aaeef3b17e9cf410cc117e10361dec982" kindref="member">h5pp::type::compound::H5T_COMPLEX_ULLONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;unsigned<sp/>long<sp/>long&gt;&gt;();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a268dc8b7924bd1178fa52083a4f56ca6" kindref="member">h5pp::type::compound::H5T_COMPLEX_DOUBLE</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;double&gt;&gt;();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a2a152b65b67a662acb0ec9abc19987e7" kindref="member">h5pp::type::compound::H5T_COMPLEX_LDOUBLE</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;long<sp/>double&gt;&gt;();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1acdf182c37fd898aa2050a69341e581f9" kindref="member">h5pp::type::compound::H5T_COMPLEX_FLOAT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;std::complex&lt;float&gt;&gt;();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a4b2f7636f376661adaff16511bb5c8aa" kindref="member">h5pp::type::compound::H5T_SCALAR2_SHORT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;short&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a1ecf4c9b8351f394b4729b1444746054" kindref="member">h5pp::type::compound::H5T_SCALAR2_INT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;int&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1ad6a6f13c0be2677b8b96967803488f5a" kindref="member">h5pp::type::compound::H5T_SCALAR2_LONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;long&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1ad04233950f53c5c654d6fb6a4d90629f" kindref="member">h5pp::type::compound::H5T_SCALAR2_LLONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;long long&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a0138ed96c7133dd3bd56d937af3985b5" kindref="member">h5pp::type::compound::H5T_SCALAR2_USHORT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;unsigned short&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a9ccebced1010fb62d3a35fc69cd2adc0" kindref="member">h5pp::type::compound::H5T_SCALAR2_UINT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;unsigned int&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a9c766aa225eb8c4d7543aa5f7408c086" kindref="member">h5pp::type::compound::H5T_SCALAR2_ULONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;unsigned long&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a3b6158b5eb9ff628af36cb4559c9c2f5" kindref="member">h5pp::type::compound::H5T_SCALAR2_ULLONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;unsigned long long&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a1c47191f5d60443d9741bcbef499fddb" kindref="member">h5pp::type::compound::H5T_SCALAR2_DOUBLE</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;double&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1af6e1d6fb81c76e3016d534b520534925" kindref="member">h5pp::type::compound::H5T_SCALAR2_LDOUBLE</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;long double&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1aa9295211544b40b36fbb1f0d4cb236df" kindref="member">h5pp::type::compound::H5T_SCALAR2_FLOAT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r2" kindref="compound">h5pp::type::compound::H5T_SCALAR2&lt;float&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a4eede90bae7e6f505d0b67a88d52d560" kindref="member">h5pp::type::compound::H5T_SCALAR3_SHORT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;short&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a34d3d8da125027f7ab408abd16ee4e54" kindref="member">h5pp::type::compound::H5T_SCALAR3_INT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;int&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a0561544bc67849285c89c06a660c03ad" kindref="member">h5pp::type::compound::H5T_SCALAR3_LONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;long&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a33208b742da16646b519eeae5711692c" kindref="member">h5pp::type::compound::H5T_SCALAR3_LLONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;long long&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a2eecc3b85070927f9bb8bd05843df0a1" kindref="member">h5pp::type::compound::H5T_SCALAR3_USHORT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;unsigned short&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1acbb546754f0cf3e93325cd33e7d4c4b8" kindref="member">h5pp::type::compound::H5T_SCALAR3_UINT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;unsigned int&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a33550956053a2cac47b039049dd9d679" kindref="member">h5pp::type::compound::H5T_SCALAR3_ULONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;unsigned long&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a33093680e829f1a39c80b95e81a0d1f0" kindref="member">h5pp::type::compound::H5T_SCALAR3_ULLONG</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;unsigned long long&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1acb2433bdbc762d670458099a35882564" kindref="member">h5pp::type::compound::H5T_SCALAR3_DOUBLE</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;double&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1ae654aca670b1ad62bc4f787e55f8cd9c" kindref="member">h5pp::type::compound::H5T_SCALAR3_LDOUBLE</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;long double&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" kindref="member">H5Tequal_recurse</ref>(type,<sp/><ref refid="namespaceh5pp_1_1type_1_1compound_1a1e0f70c73399d9342a8e7ff5cbae15bf" kindref="member">h5pp::type::compound::H5T_SCALAR3_FLOAT</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>&lt;<ref refid="structh5pp_1_1type_1_1compound_1_1_h5_t___s_c_a_l_a_r3" kindref="compound">h5pp::type::compound::H5T_SCALAR3&lt;float&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bufSize<sp/>=<sp/>H5Iget_name(type,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;buf_size<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>bufSize);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bufSize<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::string::size_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Iget_name(type,<sp/>name.data(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;No<sp/>C++<sp/>type<sp/>match<sp/>for<sp/>HDF5<sp/>type<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCppType&lt;std::nullopt_t&gt;();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(std::optional&lt;std::string&gt;<sp/>objectPath,<sp/>std::optional&lt;std::string&gt;<sp/>objectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;h5Space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;h5Type)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref><sp/>typeInfo;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeInfo.<ref refid="structh5pp_1_1_type_info_1a6a74c7f8b43f09d2e3418ecd872ef91f" kindref="member">h5Name</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::move(objectName);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeInfo.<ref refid="structh5pp_1_1_type_info_1a78b3920e9677b9b6a9bc5f19b680ba61" kindref="member">h5Path</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::move(objectPath);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeInfo.<ref refid="structh5pp_1_1_type_info_1a1843c5d1805c1b3153a8f51da5fa43b1" kindref="member">h5Type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>h5Type;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeInfo.<ref refid="structh5pp_1_1_type_info_1a7f766cb42a646b9fc281bd1b4bde8b1a" kindref="member">h5Rank</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" kindref="member">h5pp::hdf5::getRank</ref>(h5Space);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeInfo.<ref refid="structh5pp_1_1_type_info_1ad395cc5b5750e0b28d8de76017dc4bf8" kindref="member">h5Size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">h5pp::hdf5::getSize</ref>(h5Space);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeInfo.<ref refid="structh5pp_1_1_type_info_1adeac8c894700a503c1ff6ff406939b50" kindref="member">h5Dims</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">h5pp::hdf5::getDimensions</ref>(h5Space);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(typeInfo.<ref refid="structh5pp_1_1_type_info_1a1608ddcdb74210fa7f2d46bd6d590708" kindref="member">cppTypeIndex</ref>,<sp/>typeInfo.<ref refid="structh5pp_1_1_type_info_1a9f09eb96cb161d4c4127e5edc89fcad2" kindref="member">cppTypeName</ref>,<sp/>typeInfo.<ref refid="structh5pp_1_1_type_info_1a580f2441c27c4447c7831c97f5643c71" kindref="member">cppTypeBytes</ref>)<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" kindref="member">getCppType</ref>(typeInfo.<ref refid="structh5pp_1_1_type_info_1a1843c5d1805c1b3153a8f51da5fa43b1" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>typeInfo;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="namespaceh5pp_1_1hdf5_1ade5da86d9ab4e9aa27996670e30e4a1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dataset)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufSize<sp/>=<sp/>H5Iget_name(dataset,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>dsetPath;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetPath.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::string::size_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Iget_name(dataset,<sp/>dsetPath.data(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Collecting<sp/>type<sp/>info<sp/>about<sp/>dataset<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>dsetPath);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(dsetPath,<sp/>std::nullopt,<sp/>H5Dget_space(dataset),<sp/>H5Dget_type(dataset));</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="692" refid="namespaceh5pp_1_1hdf5_1a00eaf7d4456d625754bd643948a311ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>dsetName,<sp/>std::optional&lt;bool&gt;<sp/>dsetExists<sp/>=<sp/>std::nullopt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;dsetAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataset<sp/>=<sp/>openLink&lt;hid::h5d&gt;(loc,<sp/>dsetName,<sp/>dsetExists,<sp/>dsetAccess);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(dataset);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="namespaceh5pp_1_1hdf5_1a8485e227c30416285c2894957fcce922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>&amp;attribute)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufSize<sp/>=<sp/>H5Aget_name(attribute,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>attrName;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrName.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::string::size_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Aget_name(attribute,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1,<sp/>attrName.data());</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufSize<sp/>=<sp/>H5Iget_name(attribute,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>linkPath;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkPath.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::string::size_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Iget_name(attribute,<sp/>linkPath.data(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bufSize)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Collecting<sp/>type<sp/>info<sp/>about<sp/>attribute<sp/>[{}]<sp/>in<sp/>link<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>attrName,<sp/>linkPath);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(linkPath,<sp/>attrName,<sp/>H5Aget_space(attribute),<sp/>H5Aget_type(attribute));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="712" refid="namespaceh5pp_1_1hdf5_1adbac63ee859387cf063f39bb516cd813" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><sp/><sp/><sp/>linkPath,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><sp/><sp/><sp/>attrName,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>linkExists<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>attrExists<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;<sp/><sp/><sp/><sp/>linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>link<sp/>=<sp/>openLink&lt;hid::h5o&gt;(loc,<sp/>linkPath,<sp/>linkExists,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a76337fecfd065ad46ef8e9a9092d22c1" kindref="member">checkIfAttributeExists</ref>(link,<sp/>linkPath,<sp/>attrName,<sp/>attrExists,<sp/>linkAccess))<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>attribute<sp/>=<sp/>H5Aopen_name(link,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(attrName).c_str());</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(attribute);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Attribute<sp/>[{}]<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>link<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>attrName,<sp/>linkPath));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_link&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="728" refid="namespaceh5pp_1_1hdf5_1aef15d824f0ee10cd4843c5cea999d24f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TypeInfo&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1aef15d824f0ee10cd4843c5cea999d24f" kindref="member">getTypeInfo_allAttributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;link)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TypeInfo&gt;<sp/>allAttrInfo;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_attrs<sp/>=<sp/>H5Aget_num_attrs(link);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num_attrs<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>number<sp/>of<sp/>attributes<sp/>in<sp/>link&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>num_attrs;<sp/>idx++)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref><sp/>attribute<sp/>=<sp/>H5Aopen_idx(link,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(idx));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allAttrInfo.emplace_back(<ref refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" kindref="member">getTypeInfo</ref>(attribute));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allAttrInfo;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;TypeInfo&gt;</highlight></codeline>
<codeline lineno="744" refid="namespaceh5pp_1_1hdf5_1a9fffe2dfd1d3e9606d00886baace9db1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1aef15d824f0ee10cd4843c5cea999d24f" kindref="member">getTypeInfo_allAttributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>linkPath,<sp/>std::optional&lt;bool&gt;<sp/>linkExists<sp/>=<sp/>std::nullopt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>link<sp/>=<sp/>openLink&lt;hid::h5o&gt;(loc,<sp/>linkPath,<sp/>linkExists,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1aef15d824f0ee10cd4843c5cea999d24f" kindref="member">getTypeInfo_allAttributes</ref>(link);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="750" refid="namespaceh5pp_1_1hdf5_1ab4fd79ee7711215ba230417707d81e92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ab4fd79ee7711215ba230417707d81e92" kindref="member">createGroup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>groupRelativeName,<sp/>std::optional&lt;bool&gt;<sp/>linkExists<sp/>=<sp/>std::nullopt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>group<sp/>exists<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkExists<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a71cb3037642949c7d839e1d06fd586e1" kindref="member">checkIfLinkExists</ref>(loc,<sp/>groupRelativeName,<sp/>linkExists,<sp/>plists.linkAccess);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linkExists.value())<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Group<sp/>already<sp/>exists<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>groupRelativeName);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Creating<sp/>group<sp/>link<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>groupRelativeName);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5g" kindref="compound">hid::h5g</ref><sp/>group<sp/>=<sp/>H5Gcreate(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(groupRelativeName).c_str(),<sp/>plists.linkCreate,<sp/>plists.groupCreate,<sp/>plists.groupAccess);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="763" refid="namespaceh5pp_1_1hdf5_1a4fffc0ced4886ea3a3e2c80a1082ec8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a4fffc0ced4886ea3a3e2c80a1082ec8f" kindref="member">writeSymbolicLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>srcPath,<sp/>std::string_view<sp/>tgtPath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a71cb3037642949c7d839e1d06fd586e1" kindref="member">checkIfLinkExists</ref>(loc,<sp/>srcPath,<sp/>std::nullopt,<sp/>plists.linkAccess))<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Creating<sp/>symbolic<sp/>link<sp/>[{}]<sp/>--&gt;<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcPath,<sp/>tgtPath);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>retval<sp/>=<sp/>H5Lcreate_soft(<ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(srcPath).c_str(),<sp/>loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(tgtPath).c_str(),<sp/>plists.linkCreate,<sp/>plists.linkAccess);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>symbolic<sp/>link<sp/>[{}]<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>srcPath));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>write<sp/>soft<sp/>link<sp/>to<sp/>non-existing<sp/>path<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcPath));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="namespaceh5pp_1_1hdf5_1a48dce0da41feb5ff6e90611e7cb240aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a48dce0da41feb5ff6e90611e7cb240aa" kindref="member">setProperty_layout</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;dsetInfo)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" kindref="member">h5PlistDsetCreate</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>the<sp/>H5D<sp/>layout:<sp/>the<sp/>dataset<sp/>creation<sp/>property<sp/>list<sp/>has<sp/>not<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>the<sp/>H5D<sp/>layout:<sp/>the<sp/>H5D<sp/>layout<sp/>parameter<sp/>has<sp/>not<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref>.value())<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>H5D_CHUNKED:<sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Setting<sp/>layout<sp/>H5D_CHUNKED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>H5D_COMPACT:<sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Setting<sp/>layout<sp/>H5D_COMPACT&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>H5D_CONTIGUOUS:<sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Setting<sp/>layout<sp/>H5D_CONTIGUOUS&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Given<sp/>invalid<sp/>layout<sp/>when<sp/>creating<sp/>dataset<sp/>property<sp/>list.<sp/>Choose<sp/>one<sp/>of<sp/>H5D_COMPACT,H5D_CONTIGUOUS,H5D_CHUNKED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err<sp/>=<sp/>H5Pset_layout(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" kindref="member">h5PlistDsetCreate</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref>.value());</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>layout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="namespaceh5pp_1_1hdf5_1ac29eb3dbb28dd9598638379a6be51404" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac29eb3dbb28dd9598638379a6be51404" kindref="member">setProperty_chunkDims</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;dsetInfo)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref><sp/>!=<sp/>H5D_CHUNKED<sp/>and<sp/>not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref><sp/>!=<sp/>H5D_CHUNKED<sp/>and<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref>)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Chunk<sp/>dimensions<sp/>{}<sp/>ignored:<sp/>The<sp/>given<sp/>dataset<sp/>layout<sp/>is<sp/>not<sp/>H5D_CHUNKED&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>());</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref><sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_simple_extent_type(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value())<sp/>==<sp/>H5S_SCALAR)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Chunk<sp/>dimensions<sp/>ignored:<sp/>Space<sp/>is<sp/>H5S_SCALAR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref><sp/><sp/><sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" kindref="member">dsetDimsMax</ref><sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref><sp/><sp/><sp/><sp/>=<sp/>H5D_CONTIGUOUS;<sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>it&apos;s<sp/>a<sp/>big<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6822176f32ad86d84553fc5fba02056a" kindref="member">resizeMode</ref><sp/><sp/>=<sp/><ref refid="namespaceh5pp_1af9b92810fa1a1b95530abe990c38eb26a0894c203073521ad32840dd9657949ab" kindref="member">h5pp::ResizeMode::DO_NOT_RESIZE</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a48dce0da41feb5ff6e90611e7cb240aa" kindref="member">setProperty_layout</ref>(dsetInfo);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" kindref="member">h5PlistDsetCreate</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>chunk<sp/>dimensions:<sp/>the<sp/>dataset<sp/>creation<sp/>property<sp/>list<sp/>has<sp/>not<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>chunk<sp/>dimensions:<sp/>the<sp/>dataset<sp/>rank<sp/>(n<sp/>dims)<sp/>has<sp/>not<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>chunk<sp/>dimensions:<sp/>the<sp/>dataset<sp/>dimensions<sp/>have<sp/>not<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value()<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>-&gt;size()))</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>chunk<sp/>dimensions<sp/>properties:<sp/>Rank<sp/>mismatch:<sp/>dataset<sp/>dimensions<sp/>{}<sp/>has<sp/>different<sp/>number<sp/>of<sp/>elements<sp/>than<sp/>reported<sp/>rank<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value()));</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>-&gt;size()<sp/>!=<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref>-&gt;size())</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>chunk<sp/>dimensions:<sp/>Rank<sp/>mismatch:<sp/>dataset<sp/>dimensions<sp/>{}<sp/>and<sp/>chunk<sp/>dimensions<sp/>{}<sp/>do<sp/>not<sp/>have<sp/>the<sp/>same<sp/>number<sp/>of<sp/>elements&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>-&gt;size(),</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref>-&gt;size()));</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Setting<sp/>chunk<sp/>dimensions<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>());</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err<sp/>=<sp/>H5Pset_chunk(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" kindref="member">h5PlistDsetCreate</ref>.value(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref>-&gt;size()),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" kindref="member">dsetChunk</ref>-&gt;data());</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>chunk<sp/>dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832" refid="namespaceh5pp_1_1hdf5_1ab6bb8f2a9446f6251bbdad39f92e3e3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ab6bb8f2a9446f6251bbdad39f92e3e3e" kindref="member">setProperty_compression</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;dsetInfo)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" kindref="member">compression</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespaceh5pp_1_1hdf5_1afdcc7a0b2603c18c0e1c17dec815a4e5" kindref="member">checkIfCompressionIsAvailable</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" kindref="member">h5PlistDsetCreate</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>compression:<sp/>field<sp/>h5_plist_dset_create<sp/>has<sp/>not<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>compression:<sp/>field<sp/>h5_layout<sp/>has<sp/>not<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref>.value()<sp/>!=<sp/>H5D_CHUNKED)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Compression<sp/>ignored:<sp/>Layout<sp/>is<sp/>not<sp/>H5D_CHUNKED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" kindref="member">compression</ref><sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" kindref="member">compression</ref><sp/>and<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" kindref="member">compression</ref>.value()<sp/>&gt;<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Compression<sp/>level<sp/>too<sp/>high:<sp/>[{}].<sp/>Reducing<sp/>to<sp/>[9]&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" kindref="member">compression</ref>.value());</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" kindref="member">compression</ref><sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Setting<sp/>compression<sp/>level<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" kindref="member">compression</ref>.value());</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err<sp/>=<sp/>H5Pset_deflate(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" kindref="member">h5PlistDsetCreate</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" kindref="member">compression</ref>.value());</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>compression<sp/>level.<sp/>Check<sp/>that<sp/>your<sp/>HDF5<sp/>version<sp/>has<sp/>zlib<sp/>enabled.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1_hyperslab" kindref="compound">Hyperslab</ref><sp/>&amp;hyperSlab,<sp/>H5S_seloper_t<sp/>selectOp<sp/>=<sp/>H5S_SELECT_OR)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1aacdbbf03cbb0288396c778bedc6200aa" kindref="member">empty</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>H5Sget_simple_extent_ndims(space);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rank<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>space<sp/>rank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>dims(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rank));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sget_simple_extent_dims(space,<sp/>dims.data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>one<sp/>of<sp/>slabOffset<sp/>or<sp/>slabExtent<sp/>is<sp/>given,<sp/>then<sp/>the<sp/>other<sp/>must<sp/>also<sp/>be<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/>and<sp/>not<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>setup<sp/>hyperslab<sp/>metadata:<sp/>Given<sp/>hyperslab<sp/>offset<sp/>but<sp/>not<sp/>extent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>setup<sp/>hyperslab<sp/>metadata:<sp/>Given<sp/>hyperslab<sp/>extent<sp/>but<sp/>not<sp/>offset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>given,<sp/>ranks<sp/>of<sp/>slabOffset<sp/>and<sp/>slabExtent<sp/>must<sp/>be<sp/>identical<sp/>to<sp/>each<sp/>other<sp/>and<sp/>to<sp/>the<sp/>rank<sp/>of<sp/>the<sp/>existing<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref><sp/>and<sp/>(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().size()<sp/>!=<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().size()))</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>setup<sp/>hyperslab<sp/>metadata:<sp/>Size<sp/>mismatch<sp/>in<sp/>given<sp/>hyperslab<sp/>arrays:<sp/>offset<sp/>{}<sp/>|<sp/>extent<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()));</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().size()<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rank))</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>setup<sp/>hyperslab<sp/>metadata:<sp/>Hyperslab<sp/>arrays<sp/>have<sp/>different<sp/>rank<sp/>compared<sp/>to<sp/>the<sp/>given<sp/>space:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;offset<sp/>{}<sp/>|<sp/>extent<sp/>{}<sp/>|<sp/>space<sp/>dims<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims));</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>given,<sp/>slabStride<sp/>must<sp/>have<sp/>the<sp/>same<sp/>rank<sp/>as<sp/>the<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a8e27f0d9cfdba8016b98c697f11adb49" kindref="member">stride</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a8e27f0d9cfdba8016b98c697f11adb49" kindref="member">stride</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().size()<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rank))</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>setup<sp/>hyperslab<sp/>metadata:<sp/>Hyperslab<sp/>stride<sp/>has<sp/>a<sp/>different<sp/>rank<sp/>compared<sp/>to<sp/>the<sp/>dataset:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stride<sp/>{}<sp/>|<sp/>dataset<sp/>dims<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a8e27f0d9cfdba8016b98c697f11adb49" kindref="member">stride</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims));</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>given,<sp/>slabBlock<sp/>must<sp/>have<sp/>the<sp/>same<sp/>rank<sp/>as<sp/>the<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1aaf115b6a47c258e5f3820cd7b463fba6" kindref="member">blocks</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1aaf115b6a47c258e5f3820cd7b463fba6" kindref="member">blocks</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().size()<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rank))</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>setup<sp/>hyperslab<sp/>metadata:<sp/>Hyperslab<sp/>blocks<sp/>has<sp/>a<sp/>different<sp/>rank<sp/>compared<sp/>to<sp/>the<sp/>dataset:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;blocks<sp/>{}<sp/>|<sp/>dataset<sp/>dims<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1aaf115b6a47c258e5f3820cd7b463fba6" kindref="member">blocks</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_select_type(space)<sp/>!=<sp/>H5S_SEL_HYPERSLABS)<sp/>selectOp<sp/>=<sp/>H5S_SELECT_SET;<sp/></highlight><highlight class="comment">//<sp/>First<sp/>operation<sp/>must<sp/>be<sp/>H5S_SELECT_SET.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a8e27f0d9cfdba8016b98c697f11adb49" kindref="member">stride</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1aaf115b6a47c258e5f3820cd7b463fba6" kindref="member">blocks</ref>)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sselect_hyperslab(space,<sp/>selectOp,<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a8e27f0d9cfdba8016b98c697f11adb49" kindref="member">stride</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1aaf115b6a47c258e5f3820cd7b463fba6" kindref="member">blocks</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data());</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a8e27f0d9cfdba8016b98c697f11adb49" kindref="member">stride</ref>)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sselect_hyperslab(space,<sp/>selectOp,<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a8e27f0d9cfdba8016b98c697f11adb49" kindref="member">stride</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1aaf115b6a47c258e5f3820cd7b463fba6" kindref="member">blocks</ref>)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sselect_hyperslab(space,<sp/>selectOp,<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1aaf115b6a47c258e5f3820cd7b463fba6" kindref="member">blocks</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data());</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/>and<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sselect_hyperslab(space,<sp/>selectOp,<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>hyperSlab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>().data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>H5_VERSION_GE(1,<sp/>10,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htri_t<sp/>is_regular<sp/>=<sp/>H5Sis_regular_hyperslab(space);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>is_regular)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Hyperslab<sp/>selection<sp/>is<sp/>irregular<sp/>(non-rectangular).\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>not<sp/>yet<sp/>supported<sp/>by<sp/>h5pp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htri_t<sp/>valid<sp/>=<sp/>H5Sselect_valid(space);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(valid<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1_hyperslab" kindref="compound">Hyperslab</ref><sp/>slab(space);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Hyperslab<sp/>selection<sp/>is<sp/>invalid<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>slab.<ref refid="classh5pp_1_1_hyperslab_1a90c08aff27eb7b3587f0bd82922ea630" kindref="member">string</ref>()));</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="namespaceh5pp_1_1hdf5_1a7008946087a23655d17dafd214a2896b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7008946087a23655d17dafd214a2896b" kindref="member">selectHyperslabs</ref>(<ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Hyperslab&gt;<sp/>&amp;hyperSlabs,<sp/>std::optional&lt;std::vector&lt;H5S_seloper_t&gt;&gt;<sp/>hyperSlabSelectOps<sp/>=<sp/>std::nullopt)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlabSelectOps<sp/>and<sp/>not<sp/>hyperSlabSelectOps-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hyperSlabs.size()<sp/>!=<sp/>hyperSlabSelectOps-&gt;size())</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;slab<sp/>:<sp/>hyperSlabs)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(space,<sp/>slab,<sp/>hyperSlabSelectOps-&gt;at(0));</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>0;<sp/>num<sp/>&lt;<sp/>hyperSlabs.size();<sp/>num++)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(space,<sp/>hyperSlabs[num],<sp/>hyperSlabSelectOps-&gt;at(num));</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;slab<sp/>:<sp/>hyperSlabs)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(space,<sp/>slab);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930" refid="namespaceh5pp_1_1hdf5_1add01eec694b9d7b8c3c1c6e16a063405" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1add01eec694b9d7b8c3c1c6e16a063405" kindref="member">setSpaceExtent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;h5Space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hsize_t&gt;<sp/>&amp;dims,<sp/>std::optional&lt;std::vector&lt;hsize_t&gt;&gt;<sp/>maxDims<sp/>=<sp/>std::nullopt)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_simple_extent_type(h5Space)<sp/>==<sp/>H5S_SCALAR)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dims.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxDims)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dims.size()<sp/>!=<sp/>maxDims-&gt;size())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Rank<sp/>mismatch<sp/>in<sp/>dimensions<sp/>{}<sp/>and<sp/>max<sp/>dimensions<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dims,<sp/>maxDims.value()));</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long&gt;<sp/>maxDimsLong;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;dim<sp/>:<sp/>maxDims.value())<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dim<sp/>==<sp/>H5S_UNLIMITED)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDimsLong.emplace_back(-1);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDimsLong.emplace_back(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dim));</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Setting<sp/>dataspace<sp/>extents:<sp/>dims<sp/>{}<sp/>|<sp/>max<sp/>dims<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dims,<sp/>maxDimsLong);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>H5Sset_extent_simple(h5Space,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dims.size()),<sp/>dims.data(),<sp/>maxDims-&gt;data());</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>extents<sp/>on<sp/>space:<sp/>dims<sp/>{}<sp/>|<sp/>max<sp/>dims<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dims,<sp/>maxDims.value()));</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Setting<sp/>dataspace<sp/>extents:<sp/>dims<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dims);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>H5Sset_extent_simple(h5Space,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dims.size()),<sp/>dims.data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>extents<sp/>on<sp/>space.<sp/>Dims<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dims));</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959" refid="namespaceh5pp_1_1hdf5_1a60ffebba2fc359940a3fe1ec6463ce91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1add01eec694b9d7b8c3c1c6e16a063405" kindref="member">setSpaceExtent</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;dsetInfo)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>space<sp/>extent:<sp/>the<sp/>space<sp/>is<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>-&gt;valid())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>space<sp/>extent.<sp/>Space<sp/>is<sp/>not<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_simple_extent_type(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value())<sp/>==<sp/>H5S_SCALAR)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>space<sp/>extent:<sp/>dataset<sp/>dimensions<sp/>are<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref><sp/>and<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref>.value()<sp/>==<sp/>H5D_CHUNKED<sp/>and<sp/>not<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" kindref="member">dsetDimsMax</ref>)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chunked<sp/>datasets<sp/>are<sp/>unlimited<sp/>unless<sp/>told<sp/>explicitly<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" kindref="member">dsetDimsMax</ref><sp/>=<sp/>std::vector&lt;hsize_t&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value()),<sp/>0);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill_n(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" kindref="member">dsetDimsMax</ref>-&gt;begin(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" kindref="member">dsetDimsMax</ref>-&gt;size(),<sp/>H5S_UNLIMITED);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1add01eec694b9d7b8c3c1c6e16a063405" kindref="member">setSpaceExtent</ref>(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" kindref="member">dsetDimsMax</ref>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;err)<sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>extent<sp/>on<sp/>dataset<sp/>{}<sp/>\n<sp/>Reason<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>(),<sp/>err.what()));<sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975" refid="namespaceh5pp_1_1hdf5_1a51f270cfc369bfd385e8614dcce9adf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a51f270cfc369bfd385e8614dcce9adf4" kindref="member">extendSpace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hsize_t<sp/>extent)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Extending<sp/>space<sp/>dimension<sp/>[{}]<sp/>to<sp/>extent<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>dim,<sp/>extent);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>current<sp/>extent<sp/>of<sp/>this<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldRank<sp/>=<sp/>H5Sget_simple_extent_ndims(space);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>oldDims(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(oldRank));</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sget_simple_extent_dims(space,<sp/>oldDims.data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>may<sp/>need<sp/>to<sp/>change<sp/>the<sp/>rank,<sp/>for<sp/>instance,<sp/>if<sp/>we<sp/>are<sp/>appending<sp/>a<sp/>new<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>size<sp/>n,<sp/>so<sp/>it<sp/>becomes<sp/>an<sp/>(n<sp/>x<sp/>2)<sp/>&quot;matrix&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRank<sp/>=<sp/>std::max(dim<sp/>+<sp/>1,<sp/>oldRank);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>newDims(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(newRank),<sp/>1);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(oldDims.begin(),<sp/>oldDims.end(),<sp/>newDims.begin());</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newDims[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dim)]<sp/>=<sp/>extent;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1add01eec694b9d7b8c3c1c6e16a063405" kindref="member">setSpaceExtent</ref>(space,<sp/>newDims);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sset_extent_simple(space,newRank,newDims.data(),nullptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992" refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/>&amp;dataset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hsize_t<sp/>extent)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>memSpace<sp/>(act<sp/>as<sp/>if<sp/>you<sp/>don&apos;t<sp/>know<sp/>its<sp/>size<sp/>and<sp/>want<sp/>to<sp/>append)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>space<sp/>=<sp/>H5Dget_space(dataset);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a51f270cfc369bfd385e8614dcce9adf4" kindref="member">extendSpace</ref>(space,<sp/>dim,<sp/>extent);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="999" refid="namespaceh5pp_1_1hdf5_1aa0f5878317b1c09260bd55e78f417037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><sp/><sp/><sp/>datasetRelativeName,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim,</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hsize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>extent,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/>linkExists<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;<sp/><sp/><sp/><sp/>dsetAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataset<sp/>=<sp/>openLink&lt;hid::h5d&gt;(loc,<sp/>datasetRelativeName,<sp/>linkExists,<sp/>dsetAccess);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(dataset,<sp/>dim,<sp/>extent);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="1010" refid="namespaceh5pp_1_1hdf5_1a9fa37ff054525201da3653f4f2e5764a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data,<sp/>std::string_view<sp/>dsetPath)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>H5PP_EIGEN3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_eigen_core_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(loc,<sp/>dsetPath,<sp/>0,<sp/>data.rows());</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSet<sp/><sp/><sp/>=<sp/>openLink&lt;hid::h5d&gt;(loc,<sp/>dsetPath);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileSpace<sp/>=<sp/>H5Dget_space(dataSet);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndims<sp/><sp/><sp/><sp/><sp/>=<sp/>H5Sget_simple_extent_ndims(fileSpace);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>dims(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ndims));</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sget_simple_extent_dims(fileSpace,<sp/>dims.data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sclose(fileSpace);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dims[1]<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data.cols()))<sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(loc,<sp/>dsetPath,<sp/>1,<sp/>data.cols());</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(loc,<sp/>dsetPath,<sp/>0,<sp/><ref refid="namespaceh5pp_1_1util_1aa8efa111edbaaac102e0bd279dc08a11" kindref="member">h5pp::util::getSize</ref>(data));</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028" refid="namespaceh5pp_1_1hdf5_1a89f05a8214178c00f723a6bc2f18ece3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hsize_t&gt;<sp/>&amp;appDimensions,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>axis)<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>this<sp/>function<sp/>to<sp/>EXTEND<sp/>the<sp/>dataset<sp/>to<sp/>APPEND<sp/>given<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1adb84c08bf0001752d4e825901b9bc500" kindref="member">assertResizeReady</ref>();</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appRank<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(appDimensions.size());</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(info.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value())<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>resized<sp/>on<sp/>the<sp/>fly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value()<sp/>&lt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(axis))</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>append<sp/>to<sp/>dataset<sp/>[{}]<sp/>along<sp/>axis<sp/>{}:<sp/>Dataset<sp/>rank<sp/>({})<sp/>must<sp/>be<sp/>strictly<sp/>larger<sp/>than<sp/>the<sp/>given<sp/>axis<sp/>({})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value(),</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value(),</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis));</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value()<sp/>&lt;<sp/>appRank)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>append<sp/>to<sp/>dataset<sp/>[{}]<sp/>along<sp/>axis<sp/>{}:<sp/>Dataset<sp/>rank<sp/>{}<sp/>&lt;<sp/>appended<sp/>rank<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value(),<sp/>axis,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value(),<sp/>appRank));</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>a<sp/>dataset<sp/>with<sp/>dimensions<sp/>ijkl<sp/>and<sp/>we<sp/>want<sp/>to<sp/>append<sp/>along<sp/>j,<sp/>say,<sp/>then<sp/>the<sp/>remaining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ikl<sp/>should<sp/>be<sp/>at<sp/>least<sp/>as<sp/>large<sp/>as<sp/>the<sp/>corresponding<sp/>dimensions<sp/>on<sp/>the<sp/>given<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>appDimensions.size();<sp/>idx++)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>!=<sp/>axis<sp/>and<sp/>appDimensions[idx]<sp/>&gt;<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()[idx])</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>append<sp/>to<sp/>dataset<sp/>[{}]<sp/>along<sp/>axis<sp/>{}:<sp/>Dimension<sp/>{}<sp/>size<sp/>mismatch:<sp/>data<sp/>{}<sp/>&gt;<sp/>dset{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value(),</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appDimensions[idx],</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()[idx]));</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>new<sp/>dset<sp/>dimension.<sp/>Note<sp/>that<sp/>dataRank<sp/>&lt;=<sp/>dsetRank,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>instance<sp/>when<sp/>we<sp/>add<sp/>a<sp/>column<sp/>to<sp/>a<sp/>matrix,<sp/>the<sp/>column<sp/>may<sp/>be<sp/>an<sp/>nx1<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore<sp/>we<sp/>embed<sp/>the<sp/>data<sp/>dimensions<sp/>in<sp/>a<sp/>(possibly)<sp/>higher-dimensional<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>embeddedDims<sp/>=<sp/>std::vector&lt;hsize_t&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(info.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value()),<sp/>1);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(appDimensions.begin(),<sp/>appDimensions.end(),<sp/>embeddedDims.begin());<sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>example<sp/>above,<sp/>we<sp/>get<sp/>nx1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>oldAxisSize<sp/><sp/>=<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()[axis];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>need<sp/>this<sp/>later<sp/>when<sp/>drawing<sp/>the<sp/>hyperspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newAxisSize<sp/><sp/>=<sp/>embeddedDims[axis];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>need<sp/>this<sp/>later<sp/>when<sp/>drawing<sp/>the<sp/>hyperspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newDsetDims<sp/><sp/>=<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newDsetDims[axis]<sp/>=<sp/>oldAxisSize<sp/>+<sp/>newAxisSize;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>new<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>oldInfoStr;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1logger_1a964f0df3728a189192ec0630dc58bf95" kindref="member">h5pp::logger::getLogLevel</ref>()<sp/>&lt;=<sp/>1)<sp/>oldInfoStr<sp/>=<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err<sp/>=<sp/>H5Dset_extent(info.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>newDsetDims.data());</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>extent<sp/>{}<sp/>on<sp/>dataset<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>newDsetDims,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value()));</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>all<sp/>the<sp/>space<sp/>(old<sp/>and<sp/>new)<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref><sp/>=<sp/>newDsetDims;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref><sp/><sp/>=<sp/>H5Dget_space(info.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>-&gt;value());<sp/></highlight><highlight class="comment">//<sp/>Needs<sp/>to<sp/>be<sp/>refreshed<sp/>after<sp/>H5Dset_extent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a9f9fbefffa7655fce0fd129584ce13c9" kindref="member">dsetByte</ref><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">h5pp::hdf5::getBytesTotal</ref>(info.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a04ea6079208921bca11c32b54d89bb83" kindref="member">dsetSize</ref><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">h5pp::hdf5::getSize</ref>(info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value());</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" kindref="member">h5pp::hdf5::getRank</ref>(info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value());</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>se<sp/>select<sp/>the<sp/>space<sp/>on<sp/>the<sp/>extended<sp/>dataset<sp/>where<sp/>the<sp/>given<sp/>data<sp/>will<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>target<sp/>space<sp/>on<sp/>a<sp/>hyperslab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1_hyperslab" kindref="compound">Hyperslab</ref><sp/>slab;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slab.<ref refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" kindref="member">extent</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>embeddedDims;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::vector&lt;hsize_t&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(info.<ref refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" kindref="member">dsetRank</ref>.value()),<sp/>0);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slab.<ref refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" kindref="member">offset</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()[axis]<sp/>=<sp/>oldAxisSize;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">h5pp::hdf5::selectHyperslab</ref>(info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>slab);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Extended<sp/>dataset<sp/>\n<sp/>\t<sp/>old:<sp/>{}<sp/>\n<sp/>\t<sp/>new:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>oldInfoStr,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094" refid="namespaceh5pp_1_1hdf5_1a958720ab3bf72837f86e6ab6c5e41c32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;dsetInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref><sp/>&amp;dataInfo,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>axis)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>this<sp/>function<sp/>to<sp/>EXTEND<sp/>the<sp/>dataset<sp/>to<sp/>APPEND<sp/>given<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a80ea2205f9a63ed091937e9b6d7af9df" kindref="member">assertWriteReady</ref>();</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" kindref="member">extendDataset</ref>(dsetInfo,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a5367c7635d47ed6665efd7b82d5e7457" kindref="member">dataDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),<sp/>axis);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100" refid="namespaceh5pp_1_1hdf5_1adfe3c0f2cb4fb7965b09b0135e719d6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1adfe3c0f2cb4fb7965b09b0135e719d6e" kindref="member">resizeDataset</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hsize_t&gt;<sp/>&amp;newDimensions,<sp/>std::optional&lt;h5pp::ResizeMode&gt;<sp/>mode<sp/>=<sp/>std::nullopt)<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>mode)<sp/>mode<sp/>=<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a6822176f32ad86d84553fc5fba02056a" kindref="member">resizeMode</ref>;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>mode)<sp/>mode<sp/>=<sp/><ref refid="namespaceh5pp_1af9b92810fa1a1b95530abe990c38eb26a6cd43a637f8b733c23575092197f3ebb" kindref="member">h5pp::ResizeMode::RESIZE_TO_FIT</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="namespaceh5pp_1af9b92810fa1a1b95530abe990c38eb26a0894c203073521ad32840dd9657949ab" kindref="member">h5pp::ResizeMode::DO_NOT_RESIZE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref><sp/>and<sp/>info.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref>.value()<sp/>!=<sp/>H5D_CHUNKED)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(info.<ref refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" kindref="member">h5Layout</ref>.value())<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>H5D_COMPACT:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Datasets<sp/>with<sp/>H5D_COMPACT<sp/>layout<sp/>cannot<sp/>be<sp/>resized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>H5D_CONTIGUOUS:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Datasets<sp/>with<sp/>H5D_CONTIGUOUS<sp/>layout<sp/>cannot<sp/>be<sp/>resized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resize<sp/>dataset:<sp/>Path<sp/>undefined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resize<sp/>dataset<sp/>[{}]:<sp/>info.h5Space<sp/>undefined&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value()));</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resize<sp/>dataset<sp/>[{}]:<sp/>info.h5Type<sp/>undefined&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value()));</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_simple_extent_type(info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value())<sp/>==<sp/>H5S_SCALAR)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>not<sp/>supposed<sp/>to<sp/>be<sp/>resized.<sp/>Typically<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(info.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value())<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>resized<sp/>on<sp/>the<sp/>fly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1adb84c08bf0001752d4e825901b9bc500" kindref="member">assertResizeReady</ref>();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>if<sp/>there<sp/>is<sp/>no<sp/>change<sp/>compared<sp/>to<sp/>the<sp/>current<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()<sp/>==<sp/>newDimensions)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>ranks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>-&gt;size()<sp/>!=<sp/>newDimensions.size())</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resize<sp/>dataset<sp/>[{}]:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Rank<sp/>mismatch:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>given<sp/>dimensions<sp/>{}<sp/>must<sp/>have<sp/>the<sp/>same<sp/>number<sp/>of<sp/>elements<sp/>as<sp/>the<sp/>target<sp/>dimensions<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value(),</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newDimensions));</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="namespaceh5pp_1af9b92810fa1a1b95530abe990c38eb26a181a1e17c5afb4561e6b966d995c46f9" kindref="member">h5pp::ResizeMode::INCREASE_ONLY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allDimsAreSmaller<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>newDimensions.size();<sp/>idx++)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newDimensions[idx]<sp/>&gt;<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()[idx])<sp/>allDimsAreSmaller<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(allDimsAreSmaller)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>oldInfoStr;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1logger_1a964f0df3728a189192ec0630dc58bf95" kindref="member">h5pp::logger::getLogLevel</ref>()<sp/>&lt;=<sp/>1)<sp/>oldInfoStr<sp/>=<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>();</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chunked<sp/>datasets<sp/>can<sp/>shrink<sp/>and<sp/>grow<sp/>in<sp/>any<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-chunked<sp/>datasets<sp/>can&apos;t<sp/>be<sp/>resized<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>newDimensions.size();<sp/>idx++)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newDimensions[idx]<sp/>&gt;<sp/>info.<ref refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" kindref="member">dsetDimsMax</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()[idx])</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resize<sp/>dataset<sp/>[{}]:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dimension<sp/>size<sp/>error:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>target<sp/>dimensions<sp/>{}<sp/>are<sp/>larger<sp/>than<sp/>the<sp/>maximum<sp/>dimensions<sp/>{}<sp/>for<sp/>this<sp/>dataset.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Consider<sp/>creating<sp/>the<sp/>dataset<sp/>with<sp/>larger<sp/>maximum<sp/>dimensions<sp/>or<sp/>use<sp/>H5D_CHUNKED<sp/>layout<sp/>to<sp/>enable<sp/>unlimited<sp/>resizing&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value(),</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newDimensions,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" kindref="member">dsetDimsMax</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>()));</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err<sp/>=<sp/>H5Dset_extent(info.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>newDimensions.data());</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>resize<sp/>dataset<sp/>[{}]<sp/>from<sp/>dimensions<sp/>{}<sp/>to<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>(),<sp/>newDimensions));</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>all<sp/>the<sp/>space<sp/>(old<sp/>and<sp/>new)<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" kindref="member">dsetDims</ref><sp/>=<sp/>newDimensions;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref><sp/><sp/>=<sp/>H5Dget_space(info.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>-&gt;value());<sp/></highlight><highlight class="comment">//<sp/>Needs<sp/>to<sp/>be<sp/>refreshed<sp/>after<sp/>H5Dset_extent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a9f9fbefffa7655fce0fd129584ce13c9" kindref="member">dsetByte</ref><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" kindref="member">h5pp::hdf5::getBytesTotal</ref>(info.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_dset_info_1a04ea6079208921bca11c32b54d89bb83" kindref="member">dsetSize</ref><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">h5pp::hdf5::getSize</ref>(info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value());</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Resized<sp/>dataset<sp/>\n<sp/>\t<sp/>old:<sp/>{}<sp/>\n<sp/>\t<sp/>new:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>oldInfoStr,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161" refid="namespaceh5pp_1_1hdf5_1a60fa8231974e30c6cff5f4affe6f3b4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1adfe3c0f2cb4fb7965b09b0135e719d6e" kindref="member">resizeDataset</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;dsetInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref><sp/>&amp;dataInfo)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>this<sp/>function<sp/>to<sp/>RESIZE<sp/>the<sp/>dataset<sp/>to<sp/>FIT<sp/>given<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a80ea2205f9a63ed091937e9b6d7af9df" kindref="member">assertWriteReady</ref>();</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1adfe3c0f2cb4fb7965b09b0135e719d6e" kindref="member">resizeDataset</ref>(dsetInfo,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a5367c7635d47ed6665efd7b82d5e7457" kindref="member">dataDims</ref>.<ref refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" kindref="member">value</ref>());</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="1168" refid="namespaceh5pp_1_1hdf5_1a7033cfcb00728e71b70350cb3878c8ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7033cfcb00728e71b70350cb3878c8ea" kindref="member">resizeData</ref>(DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;type,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>used<sp/>when<sp/>reading<sp/>data<sp/>from<sp/>file<sp/>into<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>resizes<sp/>the<sp/>data<sp/>so<sp/>the<sp/>space<sp/>in<sp/>memory<sp/>can<sp/>fit<sp/>the<sp/>data<sp/>read<sp/>from<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>resizes<sp/>the<sp/>data<sp/>to<sp/>fit<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>data<sp/>selected<sp/>in<sp/>the<sp/>fileSpace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>selection<sp/>of<sp/>elements<sp/>in<sp/>memory<sp/>space<sp/>must<sp/>occurr<sp/>after<sp/>calling<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;<sp/>or<sp/>std::is_array_v&lt;DataType&gt;)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>h5pp<sp/>never<sp/>uses<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tget_class(type)<sp/>==<sp/>H5T_STRING)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minus<sp/>one:<sp/>String<sp/>resize<sp/>allocates<sp/>the<sp/>null-terminator<sp/>automatically,<sp/>and<sp/>bytes<sp/>is<sp/>the<sp/>number<sp/>of<sp/>characters<sp/>including<sp/>null-terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1a4ac2338aca306326f5c514c96c69665b" kindref="member">h5pp::util::resizeData</ref>(data,<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bytes)<sp/>-<sp/>1});</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_text_v&lt;DataType&gt;<sp/>and<sp/>h5pp::type::sfinae::is_iterable_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>container<sp/>such<sp/>as<sp/>std::vector&lt;std::string&gt;<sp/>here,<sp/>and<sp/>the<sp/>dataset<sp/>may<sp/>have<sp/>multiple<sp/>string<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(space);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1a4ac2338aca306326f5c514c96c69665b" kindref="member">h5pp::util::resizeData</ref>(data,<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size)});</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>variable<sp/>length<sp/>arrays<sp/>each<sp/>string<sp/>element<sp/>is<sp/>dynamically<sp/>resized<sp/>when<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>fixed-size<sp/>we<sp/>can<sp/>resize<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>H5Tis_variable_str(type))<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fixedStringSize<sp/>=<sp/>H5Tget_size(type)<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Subtract<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;str<sp/>:<sp/>data)<sp/><ref refid="namespaceh5pp_1_1util_1a4ac2338aca306326f5c514c96c69665b" kindref="member">h5pp::util::resizeData</ref>(str,<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(fixedStringSize)});</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resize<sp/>given<sp/>container<sp/>for<sp/>text<sp/>data:<sp/>Unrecognized<sp/>type<sp/>for<sp/>text<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;()));</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_simple_extent_type(space)<sp/>==<sp/>H5S_SCALAR)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1a4ac2338aca306326f5c514c96c69665b" kindref="member">h5pp::util::resizeData</ref>(data,<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">hsize_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)});</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank<sp/>=<sp/>H5Sget_simple_extent_ndims(space);<sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>define<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>selected<sp/>elements<sp/>in<sp/>the<sp/>file<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>extent(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rank),<sp/>0);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sget_simple_extent_dims(space,<sp/>extent.data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1a4ac2338aca306326f5c514c96c69665b" kindref="member">h5pp::util::resizeData</ref>(data,<sp/>extent);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes<sp/>!=<sp/><ref refid="namespaceh5pp_1_1util_1aa9ef02af8c76ad03c851818ac0453ff5" kindref="member">h5pp::util::getBytesTotal</ref>(data))</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Size<sp/>mismatch<sp/>after<sp/>resize:<sp/>data<sp/>[{}]<sp/>bytes<sp/>|<sp/>dset<sp/>[{}]<sp/>bytes<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceh5pp_1_1util_1aa9ef02af8c76ad03c851818ac0453ff5" kindref="member">h5pp::util::getBytesTotal</ref>(data),<sp/>bytes);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="1206" refid="namespaceh5pp_1_1hdf5_1abcf5cf09be5ce7c82c445234bfc72444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7033cfcb00728e71b70350cb3878c8ea" kindref="member">resizeData</ref>(DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;info)<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7033cfcb00728e71b70350cb3878c8ea" kindref="member">resizeData</ref>(data,<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_dset_info_1a9f9fbefffa7655fce0fd129584ce13c9" kindref="member">dsetByte</ref>.value());</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="1210" refid="namespaceh5pp_1_1hdf5_1a34ec2d94378ce001bfe849fef4da166f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7033cfcb00728e71b70350cb3878c8ea" kindref="member">resizeData</ref>(DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref><sp/>&amp;info)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7033cfcb00728e71b70350cb3878c8ea" kindref="member">resizeData</ref>(data,<sp/>info.<ref refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" kindref="member">h5Space</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_attr_info_1a25e9278fd323f04394e5cd6d708cd83d" kindref="member">attrByte</ref>.value());</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214" refid="namespaceh5pp_1_1hdf5_1a9507cb83a64ba09107754372124267ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9507cb83a64ba09107754372124267ea" kindref="member">getSpaceString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;space)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>msg;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.append(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>size<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>H5Sget_simple_extent_npoints(space)));</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank<sp/>=<sp/>H5Sget_simple_extent_ndims(space);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hsize_t&gt;<sp/>dims(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rank),<sp/>0);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Sget_simple_extent_dims(space,<sp/>dims.data(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.append(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>rank<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>rank));</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.append(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>dims<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dims));</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Sget_select_type(space)<sp/>==<sp/>H5S_SEL_HYPERSLABS)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1_hyperslab" kindref="compound">Hyperslab</ref><sp/>slab(space);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.append(slab.<ref refid="classh5pp_1_1_hyperslab_1a90c08aff27eb7b3587f0bd82922ea630" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" kindref="member">assertSpacesEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;dataSpace,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref><sp/>&amp;dsetSpace,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref><sp/>&amp;h5Type)<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(h5Type)<sp/>or<sp/>H5Tget_class(h5Type)<sp/>==<sp/>H5T_STRING)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Strings<sp/>are<sp/>a<sp/>special<sp/>case,<sp/>e.g.<sp/>we<sp/>can<sp/>write<sp/>multiple<sp/>string<sp/>elements<sp/>into<sp/>just<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>space<sp/>is<sp/>allocated<sp/>on<sp/>the<sp/>fly<sp/>during<sp/>read<sp/>by<sp/>HDF5..<sp/>so<sp/>size<sp/>comparisons<sp/>are<sp/>useless<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(h5_layout<sp/>==<sp/>H5D_CHUNKED)<sp/>return;<sp/>//<sp/>Chunked<sp/>layouts<sp/>are<sp/>allowed<sp/>to<sp/>differ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htri_t<sp/>equal<sp/>=<sp/>H5Sextent_equal(dataSpace,<sp/>dsetSpace);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(equal<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5S_sel_type<sp/>dataSelType<sp/>=<sp/>H5Sget_select_type(dataSpace);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5S_sel_type<sp/>dsetSelType<sp/>=<sp/>H5Sget_select_type(dsetSpace);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataSelType<sp/>==<sp/>H5S_sel_type::H5S_SEL_HYPERSLABS<sp/>or<sp/>dsetSelType<sp/>==<sp/>H5S_sel_type::H5S_SEL_HYPERSLABS)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(dataSpace);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dsetSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" kindref="member">getSizeSelected</ref>(dsetSpace);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataSize<sp/>!=<sp/>dsetSize)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>msg1<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9507cb83a64ba09107754372124267ea" kindref="member">getSpaceString</ref>(dataSpace);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>msg2<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9507cb83a64ba09107754372124267ea" kindref="member">getSpaceString</ref>(dsetSpace);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Spaces<sp/>are<sp/>not<sp/>equal<sp/>size<sp/>\n\t<sp/>data<sp/>space<sp/>\t<sp/>{}<sp/>\n\t<sp/>dset<sp/>space<sp/>\t<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>msg1,<sp/>msg2));</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>of<sp/>the<sp/>maxDims<sp/>may<sp/>be<sp/>H5S_UNLIMITED,<sp/>in<sp/>which<sp/>case,<sp/>we<sp/>just<sp/>check<sp/>the<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataDims<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(dataSpace);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dsetDims<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(dsetSpace);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(dataSpace)<sp/>==<sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(dsetSpace))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">getSize</ref>(dataSpace);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dsetSize<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" kindref="member">getSize</ref>(dsetSpace);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataSize<sp/>!=<sp/>dsetSize)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>msg1<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9507cb83a64ba09107754372124267ea" kindref="member">getSpaceString</ref>(dataSpace);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>msg2<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9507cb83a64ba09107754372124267ea" kindref="member">getSpaceString</ref>(dsetSpace);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Spaces<sp/>are<sp/>not<sp/>equal<sp/>size<sp/>\n\t<sp/>data<sp/>space<sp/>\t<sp/>{}<sp/>\n\t<sp/>dset<sp/>space<sp/>\t<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>msg1,<sp/>msg2));</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(dataSpace)<sp/>!=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" kindref="member">getDimensions</ref>(dsetSpace))<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Spaces<sp/>have<sp/>different<sp/>shape:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;<sp/>data<sp/>space<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9507cb83a64ba09107754372124267ea" kindref="member">getSpaceString</ref>(dataSpace));</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;<sp/>dset<sp/>space<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9507cb83a64ba09107754372124267ea" kindref="member">getSpaceString</ref>(dsetSpace));</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(equal<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>compare<sp/>space<sp/>extents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271" refid="namespaceh5pp_1_1hdf5_1_1internal" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="1272" refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">maxHits</ref><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1273" refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1274" refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">searchKey</ref>;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;H5O_type_t<sp/>ObjType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InfoType&gt;</highlight></codeline>
<codeline lineno="1276" refid="namespaceh5pp_1_1hdf5_1_1internal_1a61d3d50d1676ad84429777053ea0958e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>herr_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a61d3d50d1676ad84429777053ea0958e" kindref="member">matcher</ref>([[maybe_unused]]<sp/>hid_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InfoType<sp/>*info,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*opdata)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>object<sp/>type<sp/>is<sp/>the<sp/>one<sp/>requested,<sp/>and<sp/>name<sp/>matches<sp/>the<sp/>search<sp/>key,<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>match<sp/>list<sp/>(a<sp/>vector&lt;string&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>search<sp/>depth<sp/>is<sp/>passed<sp/>the<sp/>depth<sp/>specified,<sp/>return<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>to<sp/>continue<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>1<sp/>to<sp/>finish<sp/>the<sp/>search.<sp/>Normally<sp/>when<sp/>we&apos;ve<sp/>reached<sp/>max<sp/>search<sp/>hits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/>nameView(name);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref><sp/>&gt;=<sp/>0<sp/>and<sp/>std::count(nameView.begin(),<sp/>nameView.end(),<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;InfoType,<sp/>H5O_info_t&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info-&gt;type<sp/>==<sp/>ObjType<sp/>or<sp/>ObjType<sp/>==<sp/>H5O_TYPE_UNKNOWN)<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>matchList<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::vector&lt;std::string&gt;<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(opdata);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">searchKey</ref>.empty()<sp/>or<sp/>nameView.find(<ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">searchKey</ref>)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matchList-&gt;push_back(name);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">maxHits</ref><sp/>&gt;<sp/>0<sp/>and<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(matchList-&gt;size())<sp/>&gt;=<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">maxHits</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>matchList<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::vector&lt;std::string&gt;<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(opdata);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">searchKey</ref>.empty()<sp/>or<sp/>nameView.find(<ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">searchKey</ref>)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matchList-&gt;push_back(name);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">maxHits</ref><sp/>&gt;<sp/>0<sp/>and<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(matchList-&gt;size())<sp/>&gt;=<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">maxHits</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>match<sp/>object<sp/>[{}]<sp/>|<sp/>loc_id<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>name,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;H5O_type_t<sp/>ObjType&gt;</highlight></codeline>
<codeline lineno="1304" refid="namespaceh5pp_1_1hdf5_1_1internal_1a409b40f0a175cd62ba82e3dbb3a43470" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/>std::string_view<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a409b40f0a175cd62ba82e3dbb3a43470" kindref="member">getObjTypeName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(ObjType<sp/>==<sp/>H5O_type_t::H5O_TYPE_DATASET)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;dataset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(ObjType<sp/>==<sp/>H5O_type_t::H5O_TYPE_GROUP)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(ObjType<sp/>==<sp/>H5O_type_t::H5O_TYPE_UNKNOWN)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(ObjType<sp/>==<sp/>H5O_type_t::H5O_TYPE_NAMED_DATATYPE)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;named<sp/>datatype&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(ObjType<sp/>==<sp/>H5O_type_t::H5O_TYPE_NTYPES)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ntypes&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>in<sp/>HDF5<sp/>v<sp/>1.12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;H5O_type_t<sp/>ObjType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="1319" refid="namespaceh5pp_1_1hdf5_1_1internal_1aa16966556f6c28e51a0aa25cbf2010e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>herr_t<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1aa16966556f6c28e51a0aa25cbf2010e1" kindref="member">visit_by_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>root,<sp/>std::vector&lt;std::string&gt;<sp/>&amp;matchList,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">internal::maxDepth</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Faster<sp/>when<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>iterate<sp/>recursively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Literate_by_name(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(root).c_str(),<sp/>H5_INDEX_NAME,<sp/>H5_ITER_NATIVE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>internal::matcher&lt;ObjType&gt;,<sp/>&amp;matchList,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(H5Ovisit_by_name3)<sp/>||<sp/>(defined(H5Ovisit_by_name_vers)<sp/>&amp;&amp;<sp/>H5Ovisit_by_name_vers<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Ovisit_by_name3(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(root).c_str(),<sp/>H5_INDEX_NAME,<sp/>H5_ITER_NATIVE,<sp/>internal::matcher&lt;ObjType&gt;,<sp/>&amp;matchList,<sp/>H5O_INFO_ALL,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(H5Ovisit_by_name2)<sp/>||<sp/>(defined(H5Ovisit_by_name_vers)<sp/>&amp;&amp;<sp/>H5Ovisit_by_name_vers<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Ovisit_by_name2(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(root).c_str(),<sp/>H5_INDEX_NAME,<sp/>H5_ITER_NATIVE,<sp/>internal::matcher&lt;ObjType&gt;,<sp/>&amp;matchList,<sp/>H5O_INFO_ALL,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(H5Ovisit_by_name1)<sp/>||<sp/>(defined(H5Ovisit_by_name_vers)<sp/>&amp;&amp;<sp/>H5Ovisit_by_name_vers<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Ovisit_by_name1(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(root).c_str(),<sp/>H5_INDEX_NAME,<sp/>H5_ITER_NATIVE,<sp/>internal::matcher&lt;ObjType&gt;,<sp/>&amp;matchList,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5Ovisit_by_name(loc,<sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(root).c_str(),<sp/>H5_INDEX_NAME,<sp/>H5_ITER_NATIVE,<sp/>internal::matcher&lt;ObjType&gt;,<sp/>&amp;matchList,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;H5O_type_t<sp/>ObjType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="1337" refid="namespaceh5pp_1_1hdf5_1a02268a24823a28d59fc8a024ed5804e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1a02268a24823a28d59fc8a024ed5804e3" kindref="member">findLinks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/>loc,</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">searchKey</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/>searchRoot<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">maxHits</ref><sp/><sp/><sp/><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref><sp/><sp/><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;<sp/>linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Search<sp/>key:<sp/>{}<sp/>|<sp/>target<sp/>type:<sp/>{}<sp/>|<sp/>search<sp/>root:<sp/>{}<sp/>|<sp/>max<sp/>search<sp/>hits<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">searchKey</ref>,<sp/>searchRoot,<sp/>internal::getObjTypeName&lt;ObjType&gt;(),<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">maxHits</ref>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>matchList;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">internal::maxHits</ref><sp/><sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">maxHits</ref>;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">internal::maxDepth</ref><sp/><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref>;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">internal::searchKey</ref><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">searchKey</ref>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>internal::visit_by_name&lt;ObjType&gt;(loc,<sp/>searchRoot,<sp/>matchList,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>links<sp/>of<sp/>type<sp/>[{}]<sp/>while<sp/>iterating<sp/>from<sp/>root<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>internal::getObjTypeName&lt;ObjType&gt;(),<sp/>searchRoot));</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matchList;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;H5O_type_t<sp/>ObjType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="1357" refid="namespaceh5pp_1_1hdf5_1a9f66aabb680c01cc71aa6110552677c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9f66aabb680c01cc71aa6110552677c3" kindref="member">getContentsOfLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/>std::string_view<sp/>linkPath,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref><sp/>=<sp/>1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref><sp/>&amp;linkAccess<sp/>=<sp/>H5P_DEFAULT)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>contents;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" kindref="member">internal::maxHits</ref><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">internal::maxDepth</ref><sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" kindref="member">internal::searchKey</ref>.clear();</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>err<sp/>=<sp/>internal::visit_by_name&lt;ObjType&gt;(loc,<sp/>linkPath,<sp/>contents,<sp/>linkAccess);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>iterate<sp/>link<sp/>[{}]<sp/>of<sp/>type<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>linkPath,<sp/>internal::getObjTypeName&lt;ObjType&gt;()));</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contents;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370" refid="namespaceh5pp_1_1hdf5_1aa9b74756e0cd04078c1ca7c9f886c2c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1aa9b74756e0cd04078c1ca7c9f886c2c6" kindref="member">createDataset</ref>(<ref refid="structh5pp_1_1_dset_info" kindref="compound">h5pp::DsetInfo</ref><sp/>&amp;dsetInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>create,<sp/>the<sp/>dataset<sp/>id<sp/>and<sp/>set<sp/>its<sp/>properties<sp/>before<sp/>writing<sp/>data<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1afa1fdbce887aa50986847c8dddb0a8c2" kindref="member">assertCreateReady</ref>();</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a671c7bb8ad1a168e91e0d3eaf463553b" kindref="member">dsetExists</ref><sp/>and<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a671c7bb8ad1a168e91e0d3eaf463553b" kindref="member">dsetExists</ref>.value())<sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;No<sp/>need<sp/>to<sp/>create<sp/>dataset<sp/>[{}]:<sp/>exists<sp/>already&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value());</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Creating<sp/>dataset<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>dsetId<sp/>=<sp/>H5Dcreate(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7a0a0b79ebf03553a5f5bf47a9d2b717" kindref="member">getLocId</ref>(),</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" kindref="member">dsetPath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plists.linkCreate,</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" kindref="member">h5PlistDsetCreate</ref>.value(),</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1af634783657b1cf3c2642aa2157c07ee3" kindref="member">h5PlistDsetAccess</ref>.value());</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetId<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>dataset<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>()));</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>dsetId;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a671c7bb8ad1a168e91e0d3eaf463553b" kindref="member">dsetExists</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393" refid="namespaceh5pp_1_1hdf5_1a80ccd1a780acdd3b98eea72fe91a5ac6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a80ccd1a780acdd3b98eea72fe91a5ac6" kindref="member">createAttribute</ref>(<ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref><sp/>&amp;attrInfo)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>create,<sp/>or<sp/>register,<sp/>the<sp/>attribute<sp/>id<sp/>and<sp/>set<sp/>its<sp/>properties<sp/>before<sp/>writing<sp/>data<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1aebd2991ada67e371e85a3a017ef65c7f" kindref="member">assertCreateReady</ref>();</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3bb46c9770d1b841eb153930ac287f9e" kindref="member">attrExists</ref><sp/>and<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3bb46c9770d1b841eb153930ac287f9e" kindref="member">attrExists</ref>.value())<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;No<sp/>need<sp/>to<sp/>create<sp/>attribute<sp/>[{}]<sp/>in<sp/>link<sp/>[{}]:<sp/>exists<sp/>already&quot;</highlight><highlight class="normal">,<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a9c92b7b99b87bf78d7e54171b76945da" kindref="member">attrName</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1aaeef426a56e2f79375cbda2f8a7c68f2" kindref="member">linkPath</ref>.value());</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Creating<sp/>attribute<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3c1fbec1555bd671b7cb2907cf956bdd" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>attrId<sp/>=<sp/>H5Acreate(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3dc884fb4dea53c9f1d04727d362b8e7" kindref="member">h5Link</ref>.value(),</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a9c92b7b99b87bf78d7e54171b76945da" kindref="member">attrName</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" kindref="member">h5Space</ref>.value(),</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a6010f0d5ea9269dd16ed7abfaf111931" kindref="member">h5PlistAttrCreate</ref>.value(),</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a04a3819a2995078fd4b342ca8874d7cd" kindref="member">h5PlistAttrAccess</ref>.value());</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrId<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>attribute<sp/>[{}]<sp/>for<sp/>link<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a9c92b7b99b87bf78d7e54171b76945da" kindref="member">attrName</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1aaeef426a56e2f79375cbda2f8a7c68f2" kindref="member">linkPath</ref>.value()));</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" kindref="member">h5Attr</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>attrId;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3bb46c9770d1b841eb153930ac287f9e" kindref="member">attrExists</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="1416" refid="namespaceh5pp_1_1hdf5_1adb89faacd84fe67fd133aa2afc560356" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>char<sp/>*&gt;<sp/><ref refid="namespaceh5pp_1_1hdf5_1adb89faacd84fe67fd133aa2afc560356" kindref="member">getCharPtrVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>char<sp/>*&gt;<sp/>sv;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;<sp/>and<sp/>h5pp::type::sfinae::has_data_v&lt;DataType&gt;)<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>care<sp/>of<sp/>std::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv.push_back(data.data());</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;)<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>care<sp/>of<sp/>char<sp/>pointers<sp/>and<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv.push_back(data);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_iterable_v&lt;DataType&gt;)<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>care<sp/>of<sp/>containers<sp/>with<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;elem<sp/>:<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(<ref refid="namespaceh5pp_1_1type_1_1sfinae_1a49f926f789066101b5bc371e8c751507" kindref="member">h5pp::type::sfinae::is_text_v</ref>&lt;decltype(elem)&gt;<sp/>and<sp/><ref refid="namespaceh5pp_1_1type_1_1sfinae_1a7307ab0b3c182ca1a24a491dbdc311f9" kindref="member">h5pp::type::sfinae::has_data_v</ref>&lt;decltype(elem)&gt;)<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>care<sp/>of<sp/>containers<sp/>with<sp/>std::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv.push_back(elem.data());</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(<ref refid="namespaceh5pp_1_1type_1_1sfinae_1a49f926f789066101b5bc371e8c751507" kindref="member">h5pp::type::sfinae::is_text_v</ref>&lt;decltype(elem)&gt;)<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>care<sp/>of<sp/>containers<sp/><sp/>of<sp/>char<sp/>pointers<sp/>and<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv.push_back(elem);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv.push_back(&amp;elem);<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>care<sp/>of<sp/>other<sp/>things?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>char<sp/>pointer<sp/>of<sp/>datatype<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;()));</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sv;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="1437" refid="namespaceh5pp_1_1hdf5_1ac9dc123f9057c228c501d6a8ac7be194" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac9dc123f9057c228c501d6a8ac7be194" kindref="member">writeDataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref><sp/>&amp;dataInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;dsetInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>H5PP_EIGEN3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_eigen_colmajor_v&lt;DataType&gt;<sp/>and<sp/>not<sp/>h5pp::type::sfinae::is_eigen_1d_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Converting<sp/>data<sp/>to<sp/>row-major<sp/>storage<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempRowm<sp/>=<sp/>eigen::to_RowMajor(data);<sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>Row<sp/>Major<sp/>first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac9dc123f9057c228c501d6a8ac7be194" kindref="member">h5pp::hdf5::writeDataset</ref>(tempRowm,<sp/>dataInfo,<sp/>dsetInfo,<sp/>plists);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1ad68517bc487536ce6dfd7d70307fbdc4" kindref="member">assertWriteReady</ref>();</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a80ea2205f9a63ed091937e9b6d7af9df" kindref="member">assertWriteReady</ref>();</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataInfo.<ref refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" kindref="member">dataSlab</ref>)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" kindref="member">dataSlab</ref>.value());</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a58f15a74dd4f320566755d053702504e" kindref="member">dsetSlab</ref>)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a58f15a74dd4f320566755d053702504e" kindref="member">dsetSlab</ref>.value());</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Writing<sp/>from<sp/>memory<sp/><sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a9c24baa6d7ff5e27d975df3c990adf72" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Writing<sp/>into<sp/>dataset<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac48d320203ec4d800865791009888f0b" kindref="member">h5pp::hdf5::assertWriteBufferIsLargeEnough</ref>(data,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::hdf5::assertBytesPerElemMatch&lt;DataType&gt;(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" kindref="member">h5pp::hdf5::assertSpacesEqual</ref>(dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataPtr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data.data();</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;<sp/>or<sp/>std::is_array_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>&amp;data;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;<sp/>or<sp/>h5pp::type::sfinae::has_text_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vec<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1adb89faacd84fe67fd133aa2afc560356" kindref="member">getCharPtrVector</ref>(data);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>H5T_VARIABLE,<sp/>this<sp/>function<sp/>expects<sp/>[const<sp/>char<sp/>**],<sp/>which<sp/>is<sp/>what<sp/>we<sp/>get<sp/>from<sp/>vec.data()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>-&gt;value())<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Dwrite(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>vec.data());</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec.size()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Dwrite(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>*vec.data());</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_text_v&lt;DataType&gt;<sp/>and<sp/>h5pp::type::sfinae::is_iterable_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>fixed-size<sp/>string<sp/>array<sp/>now.<sp/>We<sp/>have<sp/>to<sp/>copy<sp/>the<sp/>strings<sp/>to<sp/>a<sp/>contiguous<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vdata<sp/>already<sp/>contains<sp/>the<sp/>pointer<sp/>to<sp/>each<sp/>string,<sp/>and<sp/>bytes<sp/>should<sp/>be<sp/>the<sp/>size<sp/>of<sp/>the<sp/>whole<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>including<sp/>null<sp/>terminators.<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strContiguous;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytesPerStr<sp/>=<sp/>H5Tget_size(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value());<sp/></highlight><highlight class="comment">//<sp/>Includes<sp/>null<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strContiguous.resize(bytesPerStr<sp/>*<sp/>vec.size());</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_src<sp/>=<sp/>strContiguous.data()<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>*<sp/>bytesPerStr);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(start_src,<sp/>vec[i],<sp/>strnlen(vec[i],<sp/>bytesPerStr<sp/>-<sp/>1));<sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>copy<sp/>the<sp/>null<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Dwrite(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>strContiguous.data());</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>contigous<sp/>array<sp/>and<sp/>hope<sp/>for<sp/>the<sp/>best</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Dwrite(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>dataPtr);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Dwrite(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>dataPtr);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>into<sp/>dataset<sp/>\n\t<sp/>{}<sp/>\n<sp/>from<sp/>memory<sp/>\n\t<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a9c24baa6d7ff5e27d975df3c990adf72" kindref="member">string</ref>()));</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;not<sp/>std::is_const_v&lt;DataType&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1500" refid="namespaceh5pp_1_1hdf5_1a44f6d5a58b41ef924e4615c4d92139c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a44f6d5a58b41ef924e4615c4d92139c6" kindref="member">readDataset</ref>(DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref><sp/>&amp;dataInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref><sp/>&amp;dsetInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transpose<sp/>the<sp/>data<sp/>container<sp/>before<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>H5PP_EIGEN3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_eigen_colmajor_v&lt;DataType&gt;<sp/>and<sp/>not<sp/>h5pp::type::sfinae::is_eigen_1d_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Converting<sp/>data<sp/>to<sp/>row-major<sp/>storage<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempRowMajor<sp/>=<sp/>eigen::to_RowMajor(data);<sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>Row<sp/>Major<sp/>first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a44f6d5a58b41ef924e4615c4d92139c6" kindref="member">h5pp::hdf5::readDataset</ref>(tempRowMajor,<sp/>dataInfo,<sp/>dsetInfo,<sp/>plists);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>eigen::to_ColMajor(tempRowMajor);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1aefa40603adeb9406a4608a0c12bca6db" kindref="member">assertReadReady</ref>();</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a1230095c3c270b1ccf61b7e325aeac4f" kindref="member">assertReadReady</ref>();</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataInfo.<ref refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" kindref="member">dataSlab</ref>)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" kindref="member">dataSlab</ref>.value());</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a58f15a74dd4f320566755d053702504e" kindref="member">dsetSlab</ref>)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a58f15a74dd4f320566755d053702504e" kindref="member">dsetSlab</ref>.value());</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Reading<sp/>into<sp/>memory<sp/><sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a9c24baa6d7ff5e27d975df3c990adf72" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Reading<sp/>from<sp/>dataset<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a05e2d3f617c99b45cc39b585605c2ab8" kindref="member">h5pp::hdf5::assertReadBufferIsLargeEnough</ref>(data,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" kindref="member">h5pp::hdf5::assertSpacesEqual</ref>(dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::hdf5::assertBytesPerElemMatch&lt;DataType&gt;(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataPtr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data.data();</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;<sp/>or<sp/>std::is_array_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>&amp;data;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;<sp/>or<sp/>h5pp::type::sfinae::has_text_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>H5T_VARIABLE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>H5Dread<sp/>expects<sp/>[const<sp/>char<sp/>**],<sp/>which<sp/>is<sp/>what<sp/>we<sp/>get<sp/>from<sp/>vdata.data().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/>H5Dread<sp/>allocates<sp/>memory<sp/>on<sp/>each<sp/>const<sp/>char<sp/>*<sp/>which<sp/>has<sp/>to<sp/>be<sp/>reclaimed<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>H5Dread<sp/>expects<sp/>[char<sp/>*],<sp/>i.e.<sp/>*vdata.data()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/>Allocation<sp/>on<sp/>char<sp/>*<sp/>must<sp/>be<sp/>done<sp/>before<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value()))<sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>H5Sget_select_npoints(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value());</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;char<sp/>*&gt;<sp/>vdata(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size));<sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>pointers<sp/>for<sp/>&quot;size&quot;<sp/>number<sp/>of<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HDF5<sp/>allocates<sp/>space<sp/>for<sp/>each<sp/>string<sp/>in<sp/>vdata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Dread(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>H5S_ALL,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>vdata.data());</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>vdata<sp/>contains<sp/>the<sp/>whole<sp/>dataset<sp/>and<sp/>we<sp/>need<sp/>to<sp/>put<sp/>the<sp/>data<sp/>into<sp/>the<sp/>user-given<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;DataType,<sp/>std::string&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>vector<sp/>of<sp/>strings<sp/>(vdata)<sp/>can<sp/>be<sp/>put<sp/>into<sp/>a<sp/>single<sp/>string<sp/>(data)<sp/>with<sp/>entries<sp/>separated<sp/>by<sp/>new-lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.clear();</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vdata.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vdata.empty()<sp/>and<sp/>vdata[i]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>data.append(vdata[i]);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>vdata.size()<sp/>-<sp/>1)<sp/>data.append(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_container_of_v&lt;DataType,<sp/>std::string&gt;<sp/>and<sp/>h5pp::type::sfinae::has_resize_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.clear();</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.resize(vdata.size());</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data.size();<sp/>i++)<sp/>data[i]<sp/>=<sp/>std::string(vdata[i]);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;To<sp/>read<sp/>text-data,<sp/>please<sp/>use<sp/>std::string<sp/>or<sp/>a<sp/>container<sp/>of<sp/>std::string<sp/>like<sp/>std::vector&lt;std::string&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>memory<sp/>allocated<sp/>by<sp/>HDF5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Dvlen_reclaim(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>vdata.data());</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>elements<sp/>in<sp/>the<sp/>dataset<sp/>have<sp/>the<sp/>same<sp/>string<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>whole<sp/>dataset<sp/>is<sp/>read<sp/>into<sp/>a<sp/>contiguous<sp/>block<sp/>of<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytesPerString<sp/>=<sp/>H5Tget_size(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value());<sp/></highlight><highlight class="comment">//<sp/>Includes<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>H5Sget_select_npoints(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value());</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fdata;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdata.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size)<sp/>*<sp/>bytesPerString);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Dread(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>fdata.data());</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>fdata<sp/>contains<sp/>the<sp/>whole<sp/>dataset<sp/>and<sp/>we<sp/>need<sp/>to<sp/>put<sp/>the<sp/>data<sp/>into<sp/>the<sp/>user-given<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;DataType,<sp/>std::string&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>vector<sp/>of<sp/>strings<sp/>(fdata)<sp/>can<sp/>be<sp/>put<sp/>into<sp/>a<sp/>single<sp/>string<sp/>(data)<sp/>with<sp/>entries<sp/>separated<sp/>by<sp/>new-lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.clear();</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;size_t&gt;(size);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.append(fdata.substr(i<sp/>*<sp/>bytesPerString,<sp/>bytesPerString));</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data.size()<sp/>&lt;<sp/>fdata.size()<sp/>-<sp/>1)<sp/>data.append(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.erase(std::find(data.begin(),<sp/>data.end(),<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">),<sp/>data.end());<sp/></highlight><highlight class="comment">//<sp/>Prune<sp/>all<sp/>but<sp/>the<sp/>last<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_container_of_v&lt;DataType,<sp/>std::string&gt;<sp/>and<sp/>h5pp::type::sfinae::has_resize_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data.size()<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size))</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Given<sp/>container<sp/>of<sp/>strings<sp/>has<sp/>the<sp/>wrong<sp/>size:<sp/>dset<sp/>size<sp/>{}<sp/>|<sp/>container<sp/>size<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>size,<sp/>data.size()));</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;size_t&gt;(size);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(data[i].data(),<sp/>fdata.data()<sp/>+<sp/>i<sp/>*<sp/>bytesPerString,<sp/>bytesPerString);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i].erase(std::find(data[i].begin(),<sp/>data[i].end(),<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">),<sp/>data[i].end());<sp/></highlight><highlight class="comment">//<sp/>Prune<sp/>all<sp/>but<sp/>the<sp/>last<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;To<sp/>read<sp/>text-data,<sp/>please<sp/>use<sp/>std::string<sp/>or<sp/>a<sp/>container<sp/>of<sp/>std::string<sp/>like<sp/>std::vector&lt;std::string&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Dread(dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" kindref="member">h5Dset</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" kindref="member">h5Type</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" kindref="member">h5Space</ref>.value(),<sp/>plists.dsetXfer,<sp/>dataPtr);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>from<sp/>dataset<sp/>\n\t<sp/>{}<sp/>\n<sp/>into<sp/>memory<sp/>\n\t<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dsetInfo.<ref refid="structh5pp_1_1_dset_info_1a51ca59ddb506fcc9265bb50f7619e513" kindref="member">string</ref>(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a9c24baa6d7ff5e27d975df3c990adf72" kindref="member">string</ref>()));</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="1600" refid="namespaceh5pp_1_1hdf5_1ab1db408ba8b3cc86a32c6fa2b2103a40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ab1db408ba8b3cc86a32c6fa2b2103a40" kindref="member">writeAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref><sp/>&amp;dataInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref><sp/>&amp;attrInfo)<sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>H5PP_EIGEN3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_eigen_colmajor_v&lt;DataType&gt;<sp/>and<sp/>not<sp/>h5pp::type::sfinae::is_eigen_1d_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Converting<sp/>attribute<sp/>data<sp/>to<sp/>row-major<sp/>storage<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempRowm<sp/>=<sp/>eigen::to_RowMajor(data);<sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>Row<sp/>Major<sp/>first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1ab1db408ba8b3cc86a32c6fa2b2103a40" kindref="member">h5pp::hdf5::writeAttribute</ref>(tempRowm,<sp/>dataInfo,<sp/>attrInfo);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a80ea2205f9a63ed091937e9b6d7af9df" kindref="member">assertWriteReady</ref>();</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a9607a2c4dcba5c43618c3f50ad77a0f0" kindref="member">assertWriteReady</ref>();</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataInfo.<ref refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" kindref="member">dataSlab</ref>)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" kindref="member">dataSlab</ref>.value());</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a5a67b3704e021e54c7876c39b62816eb" kindref="member">attrSlab</ref>)<sp/><ref refid="namespaceh5pp_1_1hdf5_1a3f8ef4964f2953c1721e98330e9d210e" kindref="member">selectHyperslab</ref>(attrInfo.<ref refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" kindref="member">h5Space</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a5a67b3704e021e54c7876c39b62816eb" kindref="member">attrSlab</ref>.value());</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Writing<sp/>from<sp/>memory<sp/><sp/><sp/><sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a9c24baa6d7ff5e27d975df3c990adf72" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Writing<sp/>into<sp/>attribute<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3c1fbec1555bd671b7cb2907cf956bdd" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac48d320203ec4d800865791009888f0b" kindref="member">h5pp::hdf5::assertWriteBufferIsLargeEnough</ref>(data,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::hdf5::assertBytesPerElemMatch&lt;DataType&gt;(attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" kindref="member">h5pp::hdf5::assertSpacesEqual</ref>(dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" kindref="member">h5Space</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataPtr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data.data();</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;<sp/>or<sp/>std::is_array_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>&amp;data;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;<sp/>or<sp/>h5pp::type::sfinae::has_text_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vec<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1adb89faacd84fe67fd133aa2afc560356" kindref="member">getCharPtrVector</ref>(data);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>-&gt;value())<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Awrite(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" kindref="member">h5Attr</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),<sp/>vec.data());</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Awrite(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" kindref="member">h5Attr</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),<sp/>*vec.data());</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Awrite(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" kindref="member">h5Attr</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),<sp/>dataPtr);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>into<sp/>attribute<sp/>\n\t<sp/>{}<sp/>\n<sp/>from<sp/>memory<sp/>\n\t<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3c1fbec1555bd671b7cb2907cf956bdd" kindref="member">string</ref>(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a9c24baa6d7ff5e27d975df3c990adf72" kindref="member">string</ref>()));</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;not<sp/>std::is_const_v&lt;DataType&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="1643" refid="namespaceh5pp_1_1hdf5_1a491d188d7dde459b8598ab5303eedd36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a491d188d7dde459b8598ab5303eedd36" kindref="member">readAttribute</ref>(DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref><sp/>&amp;dataInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref><sp/>&amp;attrInfo)<sp/>{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transpose<sp/>the<sp/>data<sp/>container<sp/>before<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>H5PP_EIGEN3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_eigen_colmajor_v&lt;DataType&gt;<sp/>and<sp/>not<sp/>h5pp::type::sfinae::is_eigen_1d_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Converting<sp/>data<sp/>to<sp/>row-major<sp/>storage<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempRowMajor<sp/>=<sp/>eigen::to_RowMajor(data);<sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>Row<sp/>Major<sp/>first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a491d188d7dde459b8598ab5303eedd36" kindref="member">h5pp::hdf5::readAttribute</ref>(tempRowMajor,<sp/>dataInfo,<sp/>attrInfo);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>eigen::to_ColMajor(tempRowMajor);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a1230095c3c270b1ccf61b7e325aeac4f" kindref="member">assertReadReady</ref>();</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a9c8da2d2f3c1e303964d06127f6406fa" kindref="member">assertReadReady</ref>();</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Reading<sp/>into<sp/>memory<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a9c24baa6d7ff5e27d975df3c990adf72" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Reading<sp/>from<sp/>file<sp/><sp/><sp/>{}&quot;</highlight><highlight class="normal">,<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3c1fbec1555bd671b7cb2907cf956bdd" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a05e2d3f617c99b45cc39b585605c2ab8" kindref="member">h5pp::hdf5::assertReadBufferIsLargeEnough</ref>(data,<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::hdf5::assertBytesPerElemMatch&lt;DataType&gt;(attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" kindref="member">h5pp::hdf5::assertSpacesEqual</ref>(dataInfo.<ref refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" kindref="member">h5Space</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" kindref="member">h5Space</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value());</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>herr_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataPtr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data.data();</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;<sp/>or<sp/>std::is_array_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>&amp;data;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_text_v&lt;DataType&gt;<sp/>or<sp/>h5pp::type::sfinae::has_text_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>H5T_VARIABLE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>H5Aread<sp/>expects<sp/>[const<sp/>char<sp/>**],<sp/>which<sp/>is<sp/>what<sp/>we<sp/>get<sp/>from<sp/>vdata.data().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/>H5Aread<sp/>allocates<sp/>memory<sp/>on<sp/>each<sp/>const<sp/>char<sp/>*<sp/>which<sp/>has<sp/>to<sp/>be<sp/>reclaimed<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>H5Aread<sp/>expects<sp/>[char<sp/>*],<sp/>i.e.<sp/>*vdata.data()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/>Allocation<sp/>on<sp/>char<sp/>*<sp/>must<sp/>be<sp/>done<sp/>before<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H5Tis_variable_str(attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value())<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>H5Sget_select_npoints(attrInfo.<ref refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" kindref="member">h5Space</ref>.value());</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;char<sp/>*&gt;<sp/>vdata(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size));<sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>pointers<sp/>for<sp/>&quot;size&quot;<sp/>number<sp/>of<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HDF5<sp/>allocates<sp/>space<sp/>for<sp/>each<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Aread(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" kindref="member">h5Attr</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),<sp/>vdata.data());</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>vdata<sp/>contains<sp/>the<sp/>whole<sp/>dataset<sp/>and<sp/>we<sp/>need<sp/>to<sp/>put<sp/>the<sp/>data<sp/>into<sp/>the<sp/>user-given<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;DataType,<sp/>std::string&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>vector<sp/>of<sp/>strings<sp/>(vdata)<sp/>can<sp/>be<sp/>put<sp/>into<sp/>a<sp/>single<sp/>string<sp/>(data)<sp/>with<sp/>entries<sp/>separated<sp/>by<sp/>new-lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.clear();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vdata.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vdata.empty()<sp/>and<sp/>vdata[i]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>data.append(vdata[i]);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>vdata.size()<sp/>-<sp/>1)<sp/>data.append(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_container_of_v&lt;DataType,<sp/>std::string&gt;<sp/>and<sp/>h5pp::type::sfinae::has_resize_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.clear();</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.resize(vdata.size());</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data.size();<sp/>i++)<sp/>data[i]<sp/>=<sp/>std::string(vdata[i]);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;To<sp/>read<sp/>text-data,<sp/>please<sp/>use<sp/>std::string<sp/>or<sp/>a<sp/>container<sp/>of<sp/>std::string<sp/>like<sp/>std::vector&lt;std::string&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>memory<sp/>allocated<sp/>by<sp/>HDF5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Dvlen_reclaim(attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" kindref="member">h5Space</ref>.value(),<sp/>H5P_DEFAULT,<sp/>vdata.data());</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>elements<sp/>in<sp/>the<sp/>dataset<sp/>have<sp/>the<sp/>same<sp/>string<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>whole<sp/>dataset<sp/>is<sp/>read<sp/>into<sp/>a<sp/>contiguous<sp/>block<sp/>of<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytesPerString<sp/>=<sp/>H5Tget_size(attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value());<sp/></highlight><highlight class="comment">//<sp/>Includes<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>H5Sget_select_npoints(attrInfo.<ref refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" kindref="member">h5Space</ref>.value());</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fdata;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdata.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size)<sp/>*<sp/>bytesPerString);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Aread(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" kindref="member">h5Attr</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),<sp/>fdata.data());</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>fdata<sp/>contains<sp/>the<sp/>whole<sp/>dataset<sp/>and<sp/>we<sp/>need<sp/>to<sp/>put<sp/>the<sp/>data<sp/>into<sp/>the<sp/>user-given<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;DataType,<sp/>std::string&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>vector<sp/>of<sp/>strings<sp/>(fdata)<sp/>can<sp/>be<sp/>put<sp/>into<sp/>a<sp/>single<sp/>string<sp/>(data)<sp/>with<sp/>entries<sp/>separated<sp/>by<sp/>new-lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.clear();</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;size_t&gt;(size);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.append(fdata.substr(i<sp/>*<sp/>bytesPerString,<sp/>bytesPerString));</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data.size()<sp/>&lt;<sp/>fdata.size()<sp/>-<sp/>1)<sp/>data.append(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::is_container_of_v&lt;DataType,<sp/>std::string&gt;<sp/>and<sp/>h5pp::type::sfinae::has_resize_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.clear();</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size));</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;size_t&gt;(size);<sp/>i++)<sp/>data[i]<sp/>=<sp/>fdata.substr(i<sp/>*<sp/>bytesPerString,<sp/>bytesPerString);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;To<sp/>read<sp/>text-data,<sp/>please<sp/>use<sp/>std::string<sp/>or<sp/>a<sp/>container<sp/>of<sp/>std::string<sp/>like<sp/>std::vector&lt;std::string&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;DataType,<sp/>std::string&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.erase(std::find(data.begin(),<sp/>data.end(),<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">),<sp/>data.end());<sp/></highlight><highlight class="comment">//<sp/>Prune<sp/>all<sp/>but<sp/>the<sp/>last<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>H5Aread(attrInfo.<ref refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" kindref="member">h5Attr</ref>.value(),<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" kindref="member">h5Type</ref>.value(),<sp/>dataPtr);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>from<sp/>attribute<sp/>\n\t<sp/>{}<sp/>\n<sp/>into<sp/>memory<sp/>\n\t<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>attrInfo.<ref refid="structh5pp_1_1_attr_info_1a3c1fbec1555bd671b7cb2907cf956bdd" kindref="member">string</ref>(),<sp/>dataInfo.<ref refid="structh5pp_1_1_data_info_1a9c24baa6d7ff5e27d975df3c990adf72" kindref="member">string</ref>()));</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734" refid="namespaceh5pp_1_1hdf5_1a5260fe3172613b255dc84665afc111ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a5260fe3172613b255dc84665afc111ca" kindref="member">fileIsValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::path<sp/>&amp;filePath)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs::exists(filePath)<sp/>and<sp/>H5Fis_hdf5(filePath.string().c_str())<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736" refid="namespaceh5pp_1_1hdf5_1a9f4e16d8ddd71e394fc681a42871b692" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>fs::path<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9f4e16d8ddd71e394fc681a42871b692" kindref="member">getAvailableFileName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::path<sp/>&amp;filePath)<sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>newFileName<sp/>=<sp/>filePath;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(fs::exists(newFileName))<sp/>{<sp/>newFileName.replace_filename(filePath.stem().string()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i++)<sp/>+<sp/>filePath.extension().string());<sp/>}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newFileName;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743" refid="namespaceh5pp_1_1hdf5_1a355a5919db08c2695a14eb4087689ac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>fs::path<sp/><ref refid="namespaceh5pp_1_1hdf5_1a355a5919db08c2695a14eb4087689ac8" kindref="member">getBackupFileName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fs::path<sp/>&amp;filePath)<sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>newFilePath<sp/>=<sp/>filePath;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(fs::exists(newFilePath))<sp/>{<sp/>newFilePath.replace_extension(filePath.extension().string()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.bak_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i++));<sp/>}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newFilePath;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750" refid="namespaceh5pp_1_1hdf5_1a04db331d2b5b2964960c8e74233bb153" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">h5pp::FilePermission</ref><sp/><ref refid="namespaceh5pp_1_1hdf5_1a04db331d2b5b2964960c8e74233bb153" kindref="member">convertFileAccessFlags</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>H5F_ACC_FLAGS)<sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">h5pp::FilePermission</ref><sp/>permission<sp/>=<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca507f09f72160920edb481656c350e76c" kindref="member">h5pp::FilePermission::RENAME</ref>;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((H5F_ACC_FLAGS<sp/>&amp;<sp/>(H5F_ACC_TRUNC<sp/>|<sp/>H5F_ACC_EXCL))<sp/>==<sp/>(H5F_ACC_TRUNC<sp/>|<sp/>H5F_ACC_EXCL))</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;File<sp/>access<sp/>modes<sp/>H5F_ACC_EXCL<sp/>and<sp/>H5F_ACC_TRUNC<sp/>are<sp/>mutually<sp/>exclusive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((H5F_ACC_FLAGS<sp/>&amp;<sp/>H5F_ACC_RDONLY)<sp/>==<sp/>H5F_ACC_RDONLY)<sp/>permission<sp/>=<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca34db6698cff32ac89724758fdaa5512e" kindref="member">h5pp::FilePermission::READONLY</ref>;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((H5F_ACC_FLAGS<sp/>&amp;<sp/>H5F_ACC_RDWR)<sp/>==<sp/>H5F_ACC_RDWR)<sp/>permission<sp/>=<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf" kindref="member">h5pp::FilePermission::READWRITE</ref>;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((H5F_ACC_FLAGS<sp/>&amp;<sp/>H5F_ACC_EXCL)<sp/>==<sp/>H5F_ACC_EXCL)<sp/>permission<sp/>=<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a" kindref="member">h5pp::FilePermission::COLLISION_FAIL</ref>;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((H5F_ACC_FLAGS<sp/>&amp;<sp/>H5F_ACC_TRUNC)<sp/>==<sp/>H5F_ACC_TRUNC)<sp/>permission<sp/>=<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca560a2dd6f6744646473b3b19e1fe96d7" kindref="member">h5pp::FilePermission::REPLACE</ref>;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>permission;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761" refid="namespaceh5pp_1_1hdf5_1a2d35320272b8767b3a62b29f7beef587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a04db331d2b5b2964960c8e74233bb153" kindref="member">convertFileAccessFlags</ref>(<ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">h5pp::FilePermission</ref><sp/>permission)<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>H5F_ACC_MODE<sp/>=<sp/>H5F_ACC_RDONLY;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a" kindref="member">h5pp::FilePermission::COLLISION_FAIL</ref>)<sp/>H5F_ACC_MODE<sp/>|=<sp/>H5F_ACC_EXCL;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca560a2dd6f6744646473b3b19e1fe96d7" kindref="member">h5pp::FilePermission::REPLACE</ref>)<sp/>H5F_ACC_MODE<sp/>|=<sp/>H5F_ACC_TRUNC;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca507f09f72160920edb481656c350e76c" kindref="member">h5pp::FilePermission::RENAME</ref>)<sp/>H5F_ACC_MODE<sp/>|=<sp/>H5F_ACC_TRUNC;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca34db6698cff32ac89724758fdaa5512e" kindref="member">h5pp::FilePermission::READONLY</ref>)<sp/>H5F_ACC_MODE<sp/>|=<sp/>H5F_ACC_RDONLY;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf" kindref="member">h5pp::FilePermission::READWRITE</ref>)<sp/>H5F_ACC_MODE<sp/>|=<sp/>H5F_ACC_RDWR;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>H5F_ACC_MODE;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771" refid="namespaceh5pp_1_1hdf5_1ae4b58edbb030342186ceced8a5b4154f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>fs::path<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae4b58edbb030342186ceced8a5b4154f" kindref="member">createFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5pp::fs::path<sp/>&amp;filePath_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">h5pp::FilePermission</ref><sp/>&amp;permission,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>filePath<sp/>=<sp/>fs::absolute(filePath_);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::path<sp/>fileName<sp/>=<sp/>filePath_.filename();</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fs::exists(filePath))<sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespaceh5pp_1_1hdf5_1a5260fe3172613b255dc84665afc111ca" kindref="member">fileIsValid</ref>(filePath))<sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Pre-existing<sp/>file<sp/>may<sp/>be<sp/>corrupted<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>filePath.string());</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca34db6698cff32ac89724758fdaa5512e" kindref="member">h5pp::FilePermission::READONLY</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filePath;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a" kindref="member">h5pp::FilePermission::COLLISION_FAIL</ref>)</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;[COLLISION_FAIL]:<sp/>Previous<sp/>file<sp/>exists<sp/>with<sp/>the<sp/>same<sp/>name<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>filePath.string()));</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca507f09f72160920edb481656c350e76c" kindref="member">h5pp::FilePermission::RENAME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newFilePath<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a9f4e16d8ddd71e394fc681a42871b692" kindref="member">getAvailableFileName</ref>(filePath);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;[RENAME]:<sp/>Previous<sp/>file<sp/>exists.<sp/>Choosing<sp/>a<sp/>new<sp/>file<sp/>name<sp/>[{}]<sp/>--&gt;<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>filePath.filename().string(),<sp/>newFilePath.filename().string());</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/>newFilePath;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/>filePath.filename();</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf" kindref="member">h5pp::FilePermission::READWRITE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filePath;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecabfdf97ae01c73d83a58ec41f78a4291f" kindref="member">h5pp::FilePermission::BACKUP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>backupPath<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1a355a5919db08c2695a14eb4087689ac8" kindref="member">getBackupFileName</ref>(filePath);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;[BACKUP]:<sp/>Backing<sp/>up<sp/>existing<sp/>file<sp/>[{}]<sp/>--&gt;<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>filePath.filename().string(),<sp/>backupPath.filename().string());</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::rename(filePath,<sp/>backupPath);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca560a2dd6f6744646473b3b19e1fe96d7" kindref="member">h5pp::FilePermission::REPLACE</ref>)<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca34db6698cff32ac89724758fdaa5512e" kindref="member">h5pp::FilePermission::READONLY</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;[READONLY]:<sp/>File<sp/>does<sp/>not<sp/>exist<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>filePath.string()));</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a" kindref="member">h5pp::FilePermission::COLLISION_FAIL</ref>)<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca507f09f72160920edb481656c350e76c" kindref="member">h5pp::FilePermission::RENAME</ref>)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf" kindref="member">h5pp::FilePermission::READWRITE</ref>)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecabfdf97ae01c73d83a58ec41f78a4291f" kindref="member">h5pp::FilePermission::BACKUP</ref>)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca560a2dd6f6744646473b3b19e1fe96d7" kindref="member">h5pp::FilePermission::REPLACE</ref>)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fs::create_directories(filePath.parent_path()))</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Created<sp/>directory:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>filePath.parent_path().string());</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Directory<sp/>already<sp/>exists:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>filePath.parent_path().string());</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::exception<sp/>&amp;ex)<sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>directory:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>ex.what()));<sp/>}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>last<sp/>sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(permission<sp/>==<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca34db6698cff32ac89724758fdaa5512e" kindref="member">h5pp::FilePermission::READONLY</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;About<sp/>to<sp/>create/truncate<sp/>a<sp/>file<sp/>even<sp/>though<sp/>READONLY<sp/>was<sp/>specified.<sp/>This<sp/>is<sp/>a<sp/>programming<sp/>error!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>ahead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>file<sp/>=<sp/>H5Fcreate(filePath.string().c_str(),<sp/>H5F_ACC_TRUNC,<sp/>plists.fileCreate,<sp/>plists.fileAccess);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>file<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>filePath.string()));</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Fclose(file);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs::canonical(filePath);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x&gt;&gt;</highlight></codeline>
<codeline lineno="1821" refid="namespaceh5pp_1_1hdf5_1a7e2e855ee1b421b132774b27b579da9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7e2e855ee1b421b132774b27b579da9a" kindref="member">createTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x<sp/>&amp;loc,<sp/><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref><sp/>&amp;info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a37176dac28e2be58148a8b5e66069262" kindref="member">assertCreateReady</ref>();</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Creating<sp/>table<sp/>[{}]<sp/>|<sp/>num<sp/>fields<sp/>{}<sp/>|<sp/>record<sp/>size<sp/>{}<sp/>bytes&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_table_info_1a0134faaab1a3c70a5c07cef6f1862815" kindref="member">numFields</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value());</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1ab4fd79ee7711215ba230417707d81e92" kindref="member">createGroup</ref>(loc,<sp/>info.<ref refid="structh5pp_1_1_table_info_1aa99afd50684d01bc05f42b0168ad85f2" kindref="member">tableGroupName</ref>.value(),<sp/>std::nullopt,<sp/>plists);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespaceh5pp_1_1hdf5_1a71cb3037642949c7d839e1d06fd586e1" kindref="member">checkIfLinkExists</ref>(loc,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>info.<ref refid="structh5pp_1_1_table_info_1ad9db6683bff24f33b3239d939fc5fbbd" kindref="member">tableExists</ref>,<sp/>plists.linkAccess))<sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Table<sp/>[{}]<sp/>already<sp/>exists&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value());</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>member<sp/>type<sp/>data<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>hid_t<sp/>for<sp/>compatibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>close<sp/>thes<sp/>hid_t<sp/>since<sp/>info<sp/>will<sp/>close<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hid_t&gt;<sp/>fieldTypesHidT(info.<ref refid="structh5pp_1_1_table_info_1afbbda9cf5c07f618f545c2084259b3e4" kindref="member">fieldTypes</ref>.value().begin(),<sp/>info.<ref refid="structh5pp_1_1_table_info_1afbbda9cf5c07f618f545c2084259b3e4" kindref="member">fieldTypes</ref>.value().end());</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>member<sp/>name<sp/>data<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>const<sp/>char<sp/>*<sp/>for<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>char<sp/>*&gt;<sp/>fieldNames;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;name<sp/>:<sp/>info.<ref refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" kindref="member">fieldNames</ref>.value())<sp/>fieldNames.push_back(name.c_str());</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compression<sp/>=<sp/>info.<ref refid="structh5pp_1_1_table_info_1aeae14b48cded957e54b302a779334d85" kindref="member">compressionLevel</ref>.value()<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>true/false<sp/>(1/0).<sp/>Is<sp/>set<sp/>to<sp/>level<sp/>6<sp/>in<sp/>HDF5<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5TBmake_table(<ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(info.<ref refid="structh5pp_1_1_table_info_1adca1998058259900599381c2463db726" kindref="member">tableTitle</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc,</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a0134faaab1a3c70a5c07cef6f1862815" kindref="member">numFields</ref>.value(),</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value(),</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value(),</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldNames.data(),</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value().data(),</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldTypesHidT.data(),</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a781a212c634da1c444c724285c80024d" kindref="member">chunkSize</ref>.value(),</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compression,</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>created<sp/>table<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value());</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1ad9db6683bff24f33b3239d939fc5fbbd" kindref="member">tableExists</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;h5x,<sp/>hid::h5f&gt;)<sp/>info.<ref refid="structh5pp_1_1_table_info_1a9c8236361ecedce52d982899ada5d4be" kindref="member">tableFile</ref><sp/>=<sp/>loc;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same_v&lt;h5x,<sp/>hid::h5g&gt;)<sp/>info.<ref refid="structh5pp_1_1_table_info_1ab1d7151b1949391e84af9e052fd47f21" kindref="member">tableGroup</ref><sp/>=<sp/>loc;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="1859" refid="namespaceh5pp_1_1hdf5_1a7904fe2560012573ab6e51f147ed3272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a7904fe2560012573ab6e51f147ed3272" kindref="member">appendTableEntries</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>&amp;data,<sp/><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref><sp/>&amp;info)<sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numNewRecords<sp/>=<sp/><ref refid="namespaceh5pp_1_1util_1aa8efa111edbaaac102e0bd279dc08a11" kindref="member">h5pp::util::getSize</ref>(data);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Appending<sp/>{}<sp/>new<sp/>records<sp/>to<sp/>table<sp/>[{}]<sp/>|<sp/>table<sp/>num<sp/>records<sp/>{}<sp/>|<sp/>record<sp/>size<sp/>{}<sp/>bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords,</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value(),</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value());</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>given<sp/>container<sp/>and<sp/>the<sp/>registered<sp/>table<sp/>entry<sp/>have<sp/>the<sp/>same<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>a<sp/>mismatch<sp/>here<sp/>it<sp/>can<sp/>cause<sp/>horrible<sp/>bugs/segfaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_value_type_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType::value_type)<sp/>!=<sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value())</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Size<sp/>mismatch:<sp/>Given<sp/>container<sp/>of<sp/>type<sp/>{}<sp/>has<sp/>elements<sp/>of<sp/>{}<sp/>bytes,<sp/>but<sp/>the<sp/>table<sp/>entries<sp/>on<sp/>file<sp/>are<sp/>{}<sp/>bytes<sp/>each<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;(),</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType::value_type),</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value()));</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;<sp/>and<sp/>h5pp::type::sfinae::is_iterable_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(&amp;data.data())<sp/>!=<sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value())</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Size<sp/>mismatch:<sp/>Given<sp/>container<sp/>of<sp/>type<sp/>{}<sp/>has<sp/>elements<sp/>of<sp/>{}<sp/>bytes,<sp/>but<sp/>the<sp/>table<sp/>entries<sp/>on<sp/>file<sp/>are<sp/>{}<sp/>bytes<sp/>each<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;(),</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(&amp;data.data()),</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value()));</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>!=<sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value())</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Size<sp/>mismatch:<sp/>Given<sp/>data<sp/>type<sp/>{}<sp/>is<sp/>of<sp/>{}<sp/>bytes,<sp/>but<sp/>the<sp/>table<sp/>entries<sp/>on<sp/>file<sp/>are<sp/>{}<sp/>bytes<sp/>each<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h5pp::type::sfinae::type_name&lt;DataType&gt;(),</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType),</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value()));</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5TBappend_records(info.<ref refid="structh5pp_1_1_table_info_1a5899434c437808e3fb7fe10cd2db72c0" kindref="member">getTableLocId</ref>(),</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords,</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value(),</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value().data(),</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value().data(),</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.data());</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5TBappend_records(info.<ref refid="structh5pp_1_1_table_info_1a5899434c437808e3fb7fe10cd2db72c0" kindref="member">getTableLocId</ref>(),</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords,</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value(),</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value().data(),</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value().data(),</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;data);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value()<sp/>+=<sp/>numNewRecords;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909" refid="namespaceh5pp_1_1hdf5_1ae53970ca0c8ac127e362ce935819bac1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ae53970ca0c8ac127e362ce935819bac1" kindref="member">addTableEntriesFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_table_info" kindref="compound">h5pp::TableInfo</ref><sp/>&amp;srcInfo,<sp/><ref refid="structh5pp_1_1_table_info" kindref="compound">h5pp::TableInfo</ref><sp/>&amp;tgtInfo,<sp/>hsize_t<sp/>srcStartIdx,<sp/>hsize_t<sp/>tgtStartIdx,<sp/>hsize_t<sp/>numNewRecords)<sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1aae44c54255a9b60e7f4c9f5f87bd4d37" kindref="member">assertReadReady</ref>();</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1ae40657ea67fec8c17cea6f90882f39db" kindref="member">assertWriteReady</ref>();</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>checks<sp/>for<sp/>table<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srcInfo.<ref refid="structh5pp_1_1_table_info_1a97c6b36d21a3f463d09a2d763093218a" kindref="member">tableType</ref>.value()<sp/>!=<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a97c6b36d21a3f463d09a2d763093218a" kindref="member">tableType</ref>.value())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>table<sp/>entries:<sp/>table<sp/>type<sp/>mismatch&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srcInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value()<sp/>!=<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value())</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>table<sp/>entries:<sp/>table<sp/>entry<sp/>byte<sp/>size<sp/>mismatch<sp/>src<sp/>{}<sp/>!=<sp/>tgt<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value(),<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value()));</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srcInfo.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value()<sp/>!=<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value())</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>table<sp/>entries:<sp/>table<sp/>field<sp/>sizes<sp/>mismatch<sp/>src<sp/>{}<sp/>!=<sp/>tgt<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value(),<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value()));</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srcInfo.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value()<sp/>!=<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value())</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>table<sp/>entries:<sp/>table<sp/>field<sp/>offsets<sp/>mismatch<sp/>src<sp/>{}<sp/>!=<sp/>tgt<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value(),<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value()));</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check<sp/>for<sp/>entry<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srcInfo.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value()<sp/>&lt;<sp/>srcStartIdx<sp/>+<sp/>numNewRecords)</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>table<sp/>entries:<sp/>Requeted<sp/>entries<sp/>out<sp/>of<sp/>bound:<sp/>src<sp/>table<sp/>nrecords<sp/>{}<sp/>|<sp/>src<sp/>table<sp/>start<sp/>entry<sp/>{}<sp/>|<sp/>num<sp/>entries<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value(),</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcStartIdx,</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords));</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srcInfo.<ref refid="structh5pp_1_1_table_info_1a9c8236361ecedce52d982899ada5d4be" kindref="member">tableFile</ref>.value()<sp/>==<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a9c8236361ecedce52d982899ada5d4be" kindref="member">tableFile</ref>.value())<sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;adding<sp/>records<sp/>to<sp/>table<sp/>[{}]<sp/>from<sp/>table<sp/>[{}]<sp/>|<sp/>src<sp/>start<sp/>entry<sp/>{}<sp/>|<sp/>tgt<sp/>start<sp/>entry<sp/>{}<sp/>|<sp/>num<sp/>entries<sp/>{}<sp/>|<sp/>entry<sp/>size<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcStartIdx,</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtStartIdx,</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords,</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value());</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5TBadd_records_from(srcInfo.<ref refid="structh5pp_1_1_table_info_1a5899434c437808e3fb7fe10cd2db72c0" kindref="member">getTableLocId</ref>(),</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(srcInfo.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcStartIdx,</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords,</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(tgtInfo.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtStartIdx);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>locations<sp/>are<sp/>on<sp/>different<sp/>files<sp/>we<sp/>need<sp/>to<sp/>make<sp/>a<sp/>temporary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;adding<sp/>records<sp/>to<sp/>table<sp/>[{}]<sp/>from<sp/>table<sp/>[{}]<sp/>on<sp/>different<sp/>file<sp/>|<sp/>src<sp/>start<sp/>entry<sp/>{}<sp/>|<sp/>tgt<sp/>start<sp/>entry<sp/>{}<sp/>|<sp/>num<sp/>entries<sp/>{}<sp/>|<sp/>entry<sp/>size<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcStartIdx,</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtStartIdx,</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords,</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value());</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::byte&gt;<sp/>data(numNewRecords<sp/>*<sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value());</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5TBread_records(srcInfo.<ref refid="structh5pp_1_1_table_info_1a5899434c437808e3fb7fe10cd2db72c0" kindref="member">getTableLocId</ref>(),</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(srcInfo.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcStartIdx,</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords,</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value(),</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value().data(),</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcInfo.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value().data(),</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.data());</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5TBappend_records(tgtInfo.<ref refid="structh5pp_1_1_table_info_1a5899434c437808e3fb7fe10cd2db72c0" kindref="member">getTableLocId</ref>(),</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(tgtInfo.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNewRecords,</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value(),</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value().data(),</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value().data(),</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.data());</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgtInfo.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value()<sp/>+=<sp/>numNewRecords;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="1978" refid="namespaceh5pp_1_1hdf5_1ac73708c696f40540fd776dfb0a9c29e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1ac73708c696f40540fd776dfb0a9c29e5" kindref="member">readTableEntries</ref>(DataType<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref><sp/>&amp;info,<sp/>std::optional&lt;size_t&gt;<sp/>startIdx<sp/>=<sp/>std::nullopt,<sp/>std::optional&lt;size_t&gt;<sp/>numReadRecords<sp/>=<sp/>std::nullopt)<sp/>{</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>none<sp/>of<sp/>startIdx<sp/>or<sp/>numReadRecords<sp/>are<sp/>given:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>data<sp/>resizeable:<sp/>startIdx<sp/>=<sp/>0,<sp/>numReadRecords<sp/>=<sp/>totalRecords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>data<sp/>not<sp/>resizeable:<sp/>startIdx<sp/>=<sp/>last<sp/>entry,<sp/>numReadRecords<sp/>=<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>startIdx<sp/>given<sp/>but<sp/>numReadRecords<sp/>is<sp/>not:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>data<sp/>resizeable<sp/>-&gt;<sp/>read<sp/>from<sp/>startEntries<sp/>to<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>data<sp/>not<sp/>resizeable<sp/>-&gt;<sp/>read<sp/>from<sp/>startEntries<sp/>a<sp/>single<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>numReadRecords<sp/>given<sp/>but<sp/>startEntries<sp/>is<sp/>not<sp/>-&gt;<sp/>read<sp/>the<sp/>last<sp/>numReadRecords<sp/>records</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hsize_t<sp/>totalRecords<sp/>=<sp/>info.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value();</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>startIdx<sp/>and<sp/>not<sp/>numReadRecords)<sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_resize_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords<sp/>=<sp/>totalRecords;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>totalRecords<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIdx<sp/>and<sp/>not<sp/>numReadRecords)<sp/>{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIdx.value()<sp/>&gt;<sp/>totalRecords<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>start<sp/>record<sp/>for<sp/>table<sp/>[{}]<sp/>|<sp/>nrecords<sp/>[{}]<sp/>|<sp/>start<sp/>entry<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>totalRecords,<sp/>startIdx.value()));</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_resize_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords<sp/>=<sp/>totalRecords<sp/>-<sp/>startIdx.value();</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numReadRecords<sp/>and<sp/>not<sp/>startIdx)<sp/>{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numReadRecords<sp/>and<sp/>numReadRecords.value()<sp/>&gt;<sp/>totalRecords)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Asked<sp/>for<sp/>more<sp/>records<sp/>than<sp/>available<sp/>in<sp/>table<sp/>[{}]<sp/>|<sp/>nrecords<sp/>[{}]<sp/>|<sp/>num_entries<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>totalRecords,<sp/>numReadRecords.value()));</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx<sp/>=<sp/>totalRecords<sp/>-<sp/>numReadRecords.value();</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numReadRecords.value()<sp/>&gt;<sp/>totalRecords)</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Asked<sp/>for<sp/>more<sp/>records<sp/>than<sp/>available<sp/>in<sp/>table<sp/>[{}]<sp/>|<sp/>nrecords<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>totalRecords));</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIdx.value()<sp/>+<sp/>numReadRecords.value()<sp/>&gt;<sp/>totalRecords)</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Asked<sp/>for<sp/>more<sp/>records<sp/>than<sp/>available<sp/>in<sp/>table<sp/>[{}]<sp/>|<sp/>nrecords<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>totalRecords));</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Reading<sp/>table<sp/>[{}]<sp/>|<sp/>read<sp/>from<sp/>record<sp/>{}<sp/>|<sp/>read<sp/>num<sp/>records<sp/>{}<sp/>|<sp/>available<sp/>records<sp/>{}<sp/>|<sp/>record<sp/>size<sp/>{}<sp/>bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx.value(),</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords.value(),</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value(),</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value());</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>given<sp/>container<sp/>and<sp/>the<sp/>registered<sp/>table<sp/>entry<sp/>have<sp/>the<sp/>same<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>a<sp/>mismatch<sp/>here<sp/>it<sp/>can<sp/>cause<sp/>horrible<sp/>bugs/segfaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_value_type_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType::value_type);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;<sp/>and<sp/>h5pp::type::sfinae::is_iterable_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(&amp;data.data());</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataSize<sp/>!=<sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value())</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>read<sp/>from<sp/>table<sp/>[{}]:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Size<sp/>mismatch:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Given<sp/>data<sp/>container<sp/>size<sp/>is<sp/>{}<sp/>bytes<sp/>per<sp/>element<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Table<sp/>is<sp/>{}<sp/>bytes<sp/>per<sp/>entry&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize,</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value()));</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1a4ac2338aca306326f5c514c96c69665b" kindref="member">h5pp::util::resizeData</ref>(data,<sp/>{numReadRecords.value()});</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataPtr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data.data();</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;<sp/>or<sp/>std::is_array_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>&amp;data;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5TBread_records(info.<ref refid="structh5pp_1_1_table_info_1a5899434c437808e3fb7fe10cd2db72c0" kindref="member">getTableLocId</ref>(),</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx.value(),</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords.value(),</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value(),</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value().data(),</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value().data(),</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="2065" refid="namespaceh5pp_1_1hdf5_1a508a44fdc3179d19b37c77d2995413f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a508a44fdc3179d19b37c77d2995413f1" kindref="member">readTableField</ref>(DataType<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref><sp/>&amp;<sp/><sp/><sp/><sp/><sp/>info,</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><sp/><sp/><sp/><sp/><sp/>fieldName,</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/>startIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/>numReadRecords<sp/>=<sp/>std::nullopt)<sp/>{</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>none<sp/>of<sp/>startIdx<sp/>or<sp/>numReadRecords<sp/>are<sp/>given:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>data<sp/>resizeable:<sp/>startIdx<sp/>=<sp/>0,<sp/>numReadRecords<sp/>=<sp/>totalRecords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>data<sp/>not<sp/>resizeable:<sp/>startIdx<sp/>=<sp/>last<sp/>entry,<sp/>numReadRecords<sp/>=<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>startIdx<sp/>given<sp/>but<sp/>numReadRecords<sp/>is<sp/>not:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>data<sp/>resizeable<sp/>-&gt;<sp/>read<sp/>from<sp/>startEntries<sp/>to<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>data<sp/>not<sp/>resizeable<sp/>-&gt;<sp/>read<sp/>from<sp/>startEntries<sp/>a<sp/>single<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>numReadRecords<sp/>given<sp/>but<sp/>startEntries<sp/>is<sp/>not<sp/>-&gt;<sp/>read<sp/>the<sp/>last<sp/>numReadRecords<sp/>records</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hsize_t<sp/>totalRecords<sp/>=<sp/>info.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value();</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>startIdx<sp/>and<sp/>not<sp/>numReadRecords)<sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_resize_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords<sp/>=<sp/>totalRecords;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>totalRecords<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIdx<sp/>and<sp/>not<sp/>numReadRecords)<sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIdx.value()<sp/>&gt;<sp/>totalRecords<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>start<sp/>record<sp/>for<sp/>table<sp/>[{}]<sp/>|<sp/>nrecords<sp/>[{}]<sp/>|<sp/>start<sp/>entry<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>totalRecords,<sp/>startIdx.value()));</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_resize_v&lt;DataType&gt;)<sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords<sp/>=<sp/>totalRecords<sp/>-<sp/>startIdx.value();</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numReadRecords<sp/>and<sp/>not<sp/>startIdx)<sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numReadRecords<sp/>and<sp/>numReadRecords.value()<sp/>&gt;<sp/>totalRecords)</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Asked<sp/>for<sp/>more<sp/>records<sp/>than<sp/>available<sp/>in<sp/>table<sp/>[{}]<sp/>|<sp/>nrecords<sp/>[{}]<sp/>|<sp/>num_entries<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>totalRecords,<sp/>numReadRecords.value()));</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx<sp/>=<sp/>totalRecords<sp/>-<sp/>numReadRecords.value();</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numReadRecords.value()<sp/>&gt;<sp/>totalRecords)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Asked<sp/>for<sp/>more<sp/>records<sp/>than<sp/>available<sp/>in<sp/>table<sp/>[{}]<sp/>|<sp/>nrecords<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>totalRecords));</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIdx.value()<sp/>+<sp/>numReadRecords.value()<sp/>&gt;<sp/>totalRecords)</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Asked<sp/>for<sp/>more<sp/>records<sp/>than<sp/>available<sp/>in<sp/>table<sp/>[{}]<sp/>|<sp/>nrecords<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),<sp/>totalRecords));</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>field<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/>optFieldIdx;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>info.<ref refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" kindref="member">fieldNames</ref>-&gt;size();<sp/>idx++)<sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fieldName<sp/>==<sp/>info.<ref refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" kindref="member">fieldNames</ref>.value()[idx])<sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optFieldIdx<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>optFieldIdx)</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>read<sp/>field<sp/>[{}]<sp/>from<sp/>table<sp/>[{}]:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>field<sp/>name<sp/>[{}]<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Available<sp/>field<sp/>names<sp/>are<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldName,</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldName,</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" kindref="member">fieldNames</ref>.value()));</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fieldIdx<sp/><sp/><sp/><sp/>=<sp/>optFieldIdx.value();</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fieldSize<sp/><sp/><sp/>=<sp/>info.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value()[fieldIdx];</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fieldOffset<sp/>=<sp/>info.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value()[fieldIdx];</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>given<sp/>container<sp/>and<sp/>the<sp/>registerd<sp/>table<sp/>entry<sp/>have<sp/>the<sp/>same<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>a<sp/>mismatch<sp/>here<sp/>it<sp/>can<sp/>cause<sp/>horrible<sp/>bugs/segfaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_value_type_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType::value_type);</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;<sp/>and<sp/>h5pp::type::sfinae::is_iterable_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(&amp;data.data());</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataSize<sp/>!=<sp/>fieldSize)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>read<sp/>field<sp/>[{}]<sp/>from<sp/>table<sp/>[{}]:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Size<sp/>mismatch:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Given<sp/>data<sp/>container<sp/>size<sp/>is<sp/>{}<sp/>bytes<sp/>per<sp/>element<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Field<sp/>size<sp/>is<sp/>{}<sp/>bytes<sp/>per<sp/>element&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldName,</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize,</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldSize));</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1a4ac2338aca306326f5c514c96c69665b" kindref="member">h5pp::util::resizeData</ref>(data,<sp/>{numReadRecords.value()});</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Reading<sp/>table<sp/>[{}]<sp/>|<sp/>field<sp/>[{}]<sp/>|<sp/>field<sp/>index<sp/>{}<sp/>|<sp/>field<sp/>offset<sp/>{}<sp/>|<sp/>field<sp/>size<sp/>{}<sp/>bytes<sp/>|<sp/>read<sp/>from<sp/>record<sp/>{}<sp/>|<sp/>read<sp/>num<sp/>records<sp/>{}<sp/>|<sp/>available<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;records<sp/>{}<sp/>|<sp/>record<sp/>size<sp/>{}<sp/>bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value(),</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldName,</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldIdx,</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldOffset,</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldSize,</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx.value(),</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords.value(),</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" kindref="member">numRecords</ref>.value(),</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" kindref="member">recordBytes</ref>.value());</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataPtr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(h5pp::type::sfinae::has_data_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data.data();</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_pointer_v&lt;DataType&gt;<sp/>or<sp/>std::is_array_v&lt;DataType&gt;)</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr<sp/>=<sp/>&amp;data;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5TBread_fields_name(info.<ref refid="structh5pp_1_1_table_info_1a5899434c437808e3fb7fe10cd2db72c0" kindref="member">getTableLocId</ref>(),</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(info.<ref refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" kindref="member">tablePath</ref>.value()).c_str(),</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" kindref="member">util::safe_str</ref>(fieldName).c_str(),</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIdx.value(),</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReadRecords.value(),</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldSize,</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" kindref="member">fieldOffsets</ref>.value().data(),</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" kindref="member">fieldSizes</ref>.value().data(),</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataPtr);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x_src,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>h5x_tgt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x_src&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>h5pp::type::sfinae::enable_if_is_h5_loc&lt;h5x_tgt&gt;&gt;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183" refid="namespaceh5pp_1_1hdf5_1a28c86ed26c0cffe232a5b4fdd3cc7be6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a28c86ed26c0cffe232a5b4fdd3cc7be6" kindref="member">copyLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x_src<sp/>&amp;srcLocId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;srcLinkPath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>h5x_tgt<sp/>&amp;tgtLocId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tgtLinkPath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Copying<sp/>link<sp/>[{}]<sp/>--&gt;<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcLinkPath,<sp/>tgtLinkPath);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>link<sp/>srcLinkPath<sp/>to<sp/>tgtLinkPath.<sp/>Note<sp/>that<sp/>H5Ocopy<sp/>does<sp/>this<sp/>recursively,<sp/>so<sp/>we<sp/>don&apos;t<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>iterate<sp/>links<sp/>recursively<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>H5Ocopy(srcLocId,<sp/>srcLinkPath.c_str(),<sp/>tgtLocId,<sp/>tgtLinkPath.c_str(),<sp/>H5P_DEFAULT,<sp/>plists.linkCreate);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>copy<sp/>link<sp/>[{}]<sp/>--&gt;<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcLinkPath,<sp/>tgtLinkPath));</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194" refid="namespaceh5pp_1_1hdf5_1aadfde5005057a43a520975153a8067c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1a28c86ed26c0cffe232a5b4fdd3cc7be6" kindref="member">copyLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/><sp/>srcFilePath,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/><sp/>srcLinkPath,</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/><sp/>tgtFilePath,</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/><sp/>tgtLinkPath,</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">FilePermission</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetFileCreatePermission<sp/>=<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf" kindref="member">FilePermission::READWRITE</ref>,</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Copying<sp/>link:<sp/>source<sp/>link<sp/>[{}]<sp/>|<sp/>source<sp/>file<sp/>[{}]<sp/><sp/>--&gt;<sp/><sp/>target<sp/>link<sp/>[{}]<sp/>|<sp/>target<sp/>file<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcLinkPath,<sp/>srcFilePath,<sp/>tgtLinkPath,<sp/>tgtFilePath);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>srcPath<sp/>=<sp/>fs::absolute(srcFilePath);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>fs::exists(srcPath))</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>copy<sp/>link<sp/>[{}]<sp/>from<sp/>file<sp/>[{}]:<sp/>source<sp/>file<sp/>does<sp/>not<sp/>exist<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcLinkPath,<sp/>srcFilePath,<sp/>srcPath.string()));</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tgtPath<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae4b58edbb030342186ceced8a5b4154f" kindref="member">h5pp::hdf5::createFile</ref>(tgtFilePath,<sp/>targetFileCreatePermission,<sp/>plists);</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>hidSrc<sp/><sp/>=<sp/>H5Fopen(srcPath.string().c_str(),<sp/>H5F_ACC_RDONLY,<sp/>plists.fileAccess);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>hidTgt<sp/><sp/>=<sp/>H5Fopen(tgtPath.string().c_str(),<sp/>H5F_ACC_RDWR,<sp/>plists.fileAccess);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hidSrc<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>source<sp/>file<sp/>[{}]<sp/>in<sp/>read-only<sp/>mode&quot;</highlight><highlight class="normal">,<sp/>srcPath.string()));</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hidTgt<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>target<sp/>file<sp/>[{}]<sp/>in<sp/>read-write<sp/>mode&quot;</highlight><highlight class="normal">,<sp/>tgtPath.string()));</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5f" kindref="compound">hid::h5f</ref><sp/>srcFile<sp/>=<sp/>hidSrc;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5f" kindref="compound">hid::h5f</ref><sp/>tgtFile<sp/>=<sp/>hidTgt;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a28c86ed26c0cffe232a5b4fdd3cc7be6" kindref="member">copyLink</ref>(srcFile,<sp/>srcLinkPath,<sp/>tgtFile,<sp/>tgtLinkPath);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>copy<sp/>link<sp/>[{}]<sp/>from<sp/>file<sp/>[{}]:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>srcLinkPath,<sp/>srcFilePath,<sp/>ex.what()));</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>fs::path</highlight></codeline>
<codeline lineno="2228" refid="namespaceh5pp_1_1hdf5_1ad37f966afcaa2fbc493726bff96c1a4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1ad37f966afcaa2fbc493726bff96c1a4d" kindref="member">copyFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tgt,<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">FilePermission</ref><sp/>permission<sp/>=<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a" kindref="member">FilePermission::COLLISION_FAIL</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Copying<sp/>file<sp/>[{}]<sp/>--&gt;<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>src,<sp/>tgt);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tgtPath<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ae4b58edbb030342186ceced8a5b4154f" kindref="member">h5pp::hdf5::createFile</ref>(tgt,<sp/>permission,<sp/>plists);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>srcPath<sp/>=<sp/>fs::absolute(src);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>fs::exists(srcPath))<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>copy<sp/>file<sp/>[{}]<sp/>--&gt;<sp/>[{}]:<sp/>source<sp/>file<sp/>does<sp/>not<sp/>exist<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>src,<sp/>tgt,<sp/>srcPath.string()));</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tgtPath<sp/>==<sp/>srcPath)<sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Skipped<sp/>copying<sp/>file:<sp/>source<sp/>and<sp/>target<sp/>files<sp/>have<sp/>the<sp/>same<sp/>path<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcPath.string());</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>hidSrc<sp/><sp/>=<sp/>H5Fopen(srcPath.string().c_str(),<sp/>H5F_ACC_RDONLY,<sp/>plists.fileAccess);</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hid_t<sp/>hidTgt<sp/><sp/>=<sp/>H5Fopen(tgtPath.string().c_str(),<sp/>H5F_ACC_RDWR,<sp/>plists.fileAccess);</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hidSrc<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>source<sp/>file<sp/>[{}]<sp/>in<sp/>read-only<sp/>mode&quot;</highlight><highlight class="normal">,<sp/>srcPath.string()));</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hidTgt<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>target<sp/>file<sp/>[{}]<sp/>in<sp/>read-write<sp/>mode&quot;</highlight><highlight class="normal">,<sp/>tgtPath.string()));</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5f" kindref="compound">hid::h5f</ref><sp/>srcFile<sp/>=<sp/>hidSrc;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classh5pp_1_1hid_1_1h5f" kindref="compound">hid::h5f</ref><sp/>tgtFile<sp/>=<sp/>hidTgt;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>all<sp/>the<sp/>groups<sp/>in<sp/>the<sp/>file<sp/>root<sp/>recursively.<sp/>Note<sp/>that<sp/>H5Ocopy<sp/>does<sp/>this<sp/>recursively,<sp/>so<sp/>we<sp/>don&apos;t<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>iterate<sp/>links<sp/>recursively<sp/>here.<sp/>Therefore<sp/>maxDepth<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;link<sp/>:<sp/>getContentsOfLink&lt;H5O_TYPE_UNKNOWN&gt;(srcFile,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" kindref="member">maxDepth</ref>,<sp/>plists.linkAccess))<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Copying<sp/>recursively:<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>link);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>H5Ocopy(srcFile,<sp/>link.c_str(),<sp/>tgtFile,<sp/>link.c_str(),<sp/>H5P_DEFAULT,<sp/>plists.linkCreate);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retval<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>copy<sp/>file<sp/>contents<sp/>with<sp/>H5Ocopy(srcFile,{},tgtFile,{},H5P_DEFAULT,link_create_propery_list)&quot;</highlight><highlight class="normal">,<sp/>link,<sp/>link));</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>Find<sp/>out<sp/>how<sp/>to<sp/>copy<sp/>attributes<sp/>that<sp/>are<sp/>written<sp/>on<sp/>the<sp/>root<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tgtPath;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H5Eprint(H5E_DEFAULT,<sp/>stderr);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>copy<sp/>file<sp/>[{}]<sp/>--&gt;<sp/>[{}]:<sp/>&quot;</highlight><highlight class="normal">,<sp/>src,<sp/>tgt,<sp/>ex.what()));</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>fs::path</highlight></codeline>
<codeline lineno="2270" refid="namespaceh5pp_1_1hdf5_1a5de7aeb853638a4363aec75aec6f9ce8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1hdf5_1a5de7aeb853638a4363aec75aec6f9ce8" kindref="member">moveFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tgt,<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">FilePermission</ref><sp/>permission<sp/>=<sp/><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a" kindref="member">FilePermission::COLLISION_FAIL</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref><sp/>&amp;plists<sp/>=<sp/><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Moving<sp/>file<sp/>by<sp/>copy+remove:<sp/>[{}]<sp/>--&gt;<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>src,<sp/>tgt);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tgtPath<sp/>=<sp/><ref refid="namespaceh5pp_1_1hdf5_1ad37f966afcaa2fbc493726bff96c1a4d" kindref="member">copyFile</ref>(src,<sp/>tgt,<sp/>permission,<sp/>plists);<sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>path<sp/>to<sp/>the<sp/>newly<sp/>created<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>srcPath<sp/>=<sp/>fs::absolute(src);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fs::exists(tgtPath))<sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceh5pp_1_1logger_1a3792043b7c8a174b4a4377143dc032ea" kindref="member">h5pp::logger::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Removing<sp/>file<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcPath.string());</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs::remove(srcPath);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;err)<sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Remove<sp/>failed.<sp/>File<sp/>may<sp/>be<sp/>locked<sp/>[{}]<sp/>|<sp/>what():<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>srcPath.string(),<sp/>err.what()));<sp/>}</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tgtPath;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceh5pp_1ad2b5b92d3e43f1709db8b36b48e8bf01" kindref="member">h5pp::format</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>copy<sp/>file<sp/>[{}]<sp/>to<sp/>target<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/>srcPath.string(),<sp/>tgt));</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tgtPath;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h"/>
  </compounddef>
</doxygen>
