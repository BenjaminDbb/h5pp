<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceh5pp_1_1hdf5" kind="namespace" language="C++">
    <compoundname>h5pp::hdf5</compoundname>
    <innernamespace refid="namespaceh5pp_1_1hdf5_1_1internal">h5pp::hdf5::internal</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a2ea38a728b1092c08a199eb69f5be7ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string_view &gt;</type>
        <definition>std::vector&lt;std::string_view&gt; h5pp::hdf5::pathCumulativeSplit</definition>
        <argsstring>(std::string_view path, std::string_view delim)</argsstring>
        <name>pathCumulativeSplit</name>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="20" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="20" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a5c632531114757980c02d118bcd68ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;std::is_base_of_v&lt;hid::hid_base&lt;h5x&gt;, h5x&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string h5pp::hdf5::getName</definition>
        <argsstring>(const h5x &amp;object)</argsstring>
        <name>getName</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="44" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int h5pp::hdf5::getRank</definition>
        <argsstring>(const hid::h5s &amp;space)</argsstring>
        <name>getRank</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="56" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a1b6eefa6d31ba4a95f244e6c8ba2f1ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int h5pp::hdf5::getRank</definition>
        <argsstring>(const hid::h5d &amp;dset)</argsstring>
        <name>getRank</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="58" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="58" bodyend="61"/>
        <references refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" compoundref="h5pp_hdf5_8h" startline="56" endline="56">getRank</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1aa5f6c1a0e7c3bce369307965e7e26057" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int h5pp::hdf5::getRank</definition>
        <argsstring>(const hid::h5a &amp;attr)</argsstring>
        <name>getRank</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="63" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="63" bodyend="66"/>
        <references refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" compoundref="h5pp_hdf5_8h" startline="56" endline="56">getRank</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>hsize_t</type>
        <definition>hsize_t h5pp::hdf5::getSize</definition>
        <argsstring>(const hid::h5s &amp;space)</argsstring>
        <name>getSize</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="68" column="21" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a084f493971ed7b483a1704393c501772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>hsize_t</type>
        <definition>hsize_t h5pp::hdf5::getSize</definition>
        <argsstring>(const hid::h5d &amp;dataset)</argsstring>
        <name>getSize</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="70" column="21" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="70" bodyend="73"/>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">getSize</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ad97290e3bf87798a49ae014962e3b2d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>hsize_t</type>
        <definition>hsize_t h5pp::hdf5::getSize</definition>
        <argsstring>(const hid::h5a &amp;attribute)</argsstring>
        <name>getSize</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="75" column="21" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="75" bodyend="78"/>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">getSize</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>hsize_t</type>
        <definition>hsize_t h5pp::hdf5::getSizeSelected</definition>
        <argsstring>(const hid::h5s &amp;space)</argsstring>
        <name>getSizeSelected</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="80" column="21" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; hsize_t &gt;</type>
        <definition>std::vector&lt;hsize_t&gt; h5pp::hdf5::getDimensions</definition>
        <argsstring>(const hid::h5s &amp;space)</argsstring>
        <name>getDimensions</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="82" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="82" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1aa8f2dfc35e262fa205a817f7eb16060c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; hsize_t &gt;</type>
        <definition>std::vector&lt;hsize_t&gt; h5pp::hdf5::getDimensions</definition>
        <argsstring>(const hid::h5d &amp;dataset)</argsstring>
        <name>getDimensions</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="93" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="93" bodyend="96"/>
        <references refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" compoundref="h5pp_hdf5_8h" startline="82" endline="91">getDimensions</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a7778b737ecc05f34f8954f483fbe98ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; hsize_t &gt;</type>
        <definition>std::vector&lt;hsize_t&gt; h5pp::hdf5::getDimensions</definition>
        <argsstring>(const hid::h5a &amp;attribute)</argsstring>
        <name>getDimensions</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="98" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="98" bodyend="101"/>
        <references refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" compoundref="h5pp_hdf5_8h" startline="82" endline="91">getDimensions</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a5dbf8ec55257c10d08366120311c0bc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>H5D_layout_t</type>
        <definition>H5D_layout_t h5pp::hdf5::getLayout</definition>
        <argsstring>(const hid::h5p &amp;dataset_creation_property_list)</argsstring>
        <name>getLayout</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>dataset_creation_property_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="103" column="26" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ae2ef3e2ce8b12c662df536e329d71a21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>H5D_layout_t</type>
        <definition>H5D_layout_t h5pp::hdf5::getLayout</definition>
        <argsstring>(const hid::h5d &amp;dataset)</argsstring>
        <name>getLayout</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="107" column="26" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1af1da3a25187be4f7c4f7b89080f04c5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; std::vector&lt; hsize_t &gt; &gt;</type>
        <definition>std::optional&lt;std::vector&lt;hsize_t&gt; &gt; h5pp::hdf5::getChunkDimensions</definition>
        <argsstring>(const hid::h5p &amp;dsetCreatePropertyList)</argsstring>
        <name>getChunkDimensions</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>dsetCreatePropertyList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="112" column="27" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="112" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a70784481be2afbd68c71dc671bebf606" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; std::vector&lt; hsize_t &gt; &gt;</type>
        <definition>std::optional&lt;std::vector&lt;hsize_t&gt; &gt; h5pp::hdf5::getChunkDimensions</definition>
        <argsstring>(const hid::h5d &amp;dataset)</argsstring>
        <name>getChunkDimensions</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="127" column="27" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="127" bodyend="130"/>
        <references refid="namespaceh5pp_1_1hdf5_1af1da3a25187be4f7c4f7b89080f04c5f" compoundref="h5pp_hdf5_8h" startline="112" endline="125">getChunkDimensions</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a702101457f9b2a061f1c082dcd526c76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int h5pp::hdf5::getCompressionLevel</definition>
        <argsstring>(const hid::h5p &amp;dsetCreatePropertyList)</argsstring>
        <name>getCompressionLevel</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>dsetCreatePropertyList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="132" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="132" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ab553655036e9987da70ffefb1e07f262" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; std::vector&lt; hsize_t &gt; &gt;</type>
        <definition>std::optional&lt;std::vector&lt;hsize_t&gt; &gt; h5pp::hdf5::getMaxDimensions</definition>
        <argsstring>(const hid::h5s &amp;space, H5D_layout_t layout)</argsstring>
        <name>getMaxDimensions</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>H5D_layout_t</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="146" column="27" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="146" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a18ed1b43dca9458d5ac4b2198231d842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; std::vector&lt; hsize_t &gt; &gt;</type>
        <definition>std::optional&lt;std::vector&lt;hsize_t&gt; &gt; h5pp::hdf5::getMaxDimensions</definition>
        <argsstring>(const hid::h5d &amp;dataset)</argsstring>
        <name>getMaxDimensions</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="159" column="27" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="159" bodyend="163"/>
        <references refid="namespaceh5pp_1_1hdf5_1ab553655036e9987da70ffefb1e07f262" compoundref="h5pp_hdf5_8h" startline="146" endline="157">getMaxDimensions</references>
        <references refid="namespaceh5pp_1_1hdf5_1a5dbf8ec55257c10d08366120311c0bc0" compoundref="h5pp_hdf5_8h" startline="103" endline="105">getLayout</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1aa27a8141d6f4925f4d666a26644527fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>herr_t</type>
        <definition>herr_t h5pp::hdf5::H5Dvlen_get_buf_size_safe</definition>
        <argsstring>(const hid::h5d &amp;dset, const hid::h5t &amp;type, const hid::h5s &amp;space, hsize_t *vlen)</argsstring>
        <name>H5Dvlen_get_buf_size_safe</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dset</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>hsize_t *</type>
          <declname>vlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="165" column="19" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="165" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a42fb5d308b0ed7582aed6d4581241f4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>herr_t</type>
        <definition>herr_t h5pp::hdf5::H5Avlen_get_buf_size_safe</definition>
        <argsstring>(const hid::h5a &amp;attr, const hid::h5t &amp;type, const hid::h5s &amp;space, hsize_t *vlen)</argsstring>
        <name>H5Avlen_get_buf_size_safe</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>hsize_t *</type>
          <declname>vlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="192" column="19" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="192" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t h5pp::hdf5::getBytesPerElem</definition>
        <argsstring>(const hid::h5t &amp;h5Type)</argsstring>
        <name>getBytesPerElem</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>h5Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="215" column="20" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t h5pp::hdf5::getBytesTotal</definition>
        <argsstring>(const hid::h5s &amp;space, const hid::h5t &amp;type)</argsstring>
        <name>getBytesTotal</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="217" column="20" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="217" bodyend="219"/>
        <references refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" compoundref="h5pp_hdf5_8h" startline="215" endline="215">getBytesPerElem</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">getSize</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a24ec8a944e3eba035246370d2e99ca03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t h5pp::hdf5::getBytesTotal</definition>
        <argsstring>(const hid::h5d &amp;dset, std::optional&lt; hid::h5s &gt; space, std::optional&lt; hid::h5t &gt; type)</argsstring>
        <name>getBytesTotal</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dset</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &gt;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="221" column="20" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="221" bodyend="233"/>
        <references refid="namespaceh5pp_1_1hdf5_1aa27a8141d6f4925f4d666a26644527fe" compoundref="h5pp_hdf5_8h" startline="165" endline="190">H5Dvlen_get_buf_size_safe</references>
        <references refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" compoundref="h5pp_hdf5_8h" startline="217" endline="219">getBytesTotal</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a0977eba6f1ab37131a69210ef47a1b65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t h5pp::hdf5::getBytesTotal</definition>
        <argsstring>(const hid::h5a &amp;attr, std::optional&lt; hid::h5s &gt; space, std::optional&lt; hid::h5t &gt; type)</argsstring>
        <name>getBytesTotal</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &gt;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="235" column="20" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="235" bodyend="247"/>
        <references refid="namespaceh5pp_1_1hdf5_1a42fb5d308b0ed7582aed6d4581241f4a" compoundref="h5pp_hdf5_8h" startline="192" endline="213">H5Avlen_get_buf_size_safe</references>
        <references refid="namespaceh5pp_1_1hdf5_1a7935fa2a246a398ce38809e88729a262" compoundref="h5pp_hdf5_8h" startline="217" endline="219">getBytesTotal</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a8f6b7cdecaddc373aad77a7c82ad2db0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t h5pp::hdf5::getBytesSelected</definition>
        <argsstring>(const hid::h5s &amp;space, const hid::h5t &amp;type)</argsstring>
        <name>getBytesSelected</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="249" column="20" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="249" bodyend="251"/>
        <references refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" compoundref="h5pp_hdf5_8h" startline="215" endline="215">getBytesPerElem</references>
        <references refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" compoundref="h5pp_hdf5_8h" startline="80" endline="80">getSizeSelected</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ac48d320203ec4d800865791009888f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::assertWriteBufferIsLargeEnough</definition>
        <argsstring>(const DataType &amp;data, const hid::h5s &amp;space, const hid::h5t &amp;type)</argsstring>
        <name>assertWriteBufferIsLargeEnough</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="254" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="254" bodyend="298"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" compoundref="h5pp_hdf5_8h" startline="80" endline="80">getSizeSelected</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a05e2d3f617c99b45cc39b585605c2ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::assertReadBufferIsLargeEnough</definition>
        <argsstring>(const DataType &amp;data, const hid::h5s &amp;space, const hid::h5t &amp;type)</argsstring>
        <name>assertReadBufferIsLargeEnough</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="301" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="301" bodyend="345"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" compoundref="h5pp_hdf5_8h" startline="80" endline="80">getSizeSelected</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ab2b9ac30a92563bb0ee2f7aecda940b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename userDataType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hdf5::checkBytesPerElemMatch</definition>
        <argsstring>(const hid::h5t &amp;h5Type)</argsstring>
        <name>checkBytesPerElemMatch</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>h5Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="348" column="11" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="348" bodyend="366"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" compoundref="h5pp_hdf5_8h" startline="215" endline="215">getBytesPerElem</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a26fbccb921177486030270be41ab25e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_base_of_v&lt;hid::hid_base&lt;DataType&gt;, DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::assertBytesPerElemMatch</definition>
        <argsstring>(const hid::h5t &amp;h5Type)</argsstring>
        <name>assertBytesPerElemMatch</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>h5Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="369" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="369" bodyend="388"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" compoundref="h5pp_hdf5_8h" startline="215" endline="215">getBytesPerElem</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ab60e99e8ea132187eec6b21115b98705" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::setStringSize</definition>
        <argsstring>(const DataType &amp;data, hid::h5t &amp;type, hsize_t &amp;size, size_t &amp;bytes, std::vector&lt; hsize_t &gt; &amp;dims)</argsstring>
        <name>setStringSize</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>hsize_t &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>std::vector&lt; hsize_t &gt; &amp;</type>
          <declname>dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="391" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="391" bodyend="468"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" compoundref="h5pp_utils_8h" startline="187" endline="189">h5pp::util::getSizeFromDimensions</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1aec048d9dd91e5d72d49332df2f04a40e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hdf5::checkIfLinkExists</definition>
        <argsstring>(const h5x &amp;loc, std::string_view linkPath, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>checkIfLinkExists</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>linkPath</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="471" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="471" bodyend="488"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a2ea38a728b1092c08a199eb69f5be7ab" compoundref="h5pp_hdf5_8h" startline="20" endline="41">pathCumulativeSplit</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a303e50c1843addf7224e3dec93b4f9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
          <param>
            <type>typename h5x_loc</type>
          </param>
        </templateparamlist>
        <type>h5x</type>
        <definition>h5x h5pp::hdf5::openLink</definition>
        <argsstring>(const h5x_loc &amp;loc, std::string_view linkPath, std::optional&lt; bool &gt; linkExists=std::nullopt, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>openLink</name>
        <param>
          <type>const h5x_loc &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>linkPath</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>linkExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="491" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="491" bodyend="521"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1abdd9c3a3c661a27296ad15c28faff7dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hdf5::checkIfAttrExists</definition>
        <argsstring>(const h5x &amp;link, std::string_view attrName, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>checkIfAttrExists</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>link</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>attrName</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="524" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="524" bodyend="533"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a292d1ce44c85172b353837bd59ca947b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hdf5::checkIfAttrExists</definition>
        <argsstring>(const h5x &amp;loc, std::string_view linkPath, std::string_view attrName, std::optional&lt; bool &gt; linkExists=std::nullopt, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>checkIfAttrExists</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>linkPath</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>attrName</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>linkExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="536" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="536" bodyend="553"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hdf5::H5Tequal_recurse</definition>
        <argsstring>(const hid::h5t &amp;type1, const hid::h5t &amp;type2)</argsstring>
        <name>H5Tequal_recurse</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type1</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="555" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="555" bodyend="587"/>
        <references refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" compoundref="h5pp_hdf5_8h" startline="555" endline="587">H5Tequal_recurse</references>
        <references refid="classh5pp_1_1hid_1_1hid__base_1a96db516322e7cf7fd8c5637b466cb534" compoundref="h5pp_hid_8h" startline="127" endline="127">h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator==</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1afdcc7a0b2603c18c0e1c17dec815a4e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hdf5::checkIfCompressionIsAvailable</definition>
        <argsstring>()</argsstring>
        <name>checkIfCompressionIsAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="589" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="589" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1af74356caf55623e9ecfe87e2c6325dc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int h5pp::hdf5::getValidCompressionLevel</definition>
        <argsstring>(std::optional&lt; unsigned int &gt; compressionLevel=std::nullopt)</argsstring>
        <name>getValidCompressionLevel</name>
        <param>
          <type>std::optional&lt; unsigned int &gt;</type>
          <declname>compressionLevel</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="607" column="26" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="607" bodyend="623"/>
        <references refid="namespaceh5pp_1_1hdf5_1afdcc7a0b2603c18c0e1c17dec815a4e5" compoundref="h5pp_hdf5_8h" startline="589" endline="605">checkIfCompressionIsAvailable</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a7d11515d763eed143fb716be37a19bc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string h5pp::hdf5::getAttributeName</definition>
        <argsstring>(const hid::h5a &amp;attribute)</argsstring>
        <name>getAttributeName</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="625" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="625" bodyend="636"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ae8bf1735abb417acda0aac56c8320312" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; h5pp::hdf5::getAttributeNames</definition>
        <argsstring>(const h5x &amp;link)</argsstring>
        <name>getAttributeNames</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="639" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="639" bodyend="651"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a7d11515d763eed143fb716be37a19bc8" compoundref="h5pp_hdf5_8h" startline="625" endline="636">getAttributeName</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1afa46721ccd8f7307cdd62069c30e2824" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; h5pp::hdf5::getAttributeNames</definition>
        <argsstring>(const h5x &amp;loc, std::string_view linkPath, std::optional&lt; bool &gt; linkExists=std::nullopt, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>getAttributeNames</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>linkPath</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>linkExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="654" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="654" bodyend="664"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; std::type_index, std::string, size_t &gt;</type>
        <definition>std::tuple&lt;std::type_index, std::string, size_t&gt; h5pp::hdf5::getCppType</definition>
        <argsstring>()</argsstring>
        <name>getCppType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="667" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="667" bodyend="669"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; std::type_index, std::string, size_t &gt;</type>
        <definition>std::tuple&lt;std::type_index, std::string, size_t&gt; h5pp::hdf5::getCppType</definition>
        <argsstring>(const hid::h5t &amp;type)</argsstring>
        <name>getCppType</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="671" column="24" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="671" bodyend="730"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1ac0f21c73790e3b0f0810c887a9d15c8b" compoundref="h5pp_hdf5_8h" startline="667" endline="669">getCppType</references>
        <references refid="namespaceh5pp_1_1hdf5_1a1c7f44cb199f27797da50304608b82f2" compoundref="h5pp_hdf5_8h" startline="555" endline="587">H5Tequal_recurse</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1aa6d20d609d54cc8799d142ca54acf9d5" compoundref="h5pp_type_compound_8h" startline="7">h5pp::type::compound::H5T_COMPLEX_SHORT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a72d333146d79727000434d8df8090771" compoundref="h5pp_type_compound_8h" startline="8">h5pp::type::compound::H5T_COMPLEX_INT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a226386f8edeba333cc587a196b28afc4" compoundref="h5pp_type_compound_8h" startline="9">h5pp::type::compound::H5T_COMPLEX_LONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a910b7f32f6e2ca31fc90d8348a585b48" compoundref="h5pp_type_compound_8h" startline="10">h5pp::type::compound::H5T_COMPLEX_LLONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1acc918db007bccfde363dd0b77fa3b3ea" compoundref="h5pp_type_compound_8h" startline="11">h5pp::type::compound::H5T_COMPLEX_USHORT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a3b9789ae80ef3ba9d4bd3fde5daa7580" compoundref="h5pp_type_compound_8h" startline="12">h5pp::type::compound::H5T_COMPLEX_UINT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a50673b0f6565904d494f414efa594a90" compoundref="h5pp_type_compound_8h" startline="13">h5pp::type::compound::H5T_COMPLEX_ULONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1aaeef3b17e9cf410cc117e10361dec982" compoundref="h5pp_type_compound_8h" startline="14">h5pp::type::compound::H5T_COMPLEX_ULLONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a268dc8b7924bd1178fa52083a4f56ca6" compoundref="h5pp_type_compound_8h" startline="15">h5pp::type::compound::H5T_COMPLEX_DOUBLE</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a2a152b65b67a662acb0ec9abc19987e7" compoundref="h5pp_type_compound_8h" startline="16">h5pp::type::compound::H5T_COMPLEX_LDOUBLE</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1acdf182c37fd898aa2050a69341e581f9" compoundref="h5pp_type_compound_8h" startline="17">h5pp::type::compound::H5T_COMPLEX_FLOAT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a4b2f7636f376661adaff16511bb5c8aa" compoundref="h5pp_type_compound_8h" startline="18">h5pp::type::compound::H5T_SCALAR2_SHORT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a1ecf4c9b8351f394b4729b1444746054" compoundref="h5pp_type_compound_8h" startline="19">h5pp::type::compound::H5T_SCALAR2_INT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1ad6a6f13c0be2677b8b96967803488f5a" compoundref="h5pp_type_compound_8h" startline="20">h5pp::type::compound::H5T_SCALAR2_LONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1ad04233950f53c5c654d6fb6a4d90629f" compoundref="h5pp_type_compound_8h" startline="21">h5pp::type::compound::H5T_SCALAR2_LLONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a0138ed96c7133dd3bd56d937af3985b5" compoundref="h5pp_type_compound_8h" startline="22">h5pp::type::compound::H5T_SCALAR2_USHORT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a9ccebced1010fb62d3a35fc69cd2adc0" compoundref="h5pp_type_compound_8h" startline="23">h5pp::type::compound::H5T_SCALAR2_UINT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a9c766aa225eb8c4d7543aa5f7408c086" compoundref="h5pp_type_compound_8h" startline="24">h5pp::type::compound::H5T_SCALAR2_ULONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a3b6158b5eb9ff628af36cb4559c9c2f5" compoundref="h5pp_type_compound_8h" startline="25">h5pp::type::compound::H5T_SCALAR2_ULLONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a1c47191f5d60443d9741bcbef499fddb" compoundref="h5pp_type_compound_8h" startline="26">h5pp::type::compound::H5T_SCALAR2_DOUBLE</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1af6e1d6fb81c76e3016d534b520534925" compoundref="h5pp_type_compound_8h" startline="27">h5pp::type::compound::H5T_SCALAR2_LDOUBLE</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1aa9295211544b40b36fbb1f0d4cb236df" compoundref="h5pp_type_compound_8h" startline="28">h5pp::type::compound::H5T_SCALAR2_FLOAT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a4eede90bae7e6f505d0b67a88d52d560" compoundref="h5pp_type_compound_8h" startline="29">h5pp::type::compound::H5T_SCALAR3_SHORT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a34d3d8da125027f7ab408abd16ee4e54" compoundref="h5pp_type_compound_8h" startline="30">h5pp::type::compound::H5T_SCALAR3_INT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a0561544bc67849285c89c06a660c03ad" compoundref="h5pp_type_compound_8h" startline="31">h5pp::type::compound::H5T_SCALAR3_LONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a33208b742da16646b519eeae5711692c" compoundref="h5pp_type_compound_8h" startline="32">h5pp::type::compound::H5T_SCALAR3_LLONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a2eecc3b85070927f9bb8bd05843df0a1" compoundref="h5pp_type_compound_8h" startline="33">h5pp::type::compound::H5T_SCALAR3_USHORT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1acbb546754f0cf3e93325cd33e7d4c4b8" compoundref="h5pp_type_compound_8h" startline="34">h5pp::type::compound::H5T_SCALAR3_UINT</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a33550956053a2cac47b039049dd9d679" compoundref="h5pp_type_compound_8h" startline="35">h5pp::type::compound::H5T_SCALAR3_ULONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a33093680e829f1a39c80b95e81a0d1f0" compoundref="h5pp_type_compound_8h" startline="36">h5pp::type::compound::H5T_SCALAR3_ULLONG</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1acb2433bdbc762d670458099a35882564" compoundref="h5pp_type_compound_8h" startline="37">h5pp::type::compound::H5T_SCALAR3_DOUBLE</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1ae654aca670b1ad62bc4f787e55f8cd9c" compoundref="h5pp_type_compound_8h" startline="38">h5pp::type::compound::H5T_SCALAR3_LDOUBLE</references>
        <references refid="namespaceh5pp_1_1type_1_1compound_1a1e0f70c73399d9342a8e7ff5cbae15bf" compoundref="h5pp_type_compound_8h" startline="39">h5pp::type::compound::H5T_SCALAR3_FLOAT</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1a5c632531114757980c02d118bcd68ecd" compoundref="h5pp_hdf5_8h" startline="44" endline="54">getName</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref></type>
        <definition>TypeInfo h5pp::hdf5::getTypeInfo</definition>
        <argsstring>(std::optional&lt; std::string &gt; objectPath, std::optional&lt; std::string &gt; objectName, const hid::h5s &amp;h5Space, const hid::h5t &amp;h5Type)</argsstring>
        <name>getTypeInfo</name>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>objectPath</declname>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>objectName</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>h5Space</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>h5Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="732" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="732" bodyend="746"/>
        <references refid="structh5pp_1_1_type_info_1a6a74c7f8b43f09d2e3418ecd872ef91f" compoundref="h5pp_info_8h" startline="588">h5pp::TypeInfo::h5Name</references>
        <references refid="structh5pp_1_1_type_info_1a78b3920e9677b9b6a9bc5f19b680ba61" compoundref="h5pp_info_8h" startline="587">h5pp::TypeInfo::h5Path</references>
        <references refid="structh5pp_1_1_type_info_1a1843c5d1805c1b3153a8f51da5fa43b1" compoundref="h5pp_info_8h" startline="592">h5pp::TypeInfo::h5Type</references>
        <references refid="structh5pp_1_1_type_info_1a7f766cb42a646b9fc281bd1b4bde8b1a" compoundref="h5pp_info_8h" startline="590">h5pp::TypeInfo::h5Rank</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" compoundref="h5pp_hdf5_8h" startline="56" endline="56">getRank</references>
        <references refid="structh5pp_1_1_type_info_1ad395cc5b5750e0b28d8de76017dc4bf8" compoundref="h5pp_info_8h" startline="589">h5pp::TypeInfo::h5Size</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">getSize</references>
        <references refid="structh5pp_1_1_type_info_1adeac8c894700a503c1ff6ff406939b50" compoundref="h5pp_info_8h" startline="591">h5pp::TypeInfo::h5Dims</references>
        <references refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" compoundref="h5pp_hdf5_8h" startline="82" endline="91">getDimensions</references>
        <references refid="structh5pp_1_1_type_info_1a1608ddcdb74210fa7f2d46bd6d590708" compoundref="h5pp_info_8h" startline="586">h5pp::TypeInfo::cppTypeIndex</references>
        <references refid="structh5pp_1_1_type_info_1a9f09eb96cb161d4c4127e5edc89fcad2" compoundref="h5pp_info_8h" startline="584">h5pp::TypeInfo::cppTypeName</references>
        <references refid="structh5pp_1_1_type_info_1a580f2441c27c4447c7831c97f5643c71" compoundref="h5pp_info_8h" startline="585">h5pp::TypeInfo::cppTypeBytes</references>
        <references refid="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" compoundref="h5pp_hdf5_8h" startline="671" endline="730">getCppType</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ade5da86d9ab4e9aa27996670e30e4a1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref></type>
        <definition>TypeInfo h5pp::hdf5::getTypeInfo</definition>
        <argsstring>(const hid::h5d &amp;dataset)</argsstring>
        <name>getTypeInfo</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="748" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="748" bodyend="752"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a5c632531114757980c02d118bcd68ecd" compoundref="h5pp_hdf5_8h" startline="44" endline="54">getName</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" compoundref="h5pp_hdf5_8h" startline="732" endline="746">getTypeInfo</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a00eaf7d4456d625754bd643948a311ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="namespaceh5pp_1_1type_1_1sfinae_1a8951b861975f8ee36b3b180925ccb1c1" kindref="member">h5pp::type::sfinae::enable_if_is_h5_loc_or_hid_t</ref>&lt;h5x&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref></type>
        <definition>TypeInfo h5pp::hdf5::getTypeInfo</definition>
        <argsstring>(const h5x &amp;loc, std::string_view dsetName, std::optional&lt; bool &gt; dsetExists=std::nullopt, const hid::h5p &amp;dsetAccess=H5P_DEFAULT)</argsstring>
        <name>getTypeInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>dsetName</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>dsetExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>dsetAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="756" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="756" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a8485e227c30416285c2894957fcce922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref></type>
        <definition>TypeInfo h5pp::hdf5::getTypeInfo</definition>
        <argsstring>(const hid::h5a &amp;attribute)</argsstring>
        <name>getTypeInfo</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5a" kindref="compound">hid::h5a</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="764" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="764" bodyend="769"/>
        <references refid="namespaceh5pp_1_1hdf5_1a7d11515d763eed143fb716be37a19bc8" compoundref="h5pp_hdf5_8h" startline="625" endline="636">getAttributeName</references>
        <references refid="namespaceh5pp_1_1hdf5_1a5c632531114757980c02d118bcd68ecd" compoundref="h5pp_hdf5_8h" startline="44" endline="54">getName</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1a6c24cf339cf475f309e1e8a7ab737a43" compoundref="h5pp_hdf5_8h" startline="732" endline="746">getTypeInfo</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ac55871726324dd3f3e106696dd4d3212" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref></type>
        <definition>TypeInfo h5pp::hdf5::getTypeInfo</definition>
        <argsstring>(const h5x &amp;loc, std::string_view linkPath, std::string_view attrName, std::optional&lt; bool &gt; linkExists=std::nullopt, std::optional&lt; bool &gt; attrExists=std::nullopt, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>getTypeInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>linkPath</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>attrName</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>linkExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>attrExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="772" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="772" bodyend="791"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="namespaceh5pp_1_1hdf5_1a8485e227c30416285c2894957fcce922" compoundref="h5pp_hdf5_8h" startline="764" endline="769">getTypeInfo</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a2471ea780124c7c7d654cece5ebdf62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref> &gt;</type>
        <definition>std::vector&lt;TypeInfo&gt; h5pp::hdf5::getTypeInfo_allAttributes</definition>
        <argsstring>(const h5x &amp;link)</argsstring>
        <name>getTypeInfo_allAttributes</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="794" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="794" bodyend="809"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a8485e227c30416285c2894957fcce922" compoundref="h5pp_hdf5_8h" startline="764" endline="769">getTypeInfo</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a9afc35ade0cedb82ab34f589fcefb0a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="structh5pp_1_1_type_info" kindref="compound">TypeInfo</ref> &gt;</type>
        <definition>std::vector&lt;TypeInfo&gt; h5pp::hdf5::getTypeInfo_allAttributes</definition>
        <argsstring>(const h5x &amp;loc, std::string_view linkPath, std::optional&lt; bool &gt; linkExists=std::nullopt, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>getTypeInfo_allAttributes</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>linkPath</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>linkExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="812" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="812" bodyend="821"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ac59e8ce60bbbe11fa70c7dba2366763e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::createGroup</definition>
        <argsstring>(const h5x &amp;loc, std::string_view groupName, std::optional&lt; bool &gt; linkExists=std::nullopt, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>createGroup</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>groupName</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>linkExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="824" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="824" bodyend="843"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_property_lists_1acfdbad484245deb004afb69c799cdc2a" compoundref="h5pp_property_lists_8h" startline="15">h5pp::PropertyLists::linkCreate</references>
        <references refid="structh5pp_1_1_property_lists_1a81f1009aa9ccbfc6d98f25edf2301b2d" compoundref="h5pp_property_lists_8h" startline="17">h5pp::PropertyLists::groupCreate</references>
        <references refid="structh5pp_1_1_property_lists_1a4b2a6175f20cf812468462b276623aff" compoundref="h5pp_property_lists_8h" startline="18">h5pp::PropertyLists::groupAccess</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a5b5c12e8d463a8c6b0c279796f7704d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::writeSymbolicLink</definition>
        <argsstring>(const h5x &amp;loc, std::string_view srcPath, std::string_view tgtPath, std::optional&lt; bool &gt; linkExists=std::nullopt, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>writeSymbolicLink</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>srcPath</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>tgtPath</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>linkExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="846" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="846" bodyend="866"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_property_lists_1acfdbad484245deb004afb69c799cdc2a" compoundref="h5pp_property_lists_8h" startline="15">h5pp::PropertyLists::linkCreate</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a48dce0da41feb5ff6e90611e7cb240aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::setProperty_layout</definition>
        <argsstring>(DsetInfo &amp;dsetInfo)</argsstring>
        <name>setProperty_layout</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="868" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="868" bodyend="886"/>
        <references refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" compoundref="h5pp_info_8h" startline="218">h5pp::DsetInfo::h5PlistDsetCreate</references>
        <references refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" compoundref="h5pp_info_8h" startline="216">h5pp::DsetInfo::h5Layout</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ac29eb3dbb28dd9598638379a6be51404" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::setProperty_chunkDims</definition>
        <argsstring>(DsetInfo &amp;dsetInfo)</argsstring>
        <name>setProperty_chunkDims</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="888" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="888" bodyend="930"/>
        <references refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" compoundref="h5pp_info_8h" startline="216">h5pp::DsetInfo::h5Layout</references>
        <references refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" compoundref="h5pp_info_8h" startline="227">h5pp::DsetInfo::dsetChunk</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_opt_dims_type_1ae823a511f8e2b297e1de4f015ed64499" compoundref="h5pp_dimension_type_8h" startline="101" endline="101">h5pp::OptDimsType::value</references>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" compoundref="h5pp_info_8h" startline="226">h5pp::DsetInfo::dsetDimsMax</references>
        <references refid="structh5pp_1_1_dset_info_1acecbd091e86ebbdeeceddebadbcaff9b" compoundref="h5pp_info_8h" startline="229">h5pp::DsetInfo::resizePolicy</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba0894c203073521ad32840dd9657949ab">h5pp::DO_NOT_RESIZE</references>
        <references refid="namespaceh5pp_1_1hdf5_1a48dce0da41feb5ff6e90611e7cb240aa" compoundref="h5pp_hdf5_8h" startline="868" endline="886">setProperty_layout</references>
        <references refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" compoundref="h5pp_info_8h" startline="218">h5pp::DsetInfo::h5PlistDsetCreate</references>
        <references refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" compoundref="h5pp_info_8h" startline="224">h5pp::DsetInfo::dsetRank</references>
        <references refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" compoundref="h5pp_info_8h" startline="225">h5pp::DsetInfo::dsetDims</references>
        <references refid="structh5pp_1_1_opt_dims_type_1a8452ef9df661945c572f7ee17db88ad3" compoundref="h5pp_dimension_type_8h" startline="104" endline="104">h5pp::OptDimsType::operator-&gt;</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ab6bb8f2a9446f6251bbdad39f92e3e3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::setProperty_compression</definition>
        <argsstring>(DsetInfo &amp;dsetInfo)</argsstring>
        <name>setProperty_compression</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="932" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="932" bodyend="954"/>
        <references refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" compoundref="h5pp_info_8h" startline="230">h5pp::DsetInfo::compression</references>
        <references refid="namespaceh5pp_1_1hdf5_1afdcc7a0b2603c18c0e1c17dec815a4e5" compoundref="h5pp_hdf5_8h" startline="589" endline="605">checkIfCompressionIsAvailable</references>
        <references refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" compoundref="h5pp_info_8h" startline="218">h5pp::DsetInfo::h5PlistDsetCreate</references>
        <references refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" compoundref="h5pp_info_8h" startline="216">h5pp::DsetInfo::h5Layout</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::selectHyperslab</definition>
        <argsstring>(hid::h5s &amp;space, const Hyperslab &amp;hyperSlab, std::optional&lt; H5S_seloper_t &gt; select_op_override=std::nullopt)</argsstring>
        <name>selectHyperslab</name>
        <param>
          <type><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1_hyperslab" kindref="compound">Hyperslab</ref> &amp;</type>
          <declname>hyperSlab</declname>
        </param>
        <param>
          <type>std::optional&lt; H5S_seloper_t &gt;</type>
          <declname>select_op_override</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="956" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="956" bodyend="1040"/>
        <references refid="classh5pp_1_1_hyperslab_1aacdbbf03cbb0288396c778bedc6200aa" compoundref="h5pp_hyperslab_8h" startline="68" endline="68">h5pp::Hyperslab::empty</references>
        <references refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" compoundref="h5pp_hyperslab_8h" startline="15">h5pp::Hyperslab::offset</references>
        <references refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" compoundref="h5pp_hyperslab_8h" startline="16">h5pp::Hyperslab::extent</references>
        <references refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" compoundref="h5pp_dimension_type_8h" startline="100" endline="100">h5pp::OptDimsType::value</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="classh5pp_1_1_hyperslab_1a8e27f0d9cfdba8016b98c697f11adb49" compoundref="h5pp_hyperslab_8h" startline="17">h5pp::Hyperslab::stride</references>
        <references refid="classh5pp_1_1_hyperslab_1aaf115b6a47c258e5f3820cd7b463fba6" compoundref="h5pp_hyperslab_8h" startline="18">h5pp::Hyperslab::blocks</references>
        <references refid="classh5pp_1_1_hyperslab_1a3f7c133ad7f7585c6159dcc1301c083b" compoundref="h5pp_hyperslab_8h" startline="20">h5pp::Hyperslab::select_oper</references>
        <references refid="classh5pp_1_1_hyperslab_1ac0cd734a86df5485080b3bd82ff5a553" compoundref="h5pp_hyperslab_8h" startline="32" endline="67">h5pp::Hyperslab::Hyperslab</references>
        <references refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" compoundref="h5pp_hdf5_8h" startline="82" endline="91">getDimensions</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a7008946087a23655d17dafd214a2896b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::selectHyperslabs</definition>
        <argsstring>(hid::h5s &amp;space, const std::vector&lt; Hyperslab &gt; &amp;hyperSlabs, std::optional&lt; std::vector&lt; H5S_seloper_t &gt;&gt; hyperSlabSelectOps=std::nullopt)</argsstring>
        <name>selectHyperslabs</name>
        <param>
          <type><ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classh5pp_1_1_hyperslab" kindref="compound">Hyperslab</ref> &gt; &amp;</type>
          <declname>hyperSlabs</declname>
        </param>
        <param>
          <type>std::optional&lt; std::vector&lt; H5S_seloper_t &gt;&gt;</type>
          <declname>hyperSlabSelectOps</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1042" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1042" bodyend="1053"/>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">selectHyperslab</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a0da823f5c0ae463b742f56667858e6f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::setSpaceExtent</definition>
        <argsstring>(const hid::h5s &amp;h5Space, const std::vector&lt; hsize_t &gt; &amp;dims, std::optional&lt; std::vector&lt; hsize_t &gt;&gt; dimsMax=std::nullopt)</argsstring>
        <name>setSpaceExtent</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>h5Space</declname>
        </param>
        <param>
          <type>const std::vector&lt; hsize_t &gt; &amp;</type>
          <declname>dims</declname>
        </param>
        <param>
          <type>std::optional&lt; std::vector&lt; hsize_t &gt;&gt;</type>
          <declname>dimsMax</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1055" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1055" bodyend="1091"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a60ffebba2fc359940a3fe1ec6463ce91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::setSpaceExtent</definition>
        <argsstring>(DsetInfo &amp;dsetInfo)</argsstring>
        <name>setSpaceExtent</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1093" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1093" bodyend="1109"/>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="classh5pp_1_1hid_1_1hid__base_1a1833b03ce5f3e20d952680a8de5ab136" compoundref="h5pp_hid_8h" startline="94" endline="94">h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::valid</references>
        <references refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" compoundref="h5pp_info_8h" startline="225">h5pp::DsetInfo::dsetDims</references>
        <references refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" compoundref="h5pp_info_8h" startline="216">h5pp::DsetInfo::h5Layout</references>
        <references refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" compoundref="h5pp_info_8h" startline="226">h5pp::DsetInfo::dsetDimsMax</references>
        <references refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" compoundref="h5pp_info_8h" startline="224">h5pp::DsetInfo::dsetRank</references>
        <references refid="structh5pp_1_1_opt_dims_type_1a8452ef9df661945c572f7ee17db88ad3" compoundref="h5pp_dimension_type_8h" startline="104" endline="104">h5pp::OptDimsType::operator-&gt;</references>
        <references refid="namespaceh5pp_1_1hdf5_1a0da823f5c0ae463b742f56667858e6f2" compoundref="h5pp_hdf5_8h" startline="1055" endline="1091">setSpaceExtent</references>
        <references refid="structh5pp_1_1_opt_dims_type_1ae823a511f8e2b297e1de4f015ed64499" compoundref="h5pp_dimension_type_8h" startline="101" endline="101">h5pp::OptDimsType::value</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a51f270cfc369bfd385e8614dcce9adf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::extendSpace</definition>
        <argsstring>(const hid::h5s &amp;space, const int dim, const hsize_t extent)</argsstring>
        <name>extendSpace</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const hsize_t</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1111" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1111" bodyend="1126"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1a0da823f5c0ae463b742f56667858e6f2" compoundref="h5pp_hdf5_8h" startline="1055" endline="1091">setSpaceExtent</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a8fd8b74e1634174e07807ad18caaea20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::extendDataset</definition>
        <argsstring>(const hid::h5d &amp;dataset, const int dim, const hsize_t extent)</argsstring>
        <name>extendDataset</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const hsize_t</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1128" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1128" bodyend="1132"/>
        <references refid="namespaceh5pp_1_1hdf5_1a51f270cfc369bfd385e8614dcce9adf4" compoundref="h5pp_hdf5_8h" startline="1111" endline="1126">extendSpace</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ae530532181be69f9bfc3d03872c251b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::extendDataset</definition>
        <argsstring>(const hid::h5d &amp;dataset, const std::vector&lt; hsize_t &gt; &amp;dims)</argsstring>
        <name>extendDataset</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5d" kindref="compound">hid::h5d</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const std::vector&lt; hsize_t &gt; &amp;</type>
          <declname>dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1134" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1134" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ae9d5c2ccf5e55cc6f4441617ec5fd020" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::extendDataset</definition>
        <argsstring>(const h5x &amp;loc, std::string_view datasetRelativeName, const int dim, const hsize_t extent, std::optional&lt; bool &gt; linkExists=std::nullopt, const hid::h5p &amp;dsetAccess=H5P_DEFAULT)</argsstring>
        <name>extendDataset</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>datasetRelativeName</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const hsize_t</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>linkExists</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>dsetAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1139" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1139" bodyend="1147"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a1264962501b8d52ba5ecbe1841ec4a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::extendDataset</definition>
        <argsstring>(const h5x &amp;loc, const DataType &amp;data, std::string_view dsetPath)</argsstring>
        <name>extendDataset</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>dsetPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1150" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1150" bodyend="1166"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a89f05a8214178c00f723a6bc2f18ece3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::extendDataset</definition>
        <argsstring>(DsetInfo &amp;info, const std::vector&lt; hsize_t &gt; &amp;appDimensions, size_t axis)</argsstring>
        <name>extendDataset</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const std::vector&lt; hsize_t &gt; &amp;</type>
          <declname>appDimensions</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1168" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1168" bodyend="1236"/>
        <references refid="structh5pp_1_1_dset_info_1adb84c08bf0001752d4e825901b9bc500" compoundref="h5pp_info_8h" startline="264" endline="288">h5pp::DsetInfo::assertResizeReady</references>
        <references refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" compoundref="h5pp_info_8h" startline="215">h5pp::DsetInfo::h5Type</references>
        <references refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" compoundref="h5pp_info_8h" startline="224">h5pp::DsetInfo::dsetRank</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" compoundref="h5pp_info_8h" startline="220">h5pp::DsetInfo::dsetPath</references>
        <references refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" compoundref="h5pp_info_8h" startline="225">h5pp::DsetInfo::dsetDims</references>
        <references refid="structh5pp_1_1_opt_dims_type_1ae823a511f8e2b297e1de4f015ed64499" compoundref="h5pp_dimension_type_8h" startline="101" endline="101">h5pp::OptDimsType::value</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" compoundref="h5pp_info_8h" startline="214">h5pp::DsetInfo::h5Dset</references>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="classh5pp_1_1hid_1_1hid__base_1a49d7564677e93a9b92fbf6eb06987e52" compoundref="h5pp_hid_8h" startline="59" endline="66">h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::value</references>
        <references refid="structh5pp_1_1_dset_info_1a9f9fbefffa7655fce0fd129584ce13c9" compoundref="h5pp_info_8h" startline="223">h5pp::DsetInfo::dsetByte</references>
        <references refid="namespaceh5pp_1_1hdf5_1a24ec8a944e3eba035246370d2e99ca03" compoundref="h5pp_hdf5_8h" startline="221" endline="233">getBytesTotal</references>
        <references refid="structh5pp_1_1_dset_info_1a04ea6079208921bca11c32b54d89bb83" compoundref="h5pp_info_8h" startline="222">h5pp::DsetInfo::dsetSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">getSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" compoundref="h5pp_hdf5_8h" startline="56" endline="56">getRank</references>
        <references refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" compoundref="h5pp_hyperslab_8h" startline="16">h5pp::Hyperslab::extent</references>
        <references refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" compoundref="h5pp_hyperslab_8h" startline="15">h5pp::Hyperslab::offset</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">selectHyperslab</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a958720ab3bf72837f86e6ab6c5e41c32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::extendDataset</definition>
        <argsstring>(DsetInfo &amp;dsetInfo, const DataInfo &amp;dataInfo, size_t axis)</argsstring>
        <name>extendDataset</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>dataInfo</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1238" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1238" bodyend="1242"/>
        <references refid="structh5pp_1_1_data_info_1a80ea2205f9a63ed091937e9b6d7af9df" compoundref="h5pp_info_8h" startline="150" endline="169">h5pp::DataInfo::assertWriteReady</references>
        <references refid="namespaceh5pp_1_1hdf5_1a89f05a8214178c00f723a6bc2f18ece3" compoundref="h5pp_hdf5_8h" startline="1168" endline="1236">extendDataset</references>
        <references refid="structh5pp_1_1_data_info_1a5367c7635d47ed6665efd7b82d5e7457" compoundref="h5pp_info_8h" startline="135">h5pp::DataInfo::dataDims</references>
        <references refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" compoundref="h5pp_dimension_type_8h" startline="100" endline="100">h5pp::OptDimsType::value</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a625c04f3cd7bc4b550f6d1ff88ee5cfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::resizeDataset</definition>
        <argsstring>(DsetInfo &amp;info, const std::vector&lt; hsize_t &gt; &amp;newDimensions, std::optional&lt; h5pp::ResizePolicy &gt; policy=std::nullopt)</argsstring>
        <name>resizeDataset</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const std::vector&lt; hsize_t &gt; &amp;</type>
          <declname>newDimensions</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eb" kindref="member">h5pp::ResizePolicy</ref> &gt;</type>
          <declname>policy</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1245" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1245" bodyend="1323"/>
        <references refid="structh5pp_1_1_dset_info_1acecbd091e86ebbdeeceddebadbcaff9b" compoundref="h5pp_info_8h" startline="229">h5pp::DsetInfo::resizePolicy</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba0894c203073521ad32840dd9657949ab">h5pp::DO_NOT_RESIZE</references>
        <references refid="structh5pp_1_1_dset_info_1a58f15a74dd4f320566755d053702504e" compoundref="h5pp_info_8h" startline="228">h5pp::DsetInfo::dsetSlab</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba181a1e17c5afb4561e6b966d995c46f9">h5pp::INCREASE_ONLY</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba6cd43a637f8b733c23575092197f3ebb">h5pp::RESIZE_TO_FIT</references>
        <references refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" compoundref="h5pp_hyperslab_8h" startline="16">h5pp::Hyperslab::extent</references>
        <references refid="structh5pp_1_1_opt_dims_type_1a8452ef9df661945c572f7ee17db88ad3" compoundref="h5pp_dimension_type_8h" startline="104" endline="104">h5pp::OptDimsType::operator-&gt;</references>
        <references refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" compoundref="h5pp_hyperslab_8h" startline="15">h5pp::Hyperslab::offset</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" compoundref="h5pp_info_8h" startline="220">h5pp::DsetInfo::dsetPath</references>
        <references refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" compoundref="h5pp_info_8h" startline="216">h5pp::DsetInfo::h5Layout</references>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" compoundref="h5pp_info_8h" startline="215">h5pp::DsetInfo::h5Type</references>
        <references refid="structh5pp_1_1_dset_info_1adb84c08bf0001752d4e825901b9bc500" compoundref="h5pp_info_8h" startline="264" endline="288">h5pp::DsetInfo::assertResizeReady</references>
        <references refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" compoundref="h5pp_info_8h" startline="225">h5pp::DsetInfo::dsetDims</references>
        <references refid="structh5pp_1_1_opt_dims_type_1ae823a511f8e2b297e1de4f015ed64499" compoundref="h5pp_dimension_type_8h" startline="101" endline="101">h5pp::OptDimsType::value</references>
        <references refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" compoundref="h5pp_info_8h" startline="226">h5pp::DsetInfo::dsetDimsMax</references>
        <references refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" compoundref="h5pp_info_8h" startline="214">h5pp::DsetInfo::h5Dset</references>
        <references refid="classh5pp_1_1hid_1_1hid__base_1a49d7564677e93a9b92fbf6eb06987e52" compoundref="h5pp_hid_8h" startline="59" endline="66">h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::value</references>
        <references refid="structh5pp_1_1_dset_info_1a9f9fbefffa7655fce0fd129584ce13c9" compoundref="h5pp_info_8h" startline="223">h5pp::DsetInfo::dsetByte</references>
        <references refid="namespaceh5pp_1_1hdf5_1a24ec8a944e3eba035246370d2e99ca03" compoundref="h5pp_hdf5_8h" startline="221" endline="233">getBytesTotal</references>
        <references refid="structh5pp_1_1_dset_info_1a04ea6079208921bca11c32b54d89bb83" compoundref="h5pp_info_8h" startline="222">h5pp::DsetInfo::dsetSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">getSize</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a60fa8231974e30c6cff5f4affe6f3b4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::resizeDataset</definition>
        <argsstring>(DsetInfo &amp;dsetInfo, const DataInfo &amp;dataInfo)</argsstring>
        <name>resizeDataset</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>dataInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1325" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1325" bodyend="1334"/>
        <references refid="structh5pp_1_1_data_info_1a80ea2205f9a63ed091937e9b6d7af9df" compoundref="h5pp_info_8h" startline="150" endline="169">h5pp::DataInfo::assertWriteReady</references>
        <references refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" compoundref="h5pp_info_8h" startline="137">h5pp::DataInfo::dataSlab</references>
        <references refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" compoundref="h5pp_hyperslab_8h" startline="16">h5pp::Hyperslab::extent</references>
        <references refid="namespaceh5pp_1_1hdf5_1a625c04f3cd7bc4b550f6d1ff88ee5cfa" compoundref="h5pp_hdf5_8h" startline="1245" endline="1323">resizeDataset</references>
        <references refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" compoundref="h5pp_dimension_type_8h" startline="100" endline="100">h5pp::OptDimsType::value</references>
        <references refid="structh5pp_1_1_data_info_1a5367c7635d47ed6665efd7b82d5e7457" compoundref="h5pp_info_8h" startline="135">h5pp::DataInfo::dataDims</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a546a9c2d2ee7f837658133b3457b14b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_const_v&lt;DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::resizeData</definition>
        <argsstring>(DataType &amp;data, const hid::h5s &amp;space, const hid::h5t &amp;type, size_t bytes)</argsstring>
        <name>resizeData</name>
        <param>
          <type>DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1337" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1337" bodyend="1382"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" compoundref="h5pp_hdf5_8h" startline="80" endline="80">getSizeSelected</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ac2ecdbf58fd8045011b49a55f27fb52e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_const_v&lt;DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::resizeData</definition>
        <argsstring>(DataType &amp;data, DataInfo &amp;dataInfo, const DsetInfo &amp;info)</argsstring>
        <name>resizeData</name>
        <param>
          <type>DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>dataInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1385" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1385" bodyend="1406"/>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" compoundref="h5pp_info_8h" startline="215">h5pp::DsetInfo::h5Type</references>
        <references refid="structh5pp_1_1_dset_info_1a9f9fbefffa7655fce0fd129584ce13c9" compoundref="h5pp_info_8h" startline="223">h5pp::DsetInfo::dsetByte</references>
        <references refid="structh5pp_1_1_data_info_1a5367c7635d47ed6665efd7b82d5e7457" compoundref="h5pp_info_8h" startline="135">h5pp::DataInfo::dataDims</references>
        <references refid="structh5pp_1_1_data_info_1a049a5e215c85aceadabe6d127ac82eb4" compoundref="h5pp_info_8h" startline="133">h5pp::DataInfo::dataSize</references>
        <references refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" compoundref="h5pp_utils_8h" startline="187" endline="189">h5pp::util::getSizeFromDimensions</references>
        <references refid="structh5pp_1_1_opt_dims_type_1ae823a511f8e2b297e1de4f015ed64499" compoundref="h5pp_dimension_type_8h" startline="101" endline="101">h5pp::OptDimsType::value</references>
        <references refid="structh5pp_1_1_data_info_1afa7dbb0fe70e65374bbdd5888c32ea2e" compoundref="h5pp_info_8h" startline="136">h5pp::DataInfo::dataRank</references>
        <references refid="namespaceh5pp_1_1util_1adef11453affa0b4886885661e217a8e4" compoundref="h5pp_utils_8h" startline="217" endline="217">h5pp::util::getRankFromDimensions</references>
        <references refid="structh5pp_1_1_data_info_1ac4b0da9ef8c1bc77e4dd180b0d0e9f01" compoundref="h5pp_info_8h" startline="134">h5pp::DataInfo::dataByte</references>
        <references refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" compoundref="h5pp_info_8h" startline="138">h5pp::DataInfo::h5Space</references>
        <references refid="namespaceh5pp_1_1util_1a5b62df990ff2d31cd5dc0843592941cd" compoundref="h5pp_utils_8h" startline="354" endline="365">h5pp::util::getMemSpace</references>
        <references refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" compoundref="h5pp_info_8h" startline="137">h5pp::DataInfo::dataSlab</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">selectHyperslab</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a827a2d63bce788b33469e55b303a1d66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_const_v&lt;DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::resizeData</definition>
        <argsstring>(DataType &amp;data, DataInfo &amp;dataInfo, const AttrInfo &amp;attrInfo)</argsstring>
        <name>resizeData</name>
        <param>
          <type>DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>dataInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> &amp;</type>
          <declname>attrInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1409" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1409" bodyend="1431"/>
        <references refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" compoundref="h5pp_info_8h" startline="386">h5pp::AttrInfo::h5Space</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" compoundref="h5pp_info_8h" startline="385">h5pp::AttrInfo::h5Type</references>
        <references refid="structh5pp_1_1_attr_info_1a25e9278fd323f04394e5cd6d708cd83d" compoundref="h5pp_info_8h" startline="394">h5pp::AttrInfo::attrByte</references>
        <references refid="structh5pp_1_1_data_info_1a5367c7635d47ed6665efd7b82d5e7457" compoundref="h5pp_info_8h" startline="135">h5pp::DataInfo::dataDims</references>
        <references refid="structh5pp_1_1_data_info_1a049a5e215c85aceadabe6d127ac82eb4" compoundref="h5pp_info_8h" startline="133">h5pp::DataInfo::dataSize</references>
        <references refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" compoundref="h5pp_utils_8h" startline="187" endline="189">h5pp::util::getSizeFromDimensions</references>
        <references refid="structh5pp_1_1_opt_dims_type_1ae823a511f8e2b297e1de4f015ed64499" compoundref="h5pp_dimension_type_8h" startline="101" endline="101">h5pp::OptDimsType::value</references>
        <references refid="structh5pp_1_1_data_info_1afa7dbb0fe70e65374bbdd5888c32ea2e" compoundref="h5pp_info_8h" startline="136">h5pp::DataInfo::dataRank</references>
        <references refid="namespaceh5pp_1_1util_1adef11453affa0b4886885661e217a8e4" compoundref="h5pp_utils_8h" startline="217" endline="217">h5pp::util::getRankFromDimensions</references>
        <references refid="structh5pp_1_1_data_info_1ac4b0da9ef8c1bc77e4dd180b0d0e9f01" compoundref="h5pp_info_8h" startline="134">h5pp::DataInfo::dataByte</references>
        <references refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" compoundref="h5pp_info_8h" startline="138">h5pp::DataInfo::h5Space</references>
        <references refid="namespaceh5pp_1_1util_1a5b62df990ff2d31cd5dc0843592941cd" compoundref="h5pp_utils_8h" startline="354" endline="365">h5pp::util::getMemSpace</references>
        <references refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" compoundref="h5pp_info_8h" startline="137">h5pp::DataInfo::dataSlab</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">selectHyperslab</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1af8e63ba50d43b8a802efcbcf5222a0af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string h5pp::hdf5::getSpaceString</definition>
        <argsstring>(const hid::h5s &amp;space, bool enable=true)</argsstring>
        <name>getSpaceString</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1433" column="24" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1433" bodyend="1447"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="classh5pp_1_1_hyperslab_1ac0cd734a86df5485080b3bd82ff5a553" compoundref="h5pp_hyperslab_8h" startline="32" endline="67">h5pp::Hyperslab::Hyperslab</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::assertSpacesEqual</definition>
        <argsstring>(const hid::h5s &amp;dataSpace, const hid::h5s &amp;dsetSpace, const hid::h5t &amp;h5Type)</argsstring>
        <name>assertSpacesEqual</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>dataSpace</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5s" kindref="compound">hid::h5s</ref> &amp;</type>
          <declname>dsetSpace</declname>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5t" kindref="compound">hid::h5t</ref> &amp;</type>
          <declname>h5Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1449" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1449" bodyend="1488"/>
        <references refid="namespaceh5pp_1_1hdf5_1a3b050f9f3a678e2ad10b5a36eb977128" compoundref="h5pp_hdf5_8h" startline="80" endline="80">getSizeSelected</references>
        <references refid="namespaceh5pp_1_1hdf5_1af8e63ba50d43b8a802efcbcf5222a0af" compoundref="h5pp_hdf5_8h" startline="1433" endline="1447">getSpaceString</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" compoundref="h5pp_hdf5_8h" startline="82" endline="91">getDimensions</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">getSize</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a0465c3ea3c0ae0fd40ccef91602c4406" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>H5O_type_t</type>
            <declname>ObjType</declname>
            <defname>ObjType</defname>
          </param>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; h5pp::hdf5::findLinks</definition>
        <argsstring>(const h5x &amp;loc, std::string_view searchKey=&quot;&quot;, std::string_view searchRoot=&quot;/&quot;, long maxHits=-1, long maxDepth=-1, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>findLinks</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>searchKey</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>searchRoot</declname>
          <defval>&quot;/&quot;</defval>
        </param>
        <param>
          <type>long</type>
          <declname>maxHits</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>maxDepth</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1634" column="25" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1634" bodyend="1656"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" compoundref="h5pp_hdf5_8h" startline="1491">h5pp::hdf5::internal::maxHits</references>
        <references refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" compoundref="h5pp_hdf5_8h" startline="1492">h5pp::hdf5::internal::maxDepth</references>
        <references refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" compoundref="h5pp_hdf5_8h" startline="1493">h5pp::hdf5::internal::searchKey</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a18dd434f747ba88beaedcae7547a1caa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>H5O_type_t</type>
            <declname>ObjType</declname>
            <defname>ObjType</defname>
          </param>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; h5pp::hdf5::getContentsOfLink</definition>
        <argsstring>(const h5x &amp;loc, std::string_view linkPath, long maxDepth=1, const hid::h5p &amp;linkAccess=H5P_DEFAULT)</argsstring>
        <name>getContentsOfLink</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>linkPath</declname>
        </param>
        <param>
          <type>long</type>
          <declname>maxDepth</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1h5p" kindref="compound">hid::h5p</ref> &amp;</type>
          <declname>linkAccess</declname>
          <defval>H5P_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1660" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1660" bodyend="1672"/>
        <references refid="namespaceh5pp_1_1hdf5_1_1internal_1a64f15abea7413ac5eedad0aa2b1c53a8" compoundref="h5pp_hdf5_8h" startline="1491">h5pp::hdf5::internal::maxHits</references>
        <references refid="namespaceh5pp_1_1hdf5_1_1internal_1a611716506446499c6d33fbd997affb66" compoundref="h5pp_hdf5_8h" startline="1492">h5pp::hdf5::internal::maxDepth</references>
        <references refid="namespaceh5pp_1_1hdf5_1_1internal_1a53a13585f1287ea9f5b31a0cde7677f8" compoundref="h5pp_hdf5_8h" startline="1493">h5pp::hdf5::internal::searchKey</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1aa9b74756e0cd04078c1ca7c9f886c2c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::createDataset</definition>
        <argsstring>(h5pp::DsetInfo &amp;dsetInfo, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>createDataset</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">h5pp::DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1674" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1674" bodyend="1695"/>
        <references refid="structh5pp_1_1_dset_info_1afa1fdbce887aa50986847c8dddb0a8c2" compoundref="h5pp_info_8h" startline="242" endline="263">h5pp::DsetInfo::assertCreateReady</references>
        <references refid="structh5pp_1_1_dset_info_1a671c7bb8ad1a168e91e0d3eaf463553b" compoundref="h5pp_info_8h" startline="221">h5pp::DsetInfo::dsetExists</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" compoundref="h5pp_info_8h" startline="220">h5pp::DsetInfo::dsetPath</references>
        <references refid="structh5pp_1_1_dset_info_1ac0bb411f16f35870c21db44129ec5012" compoundref="h5pp_info_8h" startline="235" endline="240">h5pp::DsetInfo::getLocId</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" compoundref="h5pp_info_8h" startline="215">h5pp::DsetInfo::h5Type</references>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="structh5pp_1_1_property_lists_1acfdbad484245deb004afb69c799cdc2a" compoundref="h5pp_property_lists_8h" startline="15">h5pp::PropertyLists::linkCreate</references>
        <references refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" compoundref="h5pp_info_8h" startline="218">h5pp::DsetInfo::h5PlistDsetCreate</references>
        <references refid="structh5pp_1_1_dset_info_1af634783657b1cf3c2642aa2157c07ee3" compoundref="h5pp_info_8h" startline="219">h5pp::DsetInfo::h5PlistDsetAccess</references>
        <references refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" compoundref="h5pp_info_8h" startline="214">h5pp::DsetInfo::h5Dset</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a80ccd1a780acdd3b98eea72fe91a5ac6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::createAttribute</definition>
        <argsstring>(AttrInfo &amp;attrInfo)</argsstring>
        <name>createAttribute</name>
        <param>
          <type><ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> &amp;</type>
          <declname>attrInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1697" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1697" bodyend="1719"/>
        <references refid="structh5pp_1_1_attr_info_1aebd2991ada67e371e85a3a017ef65c7f" compoundref="h5pp_info_8h" startline="411" endline="436">h5pp::AttrInfo::assertCreateReady</references>
        <references refid="structh5pp_1_1_attr_info_1a3bb46c9770d1b841eb153930ac287f9e" compoundref="h5pp_info_8h" startline="391">h5pp::AttrInfo::attrExists</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_attr_info_1a9c92b7b99b87bf78d7e54171b76945da" compoundref="h5pp_info_8h" startline="389">h5pp::AttrInfo::attrName</references>
        <references refid="structh5pp_1_1_attr_info_1aaeef426a56e2f79375cbda2f8a7c68f2" compoundref="h5pp_info_8h" startline="390">h5pp::AttrInfo::linkPath</references>
        <references refid="structh5pp_1_1_attr_info_1a3dc884fb4dea53c9f1d04727d362b8e7" compoundref="h5pp_info_8h" startline="383">h5pp::AttrInfo::h5Link</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" compoundref="h5pp_info_8h" startline="385">h5pp::AttrInfo::h5Type</references>
        <references refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" compoundref="h5pp_info_8h" startline="386">h5pp::AttrInfo::h5Space</references>
        <references refid="structh5pp_1_1_attr_info_1a6010f0d5ea9269dd16ed7abfaf111931" compoundref="h5pp_info_8h" startline="387">h5pp::AttrInfo::h5PlistAttrCreate</references>
        <references refid="structh5pp_1_1_attr_info_1a04a3819a2995078fd4b342ca8874d7cd" compoundref="h5pp_info_8h" startline="388">h5pp::AttrInfo::h5PlistAttrAccess</references>
        <references refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" compoundref="h5pp_info_8h" startline="384">h5pp::AttrInfo::h5Attr</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1adb89faacd84fe67fd133aa2afc560356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; const char * &gt;</type>
        <definition>std::vector&lt;const char *&gt; h5pp::hdf5::getCharPtrVector</definition>
        <argsstring>(const DataType &amp;data)</argsstring>
        <name>getCharPtrVector</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1722" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1722" bodyend="1742"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ac9dc123f9057c228c501d6a8ac7be194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::writeDataset</definition>
        <argsstring>(const DataType &amp;data, const DataInfo &amp;dataInfo, const DsetInfo &amp;dsetInfo, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>writeDataset</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>dataInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1745" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1745" bodyend="1830"/>
        <references refid="structh5pp_1_1_dset_info_1ad68517bc487536ce6dfd7d70307fbdc4" compoundref="h5pp_info_8h" startline="290" endline="306">h5pp::DsetInfo::assertWriteReady</references>
        <references refid="structh5pp_1_1_data_info_1a80ea2205f9a63ed091937e9b6d7af9df" compoundref="h5pp_info_8h" startline="150" endline="169">h5pp::DataInfo::assertWriteReady</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" compoundref="h5pp_info_8h" startline="138">h5pp::DataInfo::h5Space</references>
        <references refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" compoundref="h5pp_info_8h" startline="215">h5pp::DsetInfo::h5Type</references>
        <references refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" compoundref="h5pp_hdf5_8h" startline="1449" endline="1488">assertSpacesEqual</references>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="classh5pp_1_1hid_1_1hid__base_1a49d7564677e93a9b92fbf6eb06987e52" compoundref="h5pp_hid_8h" startline="59" endline="66">h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::value</references>
        <references refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" compoundref="h5pp_info_8h" startline="214">h5pp::DsetInfo::h5Dset</references>
        <references refid="structh5pp_1_1_property_lists_1a65bddc9bb006cced6ef80826170384b2" compoundref="h5pp_property_lists_8h" startline="19">h5pp::PropertyLists::dsetXfer</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a44f6d5a58b41ef924e4615c4d92139c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_const_v&lt;DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::readDataset</definition>
        <argsstring>(DataType &amp;data, const DataInfo &amp;dataInfo, const DsetInfo &amp;dsetInfo, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>readDataset</name>
        <param>
          <type>DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>dataInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> &amp;</type>
          <declname>dsetInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1833" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1833" bodyend="1943"/>
        <references refid="structh5pp_1_1_dset_info_1aefa40603adeb9406a4608a0c12bca6db" compoundref="h5pp_info_8h" startline="307" endline="325">h5pp::DsetInfo::assertReadReady</references>
        <references refid="structh5pp_1_1_data_info_1a1230095c3c270b1ccf61b7e325aeac4f" compoundref="h5pp_info_8h" startline="171" endline="189">h5pp::DataInfo::assertReadReady</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" compoundref="h5pp_info_8h" startline="138">h5pp::DataInfo::h5Space</references>
        <references refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" compoundref="h5pp_info_8h" startline="215">h5pp::DsetInfo::h5Type</references>
        <references refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" compoundref="h5pp_hdf5_8h" startline="1449" endline="1488">assertSpacesEqual</references>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" compoundref="h5pp_info_8h" startline="214">h5pp::DsetInfo::h5Dset</references>
        <references refid="structh5pp_1_1_property_lists_1a65bddc9bb006cced6ef80826170384b2" compoundref="h5pp_property_lists_8h" startline="19">h5pp::PropertyLists::dsetXfer</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ab1db408ba8b3cc86a32c6fa2b2103a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::writeAttribute</definition>
        <argsstring>(const DataType &amp;data, const DataInfo &amp;dataInfo, const AttrInfo &amp;attrInfo)</argsstring>
        <name>writeAttribute</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>dataInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> &amp;</type>
          <declname>attrInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1946" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1946" bodyend="1981"/>
        <references refid="structh5pp_1_1_data_info_1a80ea2205f9a63ed091937e9b6d7af9df" compoundref="h5pp_info_8h" startline="150" endline="169">h5pp::DataInfo::assertWriteReady</references>
        <references refid="structh5pp_1_1_attr_info_1a9607a2c4dcba5c43618c3f50ad77a0f0" compoundref="h5pp_info_8h" startline="438" endline="452">h5pp::AttrInfo::assertWriteReady</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" compoundref="h5pp_info_8h" startline="138">h5pp::DataInfo::h5Space</references>
        <references refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" compoundref="h5pp_info_8h" startline="385">h5pp::AttrInfo::h5Type</references>
        <references refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" compoundref="h5pp_hdf5_8h" startline="1449" endline="1488">assertSpacesEqual</references>
        <references refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" compoundref="h5pp_info_8h" startline="386">h5pp::AttrInfo::h5Space</references>
        <references refid="classh5pp_1_1hid_1_1hid__base_1a49d7564677e93a9b92fbf6eb06987e52" compoundref="h5pp_hid_8h" startline="59" endline="66">h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::value</references>
        <references refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" compoundref="h5pp_info_8h" startline="384">h5pp::AttrInfo::h5Attr</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a491d188d7dde459b8598ab5303eedd36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_const_v&lt;DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::readAttribute</definition>
        <argsstring>(DataType &amp;data, const DataInfo &amp;dataInfo, const AttrInfo &amp;attrInfo)</argsstring>
        <name>readAttribute</name>
        <param>
          <type>DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>dataInfo</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> &amp;</type>
          <declname>attrInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="1984" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="1984" bodyend="2074"/>
        <references refid="structh5pp_1_1_data_info_1a1230095c3c270b1ccf61b7e325aeac4f" compoundref="h5pp_info_8h" startline="171" endline="189">h5pp::DataInfo::assertReadReady</references>
        <references refid="structh5pp_1_1_attr_info_1a9c8da2d2f3c1e303964d06127f6406fa" compoundref="h5pp_info_8h" startline="454" endline="467">h5pp::AttrInfo::assertReadReady</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" compoundref="h5pp_info_8h" startline="138">h5pp::DataInfo::h5Space</references>
        <references refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" compoundref="h5pp_info_8h" startline="385">h5pp::AttrInfo::h5Type</references>
        <references refid="namespaceh5pp_1_1hdf5_1a3a744547c1f72fd7014e7b7e7702e8f4" compoundref="h5pp_hdf5_8h" startline="1449" endline="1488">assertSpacesEqual</references>
        <references refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" compoundref="h5pp_info_8h" startline="386">h5pp::AttrInfo::h5Space</references>
        <references refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" compoundref="h5pp_info_8h" startline="384">h5pp::AttrInfo::h5Attr</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a5260fe3172613b255dc84665afc111ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hdf5::fileIsValid</definition>
        <argsstring>(const fs::path &amp;filePath)</argsstring>
        <name>fileIsValid</name>
        <param>
          <type>const fs::path &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2076" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2076" bodyend="2078"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a9f4e16d8ddd71e394fc681a42871b692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>fs::path</type>
        <definition>fs::path h5pp::hdf5::getAvailableFileName</definition>
        <argsstring>(const fs::path &amp;filePath)</argsstring>
        <name>getAvailableFileName</name>
        <param>
          <type>const fs::path &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2080" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2080" bodyend="2087"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a355a5919db08c2695a14eb4087689ac8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>fs::path</type>
        <definition>fs::path h5pp::hdf5::getBackupFileName</definition>
        <argsstring>(const fs::path &amp;filePath)</argsstring>
        <name>getBackupFileName</name>
        <param>
          <type>const fs::path &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2089" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2089" bodyend="2094"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a04db331d2b5b2964960c8e74233bb153" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">h5pp::FilePermission</ref></type>
        <definition>h5pp::FilePermission h5pp::hdf5::convertFileAccessFlags</definition>
        <argsstring>(unsigned int H5F_ACC_FLAGS)</argsstring>
        <name>convertFileAccessFlags</name>
        <param>
          <type>unsigned int</type>
          <declname>H5F_ACC_FLAGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2096" column="34" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2096" bodyend="2105"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca507f09f72160920edb481656c350e76c">h5pp::RENAME</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca34db6698cff32ac89724758fdaa5512e">h5pp::READONLY</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf">h5pp::READWRITE</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a">h5pp::COLLISION_FAIL</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca560a2dd6f6744646473b3b19e1fe96d7">h5pp::REPLACE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a2d35320272b8767b3a62b29f7beef587" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int h5pp::hdf5::convertFileAccessFlags</definition>
        <argsstring>(h5pp::FilePermission permission)</argsstring>
        <name>convertFileAccessFlags</name>
        <param>
          <type><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">h5pp::FilePermission</ref></type>
          <declname>permission</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2107" column="26" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2107" bodyend="2115"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a">h5pp::COLLISION_FAIL</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca560a2dd6f6744646473b3b19e1fe96d7">h5pp::REPLACE</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca507f09f72160920edb481656c350e76c">h5pp::RENAME</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca34db6698cff32ac89724758fdaa5512e">h5pp::READONLY</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf">h5pp::READWRITE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ae4b58edbb030342186ceced8a5b4154f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>fs::path</type>
        <definition>fs::path h5pp::hdf5::createFile</definition>
        <argsstring>(const h5pp::fs::path &amp;filePath_, const h5pp::FilePermission &amp;permission, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>createFile</name>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>filePath_</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">h5pp::FilePermission</ref> &amp;</type>
          <declname>permission</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2118" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2118" bodyend="2172"/>
        <references refid="namespaceh5pp_1_1hdf5_1a5260fe3172613b255dc84665afc111ca" compoundref="h5pp_hdf5_8h" startline="2076" endline="2078">fileIsValid</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca34db6698cff32ac89724758fdaa5512e">h5pp::READONLY</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a">h5pp::COLLISION_FAIL</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca507f09f72160920edb481656c350e76c">h5pp::RENAME</references>
        <references refid="namespaceh5pp_1_1hdf5_1a9f4e16d8ddd71e394fc681a42871b692" compoundref="h5pp_hdf5_8h" startline="2080" endline="2087">getAvailableFileName</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf">h5pp::READWRITE</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecabfdf97ae01c73d83a58ec41f78a4291f">h5pp::BACKUP</references>
        <references refid="namespaceh5pp_1_1hdf5_1a355a5919db08c2695a14eb4087689ac8" compoundref="h5pp_hdf5_8h" startline="2089" endline="2094">getBackupFileName</references>
        <references refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca560a2dd6f6744646473b3b19e1fe96d7">h5pp::REPLACE</references>
        <references refid="structh5pp_1_1_property_lists_1a3afcab0ce15c1f054f11eaedeb7248e6" compoundref="h5pp_property_lists_8h" startline="13">h5pp::PropertyLists::fileCreate</references>
        <references refid="structh5pp_1_1_property_lists_1aa161c02310e4a1e3804ddc0f32ab3dec" compoundref="h5pp_property_lists_8h" startline="14">h5pp::PropertyLists::fileAccess</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a0feb7388090b6a7245e6e984157d5398" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::createTable</definition>
        <argsstring>(TableInfo &amp;info, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>createTable</name>
        <param>
          <type><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2174" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2174" bodyend="2218"/>
        <references refid="structh5pp_1_1_table_info_1a37176dac28e2be58148a8b5e66069262" compoundref="h5pp_info_8h" startline="519" endline="535">h5pp::TableInfo::assertCreateReady</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="structh5pp_1_1_table_info_1a0134faaab1a3c70a5c07cef6f1862815" compoundref="h5pp_info_8h" startline="495">h5pp::TableInfo::numFields</references>
        <references refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" compoundref="h5pp_info_8h" startline="497">h5pp::TableInfo::recordBytes</references>
        <references refid="structh5pp_1_1_table_info_1ad9db6683bff24f33b3239d939fc5fbbd" compoundref="h5pp_info_8h" startline="502">h5pp::TableInfo::tableExists</references>
        <references refid="namespaceh5pp_1_1hdf5_1aec048d9dd91e5d72d49332df2f04a40e" compoundref="h5pp_hdf5_8h" startline="471" endline="488">checkIfLinkExists</references>
        <references refid="structh5pp_1_1_table_info_1a8ee0d7a0e07f049681603afb72cb91b1" compoundref="h5pp_info_8h" startline="509" endline="514">h5pp::TableInfo::getLocId</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="namespaceh5pp_1_1hdf5_1ac59e8ce60bbbe11fa70c7dba2366763e" compoundref="h5pp_hdf5_8h" startline="824" endline="843">createGroup</references>
        <references refid="structh5pp_1_1_table_info_1aa99afd50684d01bc05f42b0168ad85f2" compoundref="h5pp_info_8h" startline="494">h5pp::TableInfo::tableGroupName</references>
        <references refid="structh5pp_1_1_table_info_1afbbda9cf5c07f618f545c2084259b3e4" compoundref="h5pp_info_8h" startline="501">h5pp::TableInfo::fieldTypes</references>
        <references refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" compoundref="h5pp_info_8h" startline="498">h5pp::TableInfo::fieldNames</references>
        <references refid="structh5pp_1_1_table_info_1aeae14b48cded957e54b302a779334d85" compoundref="h5pp_info_8h" startline="503">h5pp::TableInfo::compressionLevel</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_table_info_1adca1998058259900599381c2463db726" compoundref="h5pp_info_8h" startline="492">h5pp::TableInfo::tableTitle</references>
        <references refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" compoundref="h5pp_info_8h" startline="496">h5pp::TableInfo::numRecords</references>
        <references refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" compoundref="h5pp_info_8h" startline="500">h5pp::TableInfo::fieldOffsets</references>
        <references refid="structh5pp_1_1_table_info_1a781a212c634da1c444c724285c80024d" compoundref="h5pp_info_8h" startline="504">h5pp::TableInfo::chunkSize</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1aed21ae1c244392ed3ead705f649c8807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_const_v&lt;DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::readTableRecords</definition>
        <argsstring>(DataType &amp;data, const TableInfo &amp;info, std::optional&lt; size_t &gt; startIdx=std::nullopt, std::optional&lt; size_t &gt; numReadRecords=std::nullopt)</argsstring>
        <name>readTableRecords</name>
        <param>
          <type>DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>startIdx</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>numReadRecords</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2221" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2221" bodyend="2337"/>
        <references refid="structh5pp_1_1_table_info_1aae44c54255a9b60e7f4c9f5f87bd4d37" compoundref="h5pp_info_8h" startline="536" endline="551">h5pp::TableInfo::assertReadReady</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" compoundref="h5pp_info_8h" startline="496">h5pp::TableInfo::numRecords</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" compoundref="h5pp_info_8h" startline="497">h5pp::TableInfo::recordBytes</references>
        <references refid="structh5pp_1_1_table_info_1a1974c8014edf61caa821b4fbb11d2094" compoundref="h5pp_info_8h" startline="490">h5pp::TableInfo::h5Dset</references>
        <references refid="namespaceh5pp_1_1util_1a5b62df990ff2d31cd5dc0843592941cd" compoundref="h5pp_utils_8h" startline="354" endline="365">h5pp::util::getMemSpace</references>
        <references refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" compoundref="h5pp_hyperslab_8h" startline="15">h5pp::Hyperslab::offset</references>
        <references refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" compoundref="h5pp_hyperslab_8h" startline="16">h5pp::Hyperslab::extent</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">selectHyperslab</references>
        <references refid="structh5pp_1_1_table_info_1a62a7ddc51f727ab08be61b53d403afff" compoundref="h5pp_info_8h" startline="491">h5pp::TableInfo::h5Type</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1aee02d2ac163969363c88e0b19af81ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::appendTableRecords</definition>
        <argsstring>(const DataType &amp;data, TableInfo &amp;info, std::optional&lt; size_t &gt; numNewRecords=std::nullopt)</argsstring>
        <name>appendTableRecords</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>numNewRecords</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2340" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2340" bodyend="2408"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" compoundref="h5pp_info_8h" startline="496">h5pp::TableInfo::numRecords</references>
        <references refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" compoundref="h5pp_info_8h" startline="497">h5pp::TableInfo::recordBytes</references>
        <references refid="structh5pp_1_1_table_info_1ae40657ea67fec8c17cea6f90882f39db" compoundref="h5pp_info_8h" startline="552" endline="565">h5pp::TableInfo::assertWriteReady</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae530532181be69f9bfc3d03872c251b6" compoundref="h5pp_hdf5_8h" startline="1134" endline="1136">extendDataset</references>
        <references refid="structh5pp_1_1_table_info_1a1974c8014edf61caa821b4fbb11d2094" compoundref="h5pp_info_8h" startline="490">h5pp::TableInfo::h5Dset</references>
        <references refid="namespaceh5pp_1_1util_1a5b62df990ff2d31cd5dc0843592941cd" compoundref="h5pp_utils_8h" startline="354" endline="365">h5pp::util::getMemSpace</references>
        <references refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" compoundref="h5pp_hyperslab_8h" startline="15">h5pp::Hyperslab::offset</references>
        <references refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" compoundref="h5pp_hyperslab_8h" startline="16">h5pp::Hyperslab::extent</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">selectHyperslab</references>
        <references refid="structh5pp_1_1_table_info_1a62a7ddc51f727ab08be61b53d403afff" compoundref="h5pp_info_8h" startline="491">h5pp::TableInfo::h5Type</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a5c6e3078d291a32d9164c41d16bd5616" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::writeTableRecords</definition>
        <argsstring>(const DataType &amp;data, TableInfo &amp;info, size_t startIdx=0, std::optional&lt; size_t &gt; numRecordsToWrite=std::nullopt)</argsstring>
        <name>writeTableRecords</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>startIdx</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>numRecordsToWrite</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2411" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2411" bodyend="2493"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="structh5pp_1_1_table_info_1ae40657ea67fec8c17cea6f90882f39db" compoundref="h5pp_info_8h" startline="552" endline="565">h5pp::TableInfo::assertWriteReady</references>
        <references refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" compoundref="h5pp_info_8h" startline="496">h5pp::TableInfo::numRecords</references>
        <references refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" compoundref="h5pp_info_8h" startline="497">h5pp::TableInfo::recordBytes</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae530532181be69f9bfc3d03872c251b6" compoundref="h5pp_hdf5_8h" startline="1134" endline="1136">extendDataset</references>
        <references refid="structh5pp_1_1_table_info_1a1974c8014edf61caa821b4fbb11d2094" compoundref="h5pp_info_8h" startline="490">h5pp::TableInfo::h5Dset</references>
        <references refid="namespaceh5pp_1_1util_1a5b62df990ff2d31cd5dc0843592941cd" compoundref="h5pp_utils_8h" startline="354" endline="365">h5pp::util::getMemSpace</references>
        <references refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" compoundref="h5pp_hyperslab_8h" startline="15">h5pp::Hyperslab::offset</references>
        <references refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" compoundref="h5pp_hyperslab_8h" startline="16">h5pp::Hyperslab::extent</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">selectHyperslab</references>
        <references refid="structh5pp_1_1_table_info_1a62a7ddc51f727ab08be61b53d403afff" compoundref="h5pp_info_8h" startline="491">h5pp::TableInfo::h5Type</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ab74c185b941d2f00ee38cdb68e084fe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::copyTableRecords</definition>
        <argsstring>(const h5pp::TableInfo &amp;srcInfo, hsize_t srcStartIdx, hsize_t numRecordsToCopy, h5pp::TableInfo &amp;tgtInfo, hsize_t tgtStartIdx)</argsstring>
        <name>copyTableRecords</name>
        <param>
          <type>const <ref refid="structh5pp_1_1_table_info" kindref="compound">h5pp::TableInfo</ref> &amp;</type>
          <declname>srcInfo</declname>
        </param>
        <param>
          <type>hsize_t</type>
          <declname>srcStartIdx</declname>
        </param>
        <param>
          <type>hsize_t</type>
          <declname>numRecordsToCopy</declname>
        </param>
        <param>
          <type><ref refid="structh5pp_1_1_table_info" kindref="compound">h5pp::TableInfo</ref> &amp;</type>
          <declname>tgtInfo</declname>
        </param>
        <param>
          <type>hsize_t</type>
          <declname>tgtStartIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2495" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2495" bodyend="2545"/>
        <references refid="structh5pp_1_1_table_info_1aae44c54255a9b60e7f4c9f5f87bd4d37" compoundref="h5pp_info_8h" startline="536" endline="551">h5pp::TableInfo::assertReadReady</references>
        <references refid="structh5pp_1_1_table_info_1ae40657ea67fec8c17cea6f90882f39db" compoundref="h5pp_info_8h" startline="552" endline="565">h5pp::TableInfo::assertWriteReady</references>
        <references refid="structh5pp_1_1_table_info_1a62a7ddc51f727ab08be61b53d403afff" compoundref="h5pp_info_8h" startline="491">h5pp::TableInfo::h5Type</references>
        <references refid="classh5pp_1_1hid_1_1hid__base_1a34a69bf4d530dae1417209261d9fe023" compoundref="h5pp_hid_8h" startline="128" endline="128">h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator!=</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" compoundref="h5pp_info_8h" startline="497">h5pp::TableInfo::recordBytes</references>
        <references refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" compoundref="h5pp_info_8h" startline="499">h5pp::TableInfo::fieldSizes</references>
        <references refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" compoundref="h5pp_info_8h" startline="500">h5pp::TableInfo::fieldOffsets</references>
        <references refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" compoundref="h5pp_info_8h" startline="496">h5pp::TableInfo::numRecords</references>
        <references refid="structh5pp_1_1_table_info_1a8b339639540096f9e83adcf1dba1a48f" compoundref="h5pp_info_8h" startline="489">h5pp::TableInfo::h5File</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="namespaceh5pp_1_1hdf5_1aed21ae1c244392ed3ead705f649c8807" compoundref="h5pp_hdf5_8h" startline="2221" endline="2337">readTableRecords</references>
        <references refid="namespaceh5pp_1_1hdf5_1a5c6e3078d291a32d9164c41d16bd5616" compoundref="h5pp_hdf5_8h" startline="2411" endline="2493">writeTableRecords</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ae0d67a33910657d7568e11ec9bf2eb76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_const_v&lt;DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::readTableField</definition>
        <argsstring>(DataType &amp;data, const TableInfo &amp;info, const std::vector&lt; size_t &gt; &amp;srcFieldIndices, std::optional&lt; size_t &gt; startIdx=std::nullopt, std::optional&lt; size_t &gt; numReadRecords=std::nullopt)</argsstring>
        <name>readTableField</name>
        <param>
          <type>DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>srcFieldIndices</declname>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>startIdx</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>numReadRecords</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2548" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2548" bodyend="2700"/>
        <references refid="structh5pp_1_1_table_info_1aae44c54255a9b60e7f4c9f5f87bd4d37" compoundref="h5pp_info_8h" startline="536" endline="551">h5pp::TableInfo::assertReadReady</references>
        <references refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" compoundref="h5pp_info_8h" startline="496">h5pp::TableInfo::numRecords</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" compoundref="h5pp_info_8h" startline="500">h5pp::TableInfo::fieldOffsets</references>
        <references refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" compoundref="h5pp_info_8h" startline="499">h5pp::TableInfo::fieldSizes</references>
        <references refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" compoundref="h5pp_info_8h" startline="498">h5pp::TableInfo::fieldNames</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" compoundref="h5pp_info_8h" startline="497">h5pp::TableInfo::recordBytes</references>
        <references refid="structh5pp_1_1_table_info_1a1974c8014edf61caa821b4fbb11d2094" compoundref="h5pp_info_8h" startline="490">h5pp::TableInfo::h5Dset</references>
        <references refid="namespaceh5pp_1_1util_1a5b62df990ff2d31cd5dc0843592941cd" compoundref="h5pp_utils_8h" startline="354" endline="365">h5pp::util::getMemSpace</references>
        <references refid="classh5pp_1_1_hyperslab_1a5d6abc2530bdb98ee957a578f2e0d50f" compoundref="h5pp_hyperslab_8h" startline="15">h5pp::Hyperslab::offset</references>
        <references refid="classh5pp_1_1_hyperslab_1a84cc3c0b6b1407c3d1acfae05620e76d" compoundref="h5pp_hyperslab_8h" startline="16">h5pp::Hyperslab::extent</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">selectHyperslab</references>
        <references refid="structh5pp_1_1_table_info_1afbbda9cf5c07f618f545c2084259b3e4" compoundref="h5pp_info_8h" startline="501">h5pp::TableInfo::fieldTypes</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a59dac42fbc742ee8a66f02ec71c5a74a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;not std::is_const_v&lt;DataType&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::readTableField</definition>
        <argsstring>(DataType &amp;data, const TableInfo &amp;info, const std::vector&lt; std::string &gt; &amp;fieldNames, std::optional&lt; size_t &gt; startIdx=std::nullopt, std::optional&lt; size_t &gt; numReadRecords=std::nullopt)</argsstring>
        <name>readTableField</name>
        <param>
          <type>DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>fieldNames</declname>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>startIdx</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; size_t &gt;</type>
          <declname>numReadRecords</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2703" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2703" bodyend="2722"/>
        <references refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" compoundref="h5pp_info_8h" startline="498">h5pp::TableInfo::fieldNames</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1afa9a53c511f13a32c50516a41003ce21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x_src</type>
          </param>
          <param>
            <type>typename h5x_tgt</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="namespaceh5pp_1_1type_1_1sfinae_1a8951b861975f8ee36b3b180925ccb1c1" kindref="member">h5pp::type::sfinae::enable_if_is_h5_loc_or_hid_t</ref>&lt;h5x_src&gt;</defval>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="namespaceh5pp_1_1type_1_1sfinae_1a8951b861975f8ee36b3b180925ccb1c1" kindref="member">h5pp::type::sfinae::enable_if_is_h5_loc_or_hid_t</ref>&lt;h5x_tgt&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::copyLink</definition>
        <argsstring>(const h5x_src &amp;srcLocId, std::string_view srcLinkPath, const h5x_tgt &amp;tgtLocId, std::string_view tgtLinkPath, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>copyLink</name>
        <param>
          <type>const h5x_src &amp;</type>
          <declname>srcLocId</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>srcLinkPath</declname>
        </param>
        <param>
          <type>const h5x_tgt &amp;</type>
          <declname>tgtLocId</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>tgtLinkPath</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2729" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2729" bodyend="2750"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_property_lists_1acfdbad484245deb004afb69c799cdc2a" compoundref="h5pp_property_lists_8h" startline="15">h5pp::PropertyLists::linkCreate</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ab5b871715e7243d5ad3373b978788b10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x_src</type>
          </param>
          <param>
            <type>typename h5x_tgt</type>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="namespaceh5pp_1_1type_1_1sfinae_1a8951b861975f8ee36b3b180925ccb1c1" kindref="member">h5pp::type::sfinae::enable_if_is_h5_loc_or_hid_t</ref>&lt;h5x_src&gt;</defval>
          </param>
          <param>
            <type>typename</type>
            <defval><ref refid="namespaceh5pp_1_1type_1_1sfinae_1a8951b861975f8ee36b3b180925ccb1c1" kindref="member">h5pp::type::sfinae::enable_if_is_h5_loc_or_hid_t</ref>&lt;h5x_tgt&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::hdf5::moveLink</definition>
        <argsstring>(const h5x_src &amp;srcLocId, std::string_view srcLinkPath, const h5x_tgt &amp;tgtLocId, std::string_view tgtLinkPath, LocationMode locationMode=LocationMode::DETECT, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>moveLink</name>
        <param>
          <type>const h5x_src &amp;</type>
          <declname>srcLocId</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>srcLinkPath</declname>
        </param>
        <param>
          <type>const h5x_tgt &amp;</type>
          <declname>tgtLocId</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>tgtLinkPath</declname>
        </param>
        <param>
          <type><ref refid="namespaceh5pp_1ac0e4090698554d005eaec3fbaa2e69cb" kindref="member">LocationMode</ref></type>
          <declname>locationMode</declname>
          <defval><ref refid="namespaceh5pp_1ac0e4090698554d005eaec3fbaa2e69cba0af51e8371a9775bddcaee4eb4738c5f" kindref="member">LocationMode::DETECT</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2757" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2757" bodyend="2805"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_property_lists_1acfdbad484245deb004afb69c799cdc2a" compoundref="h5pp_property_lists_8h" startline="15">h5pp::PropertyLists::linkCreate</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a7193940df5d8e5fe0be780c52930bc37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::copyLink</definition>
        <argsstring>(const h5pp::fs::path &amp;srcFilePath, std::string_view srcLinkPath, const h5pp::fs::path &amp;tgtFilePath, std::string_view tgtLinkPath, FilePermission targetFileCreatePermission=FilePermission::READWRITE, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>copyLink</name>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>srcFilePath</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>srcLinkPath</declname>
        </param>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>tgtFilePath</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>tgtLinkPath</declname>
        </param>
        <param>
          <type><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">FilePermission</ref></type>
          <declname>targetFileCreatePermission</declname>
          <defval><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf" kindref="member">FilePermission::READWRITE</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2807" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2807" bodyend="2846"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae4b58edbb030342186ceced8a5b4154f" compoundref="h5pp_hdf5_8h" startline="2118" endline="2172">createFile</references>
        <references refid="structh5pp_1_1_property_lists_1aa161c02310e4a1e3804ddc0f32ab3dec" compoundref="h5pp_property_lists_8h" startline="14">h5pp::PropertyLists::fileAccess</references>
        <references refid="namespaceh5pp_1_1hdf5_1afa9a53c511f13a32c50516a41003ce21" compoundref="h5pp_hdf5_8h" startline="2729" endline="2750">copyLink</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a49be36fa19289b4054f2b980e40c78d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>fs::path</type>
        <definition>fs::path h5pp::hdf5::copyFile</definition>
        <argsstring>(const h5pp::fs::path &amp;srcFilePath, const h5pp::fs::path &amp;tgtFilePath, FilePermission permission=FilePermission::COLLISION_FAIL, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>copyFile</name>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>srcFilePath</declname>
        </param>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>tgtFilePath</declname>
        </param>
        <param>
          <type><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">FilePermission</ref></type>
          <declname>permission</declname>
          <defval><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a" kindref="member">FilePermission::COLLISION_FAIL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2848" column="21" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2848" bodyend="2899"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae4b58edbb030342186ceced8a5b4154f" compoundref="h5pp_hdf5_8h" startline="2118" endline="2172">createFile</references>
        <references refid="structh5pp_1_1_property_lists_1aa161c02310e4a1e3804ddc0f32ab3dec" compoundref="h5pp_property_lists_8h" startline="14">h5pp::PropertyLists::fileAccess</references>
        <references refid="namespaceh5pp_1_1hdf5_1a18dd434f747ba88beaedcae7547a1caa" compoundref="h5pp_hdf5_8h" startline="1660" endline="1672">getContentsOfLink</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="structh5pp_1_1_property_lists_1acfdbad484245deb004afb69c799cdc2a" compoundref="h5pp_property_lists_8h" startline="15">h5pp::PropertyLists::linkCreate</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1a3dc70a5d2e704698e1bfa2548f9ff154" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void h5pp::hdf5::moveLink</definition>
        <argsstring>(const h5pp::fs::path &amp;srcFilePath, std::string_view srcLinkPath, const h5pp::fs::path &amp;tgtFilePath, std::string_view tgtLinkPath, FilePermission targetFileCreatePermission=FilePermission::READWRITE, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>moveLink</name>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>srcFilePath</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>srcLinkPath</declname>
        </param>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>tgtFilePath</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>tgtLinkPath</declname>
        </param>
        <param>
          <type><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">FilePermission</ref></type>
          <declname>targetFileCreatePermission</declname>
          <defval><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddeca2f517ac0110983661884131f057c2baf" kindref="member">FilePermission::READWRITE</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2901" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2901" bodyend="2943"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae4b58edbb030342186ceced8a5b4154f" compoundref="h5pp_hdf5_8h" startline="2118" endline="2172">createFile</references>
        <references refid="structh5pp_1_1_property_lists_1aa161c02310e4a1e3804ddc0f32ab3dec" compoundref="h5pp_property_lists_8h" startline="14">h5pp::PropertyLists::fileAccess</references>
        <references refid="namespaceh5pp_1_1hdf5_1ab5b871715e7243d5ad3373b978788b10" compoundref="h5pp_hdf5_8h" startline="2757" endline="2805">moveLink</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1hdf5_1ab1f12717534f39e1cd0e121de7b2da14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>fs::path</type>
        <definition>fs::path h5pp::hdf5::moveFile</definition>
        <argsstring>(const h5pp::fs::path &amp;src, const h5pp::fs::path &amp;tgt, FilePermission permission=FilePermission::COLLISION_FAIL, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>moveFile</name>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const h5pp::fs::path &amp;</type>
          <declname>tgt</declname>
        </param>
        <param>
          <type><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddec" kindref="member">FilePermission</ref></type>
          <declname>permission</declname>
          <defval><ref refid="namespaceh5pp_1a88bc0bd45cab0918f639ead880c6ddecaa9254c20033e9936e672e6fc5836964a" kindref="member">FilePermission::COLLISION_FAIL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="2945" column="21" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" bodystart="2945" bodyend="2965"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="namespaceh5pp_1_1hdf5_1a49be36fa19289b4054f2b980e40c78d3" compoundref="h5pp_hdf5_8h" startline="2848" endline="2899">copyFile</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A collection of functions to create (or get information about) datasets and attributes in HDF5 files. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHdf5.h" line="18" column="20"/>
  </compounddef>
</doxygen>
