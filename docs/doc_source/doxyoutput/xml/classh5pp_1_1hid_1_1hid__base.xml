<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classh5pp_1_1hid_1_1hid__base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>h5pp::hid::hid_base</compoundname>
    <includes refid="h5pp_hid_8h" local="no">h5ppHid.h</includes>
    <templateparamlist>
      <param>
        <type>typename hid_h5x</type>
      </param>
      <param>
        <type>bool</type>
        <declname>zeroValueIsOK</declname>
        <defname>zeroValueIsOK</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classh5pp_1_1hid_1_1hid__base_1aa153327f9d7e509625c08685fcf27692" prot="protected" static="no" mutable="no">
        <type>hid_t</type>
        <definition>hid_t h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="11" column="15" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a17cf65eae2f3b0cdce61164a6e63e18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::hid_base</definition>
        <argsstring>()=default</argsstring>
        <name>hid_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="14" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1ad362fd74c0539b93ed2c58e6a36a10a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::hid_base</definition>
        <argsstring>(std::initializer_list&lt; int &gt;)=delete</argsstring>
        <name>hid_base</name>
        <param>
          <type>std::initializer_list&lt; int &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="15" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a63ad03aa9ee0db24736621848dd474e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;std::is_same_v&lt;T, hid_t&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::hid_base</definition>
        <argsstring>(const T &amp;other)</argsstring>
        <name>hid_base</name>
        <param>
          <type>const T &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="18" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="18" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a2524d5bb09c6c3737ddb954f3b079e24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::hid_base</definition>
        <argsstring>(const hid_base &amp;other)</argsstring>
        <name>hid_base</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1hid__base" kindref="compound">hid_base</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="28" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="28" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1aed4c753cff28862f3c3b7af6d2f8ccbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classh5pp_1_1hid_1_1hid__base" kindref="compound">hid_base</ref> &amp;</type>
        <definition>hid_base&amp; h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator=</definition>
        <argsstring>(const hid_base &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classh5pp_1_1hid_1_1hid__base" kindref="compound">hid_base</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="41" column="18" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="41" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a1f8dac368247bbf15f1ae2485df5a720" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::close</definition>
        <argsstring>()=0</argsstring>
        <name>close</name>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5p_1abed05040c50c4527ae2cfe3517d639aa">close</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5s_1a319328343908c9eaab0d4ffa0527ba93">close</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5t_1a6014012bb37e98d58b535f77eb943452">close</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5d_1a069c24cc90496eb54dc6d98675f97518">close</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5g_1a6db19c9854470098c93fae1e1098ff00">close</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5a_1a7339a5383b0d6b3e5823f48dc06ddc20">close</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5o_1a9ebf03df42d95917e0ecdc4d020cd1a2">close</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5f_1ac062a2a3829f69d2702db39df9a51648">close</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5e_1acda30d1fa841be43dda77c8ce248d682">close</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="55" column="43"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a7d952d0f3710280cb70195fd907e7430" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::tag</definition>
        <argsstring>() const =0</argsstring>
        <name>tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="56" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a49d7564677e93a9b92fbf6eb06987e52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const hid_t &amp;</type>
        <definition>const hid_t&amp; h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="57" column="29" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a5b040323dce39cc7196a6511de86bda3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::refcount</definition>
        <argsstring>() const</argsstring>
        <name>refcount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="66" column="15" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="66" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a14bec8d794574c3f248fb08a9e26c554" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::pretty_print</definition>
        <argsstring>()</argsstring>
        <name>pretty_print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="81" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a59ea17e99a2a2b0dab4331e5c62a0985" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::safe_print</definition>
        <argsstring>()</argsstring>
        <name>safe_print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="82" column="22" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a10c62b79a8ff9a673be13b97f2a30a55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::valid</definition>
        <argsstring>(const hid_t &amp;other) const</argsstring>
        <name>valid</name>
        <param>
          <type>const hid_t &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="84" column="15" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a1833b03ce5f3e20d952680a8de5ab136" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="92" column="15" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a7964b39e8e2481e0d152d1da9505aa55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::valid</definition>
        <argsstring>(const hid_h5x &amp;other) const</argsstring>
        <name>valid</name>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="93" column="15" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a226cb2c35132b089507883a812c8c1f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::equal</definition>
        <argsstring>(const hid_t &amp;rhs) const =0</argsstring>
        <name>equal</name>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5p_1a50d9fa4255cf23361868e4741eee79f6">equal</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5s_1af249e48a485c37926b770e007f804a9c">equal</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5t_1a57952a301b286ab0c7d6b88f14503ea9">equal</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5d_1a2a1acc3cd0c200d5a00e91c9a2c582ad">equal</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5g_1af050d6d645d34c390cf52be39dcc8974">equal</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5a_1a5170945c2074a90724793b9f98dff63b">equal</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5o_1a502c90bbe89c305474c842ad3eb1c41d">equal</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5f_1ac33da5cf1877ff421171703aa0579572">equal</reimplementedby>
        <reimplementedby refid="classh5pp_1_1hid_1_1h5e_1aca0d75ccf1019b4d5641863063858930">equal</reimplementedby>
        <param>
          <type>const hid_t &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="96" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a1715740b8358be540ae0cdeeb35086e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator==</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="99" column="14" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1af2265e81d2cdb435401036d90ad0ef25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator!=</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="103" column="14" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a3a75f2455246cda6b208ab5b32bd371c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator&lt;=</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="107" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a37c86882c74387fc245b5d0b45000bd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator&gt;=</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="111" column="14" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a11df2635a33e4ca36fa55699d98f6e19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator&lt;</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="115" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1ac84094a76644c5c1a2d4ee7b06878698" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator&gt;</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="119" column="14" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a0c53cd70fd92e78a6de70b9dff337b2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::equal</definition>
        <argsstring>(const hid_h5x &amp;rhs) const</argsstring>
        <name>equal</name>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="124" column="15" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a96db516322e7cf7fd8c5637b466cb534" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator==</definition>
        <argsstring>(const hid_h5x &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="125" column="28" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a34a69bf4d530dae1417209261d9fe023" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator!=</definition>
        <argsstring>(const hid_h5x &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="126" column="28" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1ac9e0b3177d7e9737208359ac3f306bb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator&lt;=</definition>
        <argsstring>(const hid_h5x &amp;rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="127" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a78e08e6ae97690beaed73f5891a6822d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator&gt;=</definition>
        <argsstring>(const hid_h5x &amp;rhs) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="128" column="28" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a1ab43c3fbaeede5546f1c4a0393d32ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator&lt;</definition>
        <argsstring>(const hid_h5x &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="129" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1ab3abaebe1de8f8bcd5b19e8d543f8200" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator&gt;</definition>
        <argsstring>(const hid_h5x &amp;rhs) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="130" column="28" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a79117866c2ae9f0d09e317ca2f52c360" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator hid_t</definition>
        <argsstring>() const</argsstring>
        <name>operator hid_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="132" column="10" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a9d81a5256601c0a6441918ead1189f3b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="134" column="30" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1ac3d603e27324cceaa521d73de226b100" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="135" column="30" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a458fb7cc514c32d071af0d5aefca97b5" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::operator std::string_view</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="136" column="30" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classh5pp_1_1hid_1_1hid__base_1a2cc21c646349d0def51b191feefe7504" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual h5pp::hid::hid_base&lt; hid_h5x, zeroValueIsOK &gt;::~hid_base</definition>
        <argsstring>()=default</argsstring>
        <name>~hid_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="138" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classh5pp_1_1hid_1_1hid__base_1a8b31ef0bbee4170cd816877b08cd0a02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const hid_h5x &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const hid_h5x &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="137" column="16" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="137" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" line="9" column="19" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppHid.h" bodystart="9" bodyend="139"/>
    <listofallmembers>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a1f8dac368247bbf15f1ae2485df5a720" prot="public" virt="pure-virtual"><scope>h5pp::hid::hid_base</scope><name>close</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a226cb2c35132b089507883a812c8c1f1" prot="public" virt="pure-virtual"><scope>h5pp::hid::hid_base</scope><name>equal</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a0c53cd70fd92e78a6de70b9dff337b2f" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>equal</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a17cf65eae2f3b0cdce61164a6e63e18a" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>hid_base</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1ad362fd74c0539b93ed2c58e6a36a10a0" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>hid_base</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a63ad03aa9ee0db24736621848dd474e1" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>hid_base</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a2524d5bb09c6c3737ddb954f3b079e24" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>hid_base</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a9d81a5256601c0a6441918ead1189f3b" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator bool</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a79117866c2ae9f0d09e317ca2f52c360" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator hid_t</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1ac3d603e27324cceaa521d73de226b100" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator std::string</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a458fb7cc514c32d071af0d5aefca97b5" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator std::string_view</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1af2265e81d2cdb435401036d90ad0ef25" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator!=</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a34a69bf4d530dae1417209261d9fe023" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator!=</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a11df2635a33e4ca36fa55699d98f6e19" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&lt;</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a1ab43c3fbaeede5546f1c4a0393d32ae" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&lt;</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a8b31ef0bbee4170cd816877b08cd0a02" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&lt;&lt;</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a3a75f2455246cda6b208ab5b32bd371c" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&lt;=</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1ac9e0b3177d7e9737208359ac3f306bb4" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&lt;=</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1aed4c753cff28862f3c3b7af6d2f8ccbe" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator=</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a1715740b8358be540ae0cdeeb35086e6" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator==</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a96db516322e7cf7fd8c5637b466cb534" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator==</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1ac84094a76644c5c1a2d4ee7b06878698" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&gt;</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1ab3abaebe1de8f8bcd5b19e8d543f8200" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&gt;</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a37c86882c74387fc245b5d0b45000bd3" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&gt;=</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a78e08e6ae97690beaed73f5891a6822d" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>operator&gt;=</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a14bec8d794574c3f248fb08a9e26c554" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>pretty_print</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a5b040323dce39cc7196a6511de86bda3" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>refcount</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a59ea17e99a2a2b0dab4331e5c62a0985" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>safe_print</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a7d952d0f3710280cb70195fd907e7430" prot="public" virt="pure-virtual"><scope>h5pp::hid::hid_base</scope><name>tag</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1aa153327f9d7e509625c08685fcf27692" prot="protected" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>val</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a10c62b79a8ff9a673be13b97f2a30a55" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>valid</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a1833b03ce5f3e20d952680a8de5ab136" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>valid</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a7964b39e8e2481e0d152d1da9505aa55" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>valid</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a49d7564677e93a9b92fbf6eb06987e52" prot="public" virt="non-virtual"><scope>h5pp::hid::hid_base</scope><name>value</name></member>
      <member refid="classh5pp_1_1hid_1_1hid__base_1a2cc21c646349d0def51b191feefe7504" prot="public" virt="virtual"><scope>h5pp::hid::hid_base</scope><name>~hid_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
