<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceh5pp_1_1scan" kind="namespace" language="C++">
    <compoundname>h5pp::scan</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a2fd6b71103f8de72877bec933629ffb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::readDsetInfo</definition>
        <argsstring>(h5pp::DsetInfo &amp;info, const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>readDsetInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">h5pp::DsetInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="18" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="18" bodyend="79"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_dset_info_1a02695282a2d094bc7aabd6bfa4bb9fc0" compoundref="h5pp_info_8h" startline="220">h5pp::DsetInfo::dsetPath</references>
        <references refid="structh5pp_1_1_dset_info_1a58f15a74dd4f320566755d053702504e" compoundref="h5pp_info_8h" startline="228">h5pp::DsetInfo::dsetSlab</references>
        <references refid="structh5pp_1_1_options_1ae6b603baf0961d5ce150a659340f3613" compoundref="h5pp_info_8h" startline="91">h5pp::Options::dsetSlab</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_dset_info_1a9df252e6c046f3b31d25f94eb8a05b67" compoundref="h5pp_info_8h" startline="213">h5pp::DsetInfo::h5File</references>
        <references refid="structh5pp_1_1_dset_info_1a671c7bb8ad1a168e91e0d3eaf463553b" compoundref="h5pp_info_8h" startline="221">h5pp::DsetInfo::dsetExists</references>
        <references refid="namespaceh5pp_1_1hdf5_1aec048d9dd91e5d72d49332df2f04a40e" compoundref="h5pp_hdf5_8h" startline="471" endline="488">h5pp::hdf5::checkIfLinkExists</references>
        <references refid="structh5pp_1_1_dset_info_1ac0bb411f16f35870c21db44129ec5012" compoundref="h5pp_info_8h" startline="235" endline="240">h5pp::DsetInfo::getLocId</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="structh5pp_1_1_dset_info_1a0698a4d87df3f4b39dc268de56b9533c" compoundref="h5pp_info_8h" startline="214">h5pp::DsetInfo::h5Dset</references>
        <references refid="structh5pp_1_1_dset_info_1a7055f1166e9a5cce06324d9502310ee6" compoundref="h5pp_info_8h" startline="215">h5pp::DsetInfo::h5Type</references>
        <references refid="structh5pp_1_1_dset_info_1a6fe259f61912c853063b78fe88b568cb" compoundref="h5pp_info_8h" startline="217">h5pp::DsetInfo::h5Space</references>
        <references refid="structh5pp_1_1_dset_info_1a9f9fbefffa7655fce0fd129584ce13c9" compoundref="h5pp_info_8h" startline="223">h5pp::DsetInfo::dsetByte</references>
        <references refid="namespaceh5pp_1_1hdf5_1a24ec8a944e3eba035246370d2e99ca03" compoundref="h5pp_hdf5_8h" startline="221" endline="233">h5pp::hdf5::getBytesTotal</references>
        <references refid="structh5pp_1_1_dset_info_1a04ea6079208921bca11c32b54d89bb83" compoundref="h5pp_info_8h" startline="222">h5pp::DsetInfo::dsetSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">h5pp::hdf5::getSize</references>
        <references refid="structh5pp_1_1_dset_info_1acb16320a29dd53c18a8eb4f1bf23a756" compoundref="h5pp_info_8h" startline="224">h5pp::DsetInfo::dsetRank</references>
        <references refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" compoundref="h5pp_hdf5_8h" startline="56" endline="56">h5pp::hdf5::getRank</references>
        <references refid="structh5pp_1_1_dset_info_1a7f14b6321a342a6589de458fcc6b7247" compoundref="h5pp_info_8h" startline="225">h5pp::DsetInfo::dsetDims</references>
        <references refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" compoundref="h5pp_hdf5_8h" startline="82" endline="91">h5pp::hdf5::getDimensions</references>
        <references refid="structh5pp_1_1_dset_info_1ad1a3ffef5237a54a2e91b9bbbd1c7789" compoundref="h5pp_info_8h" startline="218">h5pp::DsetInfo::h5PlistDsetCreate</references>
        <references refid="structh5pp_1_1_dset_info_1af634783657b1cf3c2642aa2157c07ee3" compoundref="h5pp_info_8h" startline="219">h5pp::DsetInfo::h5PlistDsetAccess</references>
        <references refid="structh5pp_1_1_dset_info_1ac51824f123de75a50c3a81ebc73b5f60" compoundref="h5pp_info_8h" startline="216">h5pp::DsetInfo::h5Layout</references>
        <references refid="structh5pp_1_1_dset_info_1a76ab42997bd4a82ce7ee796187663ad0" compoundref="h5pp_info_8h" startline="227">h5pp::DsetInfo::dsetChunk</references>
        <references refid="namespaceh5pp_1_1hdf5_1af1da3a25187be4f7c4f7b89080f04c5f" compoundref="h5pp_hdf5_8h" startline="112" endline="125">h5pp::hdf5::getChunkDimensions</references>
        <references refid="structh5pp_1_1_dset_info_1abcb6dea25729e1ba3f35769d5979af34" compoundref="h5pp_info_8h" startline="226">h5pp::DsetInfo::dsetDimsMax</references>
        <references refid="namespaceh5pp_1_1hdf5_1ab553655036e9987da70ffefb1e07f262" compoundref="h5pp_hdf5_8h" startline="146" endline="157">h5pp::hdf5::getMaxDimensions</references>
        <references refid="structh5pp_1_1_dset_info_1acecbd091e86ebbdeeceddebadbcaff9b" compoundref="h5pp_info_8h" startline="229">h5pp::DsetInfo::resizePolicy</references>
        <references refid="structh5pp_1_1_options_1ad065ca2099f1f5b48228807e3cdee752" compoundref="h5pp_info_8h" startline="97">h5pp::Options::resizePolicy</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba0894c203073521ad32840dd9657949ab">h5pp::DO_NOT_RESIZE</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba181a1e17c5afb4561e6b966d995c46f9">h5pp::INCREASE_ONLY</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba6cd43a637f8b733c23575092197f3ebb">h5pp::RESIZE_TO_FIT</references>
        <references refid="structh5pp_1_1_dset_info_1a0318702d366ec2ef747fc22d6406cd4a" compoundref="h5pp_info_8h" startline="230">h5pp::DsetInfo::compression</references>
        <references refid="namespaceh5pp_1_1hdf5_1a702101457f9b2a061f1c082dcd526c76" compoundref="h5pp_hdf5_8h" startline="132" endline="144">h5pp::hdf5::getCompressionLevel</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">h5pp::hdf5::selectHyperslab</references>
        <references refid="structh5pp_1_1_dset_info_1a0415458e8810298f4573e4216d7386cc" compoundref="h5pp_info_8h" startline="233">h5pp::DsetInfo::cppTypeIndex</references>
        <references refid="structh5pp_1_1_dset_info_1ae129451db2d91b0701c59156db624515" compoundref="h5pp_info_8h" startline="231">h5pp::DsetInfo::cppTypeName</references>
        <references refid="structh5pp_1_1_dset_info_1a3c35adc9022fb9e5b33da2948acd8a11" compoundref="h5pp_info_8h" startline="232">h5pp::DsetInfo::cppTypeSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" compoundref="h5pp_hdf5_8h" startline="671" endline="730">h5pp::hdf5::getCppType</references>
        <references refid="namespaceh5pp_1_1debug_1aff3a16d65569dd5d2e7f63a03ff0c210" compoundref="h5pp_info_8h" startline="43" endline="80">h5pp::debug::reportCompatibility</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1af99c6b4d12542f7515d86dd09c11a453" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">h5pp::DsetInfo</ref></type>
        <definition>h5pp::DsetInfo h5pp::scan::readDsetInfo</definition>
        <argsstring>(const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>readDsetInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="88" column="28" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="88" bodyend="93"/>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1ad2c24978cc8d552549dc56c28f18d509" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">h5pp::DsetInfo</ref></type>
        <definition>h5pp::DsetInfo h5pp::scan::makeDsetInfo</definition>
        <argsstring>(const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>makeDsetInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Populates a <ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> object based entirely on passed options. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid HDF5 location (group or file) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>A struct containing optional metadata </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plists</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) access property for the file. Used to determine link access property when searching for the dataset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="101" column="27" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="101" bodyend="189"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_options_1a87c5b5bd80325d98f021b9f1b60b858d" compoundref="h5pp_info_8h" startline="88">h5pp::Options::dataDims</references>
        <references refid="structh5pp_1_1_options_1a11129e7c8f1501a66882c1cf3daf5954" compoundref="h5pp_info_8h" startline="90">h5pp::Options::dsetDimsMax</references>
        <references refid="structh5pp_1_1_options_1a5644c69c592b1fb2e35455f03ba1189e" compoundref="h5pp_info_8h" startline="89">h5pp::Options::dsetDimsChunk</references>
        <references refid="structh5pp_1_1_options_1ae6b603baf0961d5ce150a659340f3613" compoundref="h5pp_info_8h" startline="91">h5pp::Options::dsetSlab</references>
        <references refid="structh5pp_1_1_options_1ad8eaf0ae5755411adfcf4b22fc556d8e" compoundref="h5pp_info_8h" startline="94">h5pp::Options::h5Type</references>
        <references refid="structh5pp_1_1_options_1ab1c7919dda95e0edddc17bb2b4710b57" compoundref="h5pp_info_8h" startline="95">h5pp::Options::h5Layout</references>
        <references refid="structh5pp_1_1_options_1afa678ec8e743b4ae30e5b3f4dce16a19" compoundref="h5pp_info_8h" startline="96">h5pp::Options::compression</references>
        <references refid="structh5pp_1_1_options_1ad065ca2099f1f5b48228807e3cdee752" compoundref="h5pp_info_8h" startline="97">h5pp::Options::resizePolicy</references>
        <references refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" compoundref="h5pp_utils_8h" startline="187" endline="189">h5pp::util::getSizeFromDimensions</references>
        <references refid="namespaceh5pp_1_1util_1adef11453affa0b4886885661e217a8e4" compoundref="h5pp_utils_8h" startline="217" endline="217">h5pp::util::getRankFromDimensions</references>
        <references refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" compoundref="h5pp_hdf5_8h" startline="215" endline="215">h5pp::hdf5::getBytesPerElem</references>
        <references refid="namespaceh5pp_1_1util_1aa1a1b298bd7d9baa9acd2bfb1464766b" compoundref="h5pp_utils_8h" startline="270" endline="286">h5pp::util::decideDimensionsMax</references>
        <references refid="namespaceh5pp_1_1util_1ab497c3103b3f9fa58d0cc9b3711a6ec6" compoundref="h5pp_utils_8h" startline="469" endline="527">h5pp::util::getChunkDimensions</references>
        <references refid="namespaceh5pp_1_1hdf5_1af74356caf55623e9ecfe87e2c6325dc8" compoundref="h5pp_hdf5_8h" startline="607" endline="623">h5pp::hdf5::getValidCompressionLevel</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba0894c203073521ad32840dd9657949ab">h5pp::DO_NOT_RESIZE</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba6cd43a637f8b733c23575092197f3ebb">h5pp::RESIZE_TO_FIT</references>
        <references refid="namespaceh5pp_1_1util_1a51262a673a1ba63b27fd44c809e0b14f" compoundref="h5pp_utils_8h" startline="288" endline="345">h5pp::util::getDsetSpace</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">h5pp::hdf5::selectHyperslab</references>
        <references refid="namespaceh5pp_1_1hdf5_1a48dce0da41feb5ff6e90611e7cb240aa" compoundref="h5pp_hdf5_8h" startline="868" endline="886">h5pp::hdf5::setProperty_layout</references>
        <references refid="namespaceh5pp_1_1hdf5_1ac29eb3dbb28dd9598638379a6be51404" compoundref="h5pp_hdf5_8h" startline="888" endline="930">h5pp::hdf5::setProperty_chunkDims</references>
        <references refid="namespaceh5pp_1_1hdf5_1ab6bb8f2a9446f6251bbdad39f92e3e3e" compoundref="h5pp_hdf5_8h" startline="932" endline="954">h5pp::hdf5::setProperty_compression</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a5f096a22a7ecdcbb6ec8106302299339" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_dset_info" kindref="compound">h5pp::DsetInfo</ref></type>
        <definition>h5pp::DsetInfo h5pp::scan::inferDsetInfo</definition>
        <argsstring>(const h5x &amp;loc, const DataType &amp;data, const Options &amp;options=Options(), const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>inferDsetInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="structh5pp_1_1_options" kindref="compound">Options</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Populates a <ref refid="structh5pp_1_1_dset_info" kindref="compound">DsetInfo</ref> object. If the attribute exists properties are read from file. Otherwise properties are inferred from the given data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid HDF5 location (group or file) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data from which to infer properties </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>A struct containing optional metadata </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plists</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) access property for the file. Used to determine link access property when searching for the dataset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="200" column="28" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="200" bodyend="304"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_options_1a87c5b5bd80325d98f021b9f1b60b858d" compoundref="h5pp_info_8h" startline="88">h5pp::Options::dataDims</references>
        <references refid="structh5pp_1_1_options_1a11129e7c8f1501a66882c1cf3daf5954" compoundref="h5pp_info_8h" startline="90">h5pp::Options::dsetDimsMax</references>
        <references refid="structh5pp_1_1_options_1a5644c69c592b1fb2e35455f03ba1189e" compoundref="h5pp_info_8h" startline="89">h5pp::Options::dsetDimsChunk</references>
        <references refid="structh5pp_1_1_options_1ae6b603baf0961d5ce150a659340f3613" compoundref="h5pp_info_8h" startline="91">h5pp::Options::dsetSlab</references>
        <references refid="structh5pp_1_1_options_1ad8eaf0ae5755411adfcf4b22fc556d8e" compoundref="h5pp_info_8h" startline="94">h5pp::Options::h5Type</references>
        <references refid="structh5pp_1_1_options_1ab1c7919dda95e0edddc17bb2b4710b57" compoundref="h5pp_info_8h" startline="95">h5pp::Options::h5Layout</references>
        <references refid="structh5pp_1_1_options_1ad065ca2099f1f5b48228807e3cdee752" compoundref="h5pp_info_8h" startline="97">h5pp::Options::resizePolicy</references>
        <references refid="structh5pp_1_1_options_1afa678ec8e743b4ae30e5b3f4dce16a19" compoundref="h5pp_info_8h" startline="96">h5pp::Options::compression</references>
        <references refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" compoundref="h5pp_utils_8h" startline="187" endline="189">h5pp::util::getSizeFromDimensions</references>
        <references refid="namespaceh5pp_1_1util_1adef11453affa0b4886885661e217a8e4" compoundref="h5pp_utils_8h" startline="217" endline="217">h5pp::util::getRankFromDimensions</references>
        <references refid="namespaceh5pp_1_1util_1aa1a1b298bd7d9baa9acd2bfb1464766b" compoundref="h5pp_utils_8h" startline="270" endline="286">h5pp::util::decideDimensionsMax</references>
        <references refid="namespaceh5pp_1_1util_1ab497c3103b3f9fa58d0cc9b3711a6ec6" compoundref="h5pp_utils_8h" startline="469" endline="527">h5pp::util::getChunkDimensions</references>
        <references refid="namespaceh5pp_1_1hdf5_1af74356caf55623e9ecfe87e2c6325dc8" compoundref="h5pp_hdf5_8h" startline="607" endline="623">h5pp::hdf5::getValidCompressionLevel</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba0894c203073521ad32840dd9657949ab">h5pp::DO_NOT_RESIZE</references>
        <references refid="namespaceh5pp_1a2cdec76cdc0a46d0e12ae22f38aa49eba6cd43a637f8b733c23575092197f3ebb">h5pp::RESIZE_TO_FIT</references>
        <references refid="namespaceh5pp_1_1util_1a51262a673a1ba63b27fd44c809e0b14f" compoundref="h5pp_utils_8h" startline="288" endline="345">h5pp::util::getDsetSpace</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">h5pp::hdf5::selectHyperslab</references>
        <references refid="namespaceh5pp_1_1hdf5_1a48dce0da41feb5ff6e90611e7cb240aa" compoundref="h5pp_hdf5_8h" startline="868" endline="886">h5pp::hdf5::setProperty_layout</references>
        <references refid="namespaceh5pp_1_1hdf5_1ac29eb3dbb28dd9598638379a6be51404" compoundref="h5pp_hdf5_8h" startline="888" endline="930">h5pp::hdf5::setProperty_chunkDims</references>
        <references refid="namespaceh5pp_1_1hdf5_1ab6bb8f2a9446f6251bbdad39f92e3e3e" compoundref="h5pp_hdf5_8h" startline="932" endline="954">h5pp::hdf5::setProperty_compression</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1acb296c4837c09634a1f255e7739ac6bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::scanDataInfo</definition>
        <argsstring>(DataInfo &amp;info, const DataType &amp;data, const Options &amp;options=Options())</argsstring>
        <name>scanDataInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="structh5pp_1_1_options" kindref="compound">Options</ref>()</defval>
        </param>
        <briefdescription>
<para>Populates a <ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> object by scanning the given data type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="308" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="308" bodyend="339"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_data_info_1a5367c7635d47ed6665efd7b82d5e7457" compoundref="h5pp_info_8h" startline="135">h5pp::DataInfo::dataDims</references>
        <references refid="structh5pp_1_1_options_1a87c5b5bd80325d98f021b9f1b60b858d" compoundref="h5pp_info_8h" startline="88">h5pp::Options::dataDims</references>
        <references refid="structh5pp_1_1_data_info_1a0a10f49efbf6f9ba4e936feb304e3d1a" compoundref="h5pp_info_8h" startline="137">h5pp::DataInfo::dataSlab</references>
        <references refid="structh5pp_1_1_options_1a3504635391c048c4de91fbdf50521b95" compoundref="h5pp_info_8h" startline="93">h5pp::Options::dataSlab</references>
        <references refid="structh5pp_1_1_data_info_1a049a5e215c85aceadabe6d127ac82eb4" compoundref="h5pp_info_8h" startline="133">h5pp::DataInfo::dataSize</references>
        <references refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" compoundref="h5pp_utils_8h" startline="187" endline="189">h5pp::util::getSizeFromDimensions</references>
        <references refid="structh5pp_1_1_opt_dims_type_1ae823a511f8e2b297e1de4f015ed64499" compoundref="h5pp_dimension_type_8h" startline="101" endline="101">h5pp::OptDimsType::value</references>
        <references refid="structh5pp_1_1_data_info_1afa7dbb0fe70e65374bbdd5888c32ea2e" compoundref="h5pp_info_8h" startline="136">h5pp::DataInfo::dataRank</references>
        <references refid="namespaceh5pp_1_1util_1adef11453affa0b4886885661e217a8e4" compoundref="h5pp_utils_8h" startline="217" endline="217">h5pp::util::getRankFromDimensions</references>
        <references refid="structh5pp_1_1_data_info_1ac4b0da9ef8c1bc77e4dd180b0d0e9f01" compoundref="h5pp_info_8h" startline="134">h5pp::DataInfo::dataByte</references>
        <references refid="structh5pp_1_1_data_info_1aea3ba23c0fa2160e30b64216d8e9be56" compoundref="h5pp_info_8h" startline="141">h5pp::DataInfo::cppTypeIndex</references>
        <references refid="structh5pp_1_1_data_info_1a9b10a7a521d50519a8474b0d4ae7dcfd" compoundref="h5pp_info_8h" startline="139">h5pp::DataInfo::cppTypeName</references>
        <references refid="structh5pp_1_1_data_info_1a2d1ac69649492264ed76b8174d4ff568" compoundref="h5pp_info_8h" startline="140">h5pp::DataInfo::cppTypeSize</references>
        <references refid="structh5pp_1_1_data_info_1ab48df514a7fdfb04606b94550cd69a26" compoundref="h5pp_info_8h" startline="138">h5pp::DataInfo::h5Space</references>
        <references refid="namespaceh5pp_1_1util_1a5b62df990ff2d31cd5dc0843592941cd" compoundref="h5pp_utils_8h" startline="354" endline="365">h5pp::util::getMemSpace</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">h5pp::hdf5::selectHyperslab</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1ae2508333aa0628af5ef141345db75c30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_data_info" kindref="compound">h5pp::DataInfo</ref></type>
        <definition>h5pp::DataInfo h5pp::scan::scanDataInfo</definition>
        <argsstring>(const DataType &amp;data, const Options &amp;options=Options())</argsstring>
        <name>scanDataInfo</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="structh5pp_1_1_options" kindref="compound">Options</ref>()</defval>
        </param>
        <briefdescription>
<para>Creates and returns a populated a <ref refid="structh5pp_1_1_data_info" kindref="compound">DataInfo</ref> object by scanning the given data type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="343" column="27" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="343" bodyend="348"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a7533f243c9e00de2eec594c038f6c437" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::readAttrInfo</definition>
        <argsstring>(AttrInfo &amp;info, const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>readAttrInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Populates an <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> object with properties read from file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="352" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="352" bodyend="415"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_attr_info_1aaeef426a56e2f79375cbda2f8a7c68f2" compoundref="h5pp_info_8h" startline="390">h5pp::AttrInfo::linkPath</references>
        <references refid="structh5pp_1_1_options_1a8b8e0901aae85fddea3ee474ae599d29" compoundref="h5pp_info_8h" startline="87">h5pp::Options::attrName</references>
        <references refid="structh5pp_1_1_attr_info_1a9c92b7b99b87bf78d7e54171b76945da" compoundref="h5pp_info_8h" startline="389">h5pp::AttrInfo::attrName</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_attr_info_1a5a67b3704e021e54c7876c39b62816eb" compoundref="h5pp_info_8h" startline="397">h5pp::AttrInfo::attrSlab</references>
        <references refid="structh5pp_1_1_options_1a24d6176353acdf5e2577c509e67cb929" compoundref="h5pp_info_8h" startline="92">h5pp::Options::attrSlab</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_attr_info_1af387814e8192c46345ceb0dfcffc3095" compoundref="h5pp_info_8h" startline="382">h5pp::AttrInfo::h5File</references>
        <references refid="structh5pp_1_1_attr_info_1a8ed327321a9513fae2eb98b9b17e02e3" compoundref="h5pp_info_8h" startline="392">h5pp::AttrInfo::linkExists</references>
        <references refid="namespaceh5pp_1_1hdf5_1aec048d9dd91e5d72d49332df2f04a40e" compoundref="h5pp_hdf5_8h" startline="471" endline="488">h5pp::hdf5::checkIfLinkExists</references>
        <references refid="structh5pp_1_1_attr_info_1a4bff5718a25bc7fa89002ed4cb07cabf" compoundref="h5pp_info_8h" startline="402" endline="408">h5pp::AttrInfo::getLocId</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="structh5pp_1_1_attr_info_1a3dc884fb4dea53c9f1d04727d362b8e7" compoundref="h5pp_info_8h" startline="383">h5pp::AttrInfo::h5Link</references>
        <references refid="structh5pp_1_1_attr_info_1a3bb46c9770d1b841eb153930ac287f9e" compoundref="h5pp_info_8h" startline="391">h5pp::AttrInfo::attrExists</references>
        <references refid="namespaceh5pp_1_1hdf5_1abdd9c3a3c661a27296ad15c28faff7dd" compoundref="h5pp_hdf5_8h" startline="524" endline="533">h5pp::hdf5::checkIfAttrExists</references>
        <references refid="structh5pp_1_1_attr_info_1a2e40d23cce20a2eb3d0c15ceb351422a" compoundref="h5pp_info_8h" startline="384">h5pp::AttrInfo::h5Attr</references>
        <references refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" compoundref="h5pp_info_8h" startline="385">h5pp::AttrInfo::h5Type</references>
        <references refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" compoundref="h5pp_info_8h" startline="386">h5pp::AttrInfo::h5Space</references>
        <references refid="structh5pp_1_1_attr_info_1a25e9278fd323f04394e5cd6d708cd83d" compoundref="h5pp_info_8h" startline="394">h5pp::AttrInfo::attrByte</references>
        <references refid="namespaceh5pp_1_1hdf5_1a0977eba6f1ab37131a69210ef47a1b65" compoundref="h5pp_hdf5_8h" startline="235" endline="247">h5pp::hdf5::getBytesTotal</references>
        <references refid="structh5pp_1_1_attr_info_1aaaa31a96a16bf4df645a4bcba2bfb0e2" compoundref="h5pp_info_8h" startline="393">h5pp::AttrInfo::attrSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1ae9c89449ff6f65f8312b2438ef453ad1" compoundref="h5pp_hdf5_8h" startline="68" endline="68">h5pp::hdf5::getSize</references>
        <references refid="structh5pp_1_1_attr_info_1a907906fd31c3aea3260d2b1f7e75025a" compoundref="h5pp_info_8h" startline="396">h5pp::AttrInfo::attrDims</references>
        <references refid="namespaceh5pp_1_1hdf5_1a13e315ec366df21c69d4a718e2a09ef6" compoundref="h5pp_hdf5_8h" startline="82" endline="91">h5pp::hdf5::getDimensions</references>
        <references refid="structh5pp_1_1_attr_info_1a67f821c59b84d89c7ab4cb70dfccaab3" compoundref="h5pp_info_8h" startline="395">h5pp::AttrInfo::attrRank</references>
        <references refid="namespaceh5pp_1_1hdf5_1a217b9497758c097d45cc2d74441bf2a6" compoundref="h5pp_hdf5_8h" startline="56" endline="56">h5pp::hdf5::getRank</references>
        <references refid="structh5pp_1_1_attr_info_1a6010f0d5ea9269dd16ed7abfaf111931" compoundref="h5pp_info_8h" startline="387">h5pp::AttrInfo::h5PlistAttrCreate</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">h5pp::hdf5::selectHyperslab</references>
        <references refid="structh5pp_1_1_attr_info_1a04a3819a2995078fd4b342ca8874d7cd" compoundref="h5pp_info_8h" startline="388">h5pp::AttrInfo::h5PlistAttrAccess</references>
        <references refid="structh5pp_1_1_attr_info_1aa815113479f4ad44aeaab5d78d4c42e8" compoundref="h5pp_info_8h" startline="400">h5pp::AttrInfo::cppTypeIndex</references>
        <references refid="structh5pp_1_1_attr_info_1ae45a884c16bfd2af419d74ffc412bada" compoundref="h5pp_info_8h" startline="398">h5pp::AttrInfo::cppTypeName</references>
        <references refid="structh5pp_1_1_attr_info_1a874b3e3c9f4fb89160ffc0ac0a283884" compoundref="h5pp_info_8h" startline="399">h5pp::AttrInfo::cppTypeSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" compoundref="h5pp_hdf5_8h" startline="671" endline="730">h5pp::hdf5::getCppType</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a19fb6b66ddabf43faea48f0c1d59f5cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_attr_info" kindref="compound">h5pp::AttrInfo</ref></type>
        <definition>h5pp::AttrInfo h5pp::scan::readAttrInfo</definition>
        <argsstring>(const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>readAttrInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Creates and returns a populated <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> object with properties read from file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="419" column="28" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="419" bodyend="423"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1af6a4e0999406d63963e97bc0b9866c1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::inferAttrInfo</definition>
        <argsstring>(AttrInfo &amp;info, const h5x &amp;loc, const DataType &amp;data, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>inferAttrInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Populates an <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> object. If the attribute exists properties are read from file. Otherwise properties are inferred from the given data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="429" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="429" bodyend="495"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_attr_info_1a8ed327321a9513fae2eb98b9b17e02e3" compoundref="h5pp_info_8h" startline="392">h5pp::AttrInfo::linkExists</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_attr_info_1a3bb46c9770d1b841eb153930ac287f9e" compoundref="h5pp_info_8h" startline="391">h5pp::AttrInfo::attrExists</references>
        <references refid="structh5pp_1_1_options_1a8b8e0901aae85fddea3ee474ae599d29" compoundref="h5pp_info_8h" startline="87">h5pp::Options::attrName</references>
        <references refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" compoundref="h5pp_info_8h" startline="385">h5pp::AttrInfo::h5Type</references>
        <references refid="structh5pp_1_1_options_1ad8eaf0ae5755411adfcf4b22fc556d8e" compoundref="h5pp_info_8h" startline="94">h5pp::Options::h5Type</references>
        <references refid="structh5pp_1_1_attr_info_1a907906fd31c3aea3260d2b1f7e75025a" compoundref="h5pp_info_8h" startline="396">h5pp::AttrInfo::attrDims</references>
        <references refid="structh5pp_1_1_options_1a87c5b5bd80325d98f021b9f1b60b858d" compoundref="h5pp_info_8h" startline="88">h5pp::Options::dataDims</references>
        <references refid="structh5pp_1_1_attr_info_1a5a67b3704e021e54c7876c39b62816eb" compoundref="h5pp_info_8h" startline="397">h5pp::AttrInfo::attrSlab</references>
        <references refid="structh5pp_1_1_options_1a24d6176353acdf5e2577c509e67cb929" compoundref="h5pp_info_8h" startline="92">h5pp::Options::attrSlab</references>
        <references refid="structh5pp_1_1_attr_info_1aaaa31a96a16bf4df645a4bcba2bfb0e2" compoundref="h5pp_info_8h" startline="393">h5pp::AttrInfo::attrSize</references>
        <references refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" compoundref="h5pp_utils_8h" startline="187" endline="189">h5pp::util::getSizeFromDimensions</references>
        <references refid="structh5pp_1_1_attr_info_1a67f821c59b84d89c7ab4cb70dfccaab3" compoundref="h5pp_info_8h" startline="395">h5pp::AttrInfo::attrRank</references>
        <references refid="namespaceh5pp_1_1util_1adef11453affa0b4886885661e217a8e4" compoundref="h5pp_utils_8h" startline="217" endline="217">h5pp::util::getRankFromDimensions</references>
        <references refid="structh5pp_1_1_attr_info_1a25e9278fd323f04394e5cd6d708cd83d" compoundref="h5pp_info_8h" startline="394">h5pp::AttrInfo::attrByte</references>
        <references refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" compoundref="h5pp_info_8h" startline="386">h5pp::AttrInfo::h5Space</references>
        <references refid="namespaceh5pp_1_1util_1a51262a673a1ba63b27fd44c809e0b14f" compoundref="h5pp_utils_8h" startline="288" endline="345">h5pp::util::getDsetSpace</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">h5pp::hdf5::selectHyperslab</references>
        <references refid="structh5pp_1_1_attr_info_1a6010f0d5ea9269dd16ed7abfaf111931" compoundref="h5pp_info_8h" startline="387">h5pp::AttrInfo::h5PlistAttrCreate</references>
        <references refid="structh5pp_1_1_attr_info_1a04a3819a2995078fd4b342ca8874d7cd" compoundref="h5pp_info_8h" startline="388">h5pp::AttrInfo::h5PlistAttrAccess</references>
        <references refid="structh5pp_1_1_attr_info_1aa815113479f4ad44aeaab5d78d4c42e8" compoundref="h5pp_info_8h" startline="400">h5pp::AttrInfo::cppTypeIndex</references>
        <references refid="structh5pp_1_1_attr_info_1ae45a884c16bfd2af419d74ffc412bada" compoundref="h5pp_info_8h" startline="398">h5pp::AttrInfo::cppTypeName</references>
        <references refid="structh5pp_1_1_attr_info_1a874b3e3c9f4fb89160ffc0ac0a283884" compoundref="h5pp_info_8h" startline="399">h5pp::AttrInfo::cppTypeSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" compoundref="h5pp_hdf5_8h" startline="671" endline="730">h5pp::hdf5::getCppType</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a07b61503b84ebca9e52342578a7a4ff8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_attr_info" kindref="compound">h5pp::AttrInfo</ref></type>
        <definition>h5pp::AttrInfo h5pp::scan::inferAttrInfo</definition>
        <argsstring>(const h5x &amp;loc, const DataType &amp;data, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>inferAttrInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Creates and returns a populated <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> object. If the attribute exists properties are read from file. Otherwise properties are inferred from given data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="502" column="9" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="502" bodyend="506"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1af492cf103948e9c6b1579f1bfe87f035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::makeAttrInfo</definition>
        <argsstring>(AttrInfo &amp;info, const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>makeAttrInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Populates an <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> object based entirely on given options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="510" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="510" bodyend="554"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_attr_info_1a3bb46c9770d1b841eb153930ac287f9e" compoundref="h5pp_info_8h" startline="391">h5pp::AttrInfo::attrExists</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_options_1a8b8e0901aae85fddea3ee474ae599d29" compoundref="h5pp_info_8h" startline="87">h5pp::Options::attrName</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_attr_info_1acf3777d2114862a7596b1801aee6bbf8" compoundref="h5pp_info_8h" startline="385">h5pp::AttrInfo::h5Type</references>
        <references refid="structh5pp_1_1_options_1ad8eaf0ae5755411adfcf4b22fc556d8e" compoundref="h5pp_info_8h" startline="94">h5pp::Options::h5Type</references>
        <references refid="structh5pp_1_1_attr_info_1a907906fd31c3aea3260d2b1f7e75025a" compoundref="h5pp_info_8h" startline="396">h5pp::AttrInfo::attrDims</references>
        <references refid="structh5pp_1_1_options_1a87c5b5bd80325d98f021b9f1b60b858d" compoundref="h5pp_info_8h" startline="88">h5pp::Options::dataDims</references>
        <references refid="structh5pp_1_1_attr_info_1a5a67b3704e021e54c7876c39b62816eb" compoundref="h5pp_info_8h" startline="397">h5pp::AttrInfo::attrSlab</references>
        <references refid="structh5pp_1_1_options_1a24d6176353acdf5e2577c509e67cb929" compoundref="h5pp_info_8h" startline="92">h5pp::Options::attrSlab</references>
        <references refid="structh5pp_1_1_attr_info_1aaeef426a56e2f79375cbda2f8a7c68f2" compoundref="h5pp_info_8h" startline="390">h5pp::AttrInfo::linkPath</references>
        <references refid="structh5pp_1_1_attr_info_1a9c92b7b99b87bf78d7e54171b76945da" compoundref="h5pp_info_8h" startline="389">h5pp::AttrInfo::attrName</references>
        <references refid="structh5pp_1_1_attr_info_1aaaa31a96a16bf4df645a4bcba2bfb0e2" compoundref="h5pp_info_8h" startline="393">h5pp::AttrInfo::attrSize</references>
        <references refid="namespaceh5pp_1_1util_1a75a70ac870194ad17968d2e180936bc2" compoundref="h5pp_utils_8h" startline="187" endline="189">h5pp::util::getSizeFromDimensions</references>
        <references refid="structh5pp_1_1_attr_info_1a67f821c59b84d89c7ab4cb70dfccaab3" compoundref="h5pp_info_8h" startline="395">h5pp::AttrInfo::attrRank</references>
        <references refid="namespaceh5pp_1_1util_1adef11453affa0b4886885661e217a8e4" compoundref="h5pp_utils_8h" startline="217" endline="217">h5pp::util::getRankFromDimensions</references>
        <references refid="structh5pp_1_1_attr_info_1a25e9278fd323f04394e5cd6d708cd83d" compoundref="h5pp_info_8h" startline="394">h5pp::AttrInfo::attrByte</references>
        <references refid="namespaceh5pp_1_1hdf5_1ad5cf4c6a513a3abf8e499158fd239b26" compoundref="h5pp_hdf5_8h" startline="215" endline="215">h5pp::hdf5::getBytesPerElem</references>
        <references refid="structh5pp_1_1_attr_info_1ac198b5639d790e136f768e518b8d9ef0" compoundref="h5pp_info_8h" startline="386">h5pp::AttrInfo::h5Space</references>
        <references refid="namespaceh5pp_1_1util_1a51262a673a1ba63b27fd44c809e0b14f" compoundref="h5pp_utils_8h" startline="288" endline="345">h5pp::util::getDsetSpace</references>
        <references refid="namespaceh5pp_1_1hdf5_1a68fd735604daa9a3fd1d387cad816cc2" compoundref="h5pp_hdf5_8h" startline="956" endline="1040">h5pp::hdf5::selectHyperslab</references>
        <references refid="structh5pp_1_1_attr_info_1a6010f0d5ea9269dd16ed7abfaf111931" compoundref="h5pp_info_8h" startline="387">h5pp::AttrInfo::h5PlistAttrCreate</references>
        <references refid="structh5pp_1_1_attr_info_1a04a3819a2995078fd4b342ca8874d7cd" compoundref="h5pp_info_8h" startline="388">h5pp::AttrInfo::h5PlistAttrAccess</references>
        <references refid="structh5pp_1_1_attr_info_1aa815113479f4ad44aeaab5d78d4c42e8" compoundref="h5pp_info_8h" startline="400">h5pp::AttrInfo::cppTypeIndex</references>
        <references refid="structh5pp_1_1_attr_info_1ae45a884c16bfd2af419d74ffc412bada" compoundref="h5pp_info_8h" startline="398">h5pp::AttrInfo::cppTypeName</references>
        <references refid="structh5pp_1_1_attr_info_1a874b3e3c9f4fb89160ffc0ac0a283884" compoundref="h5pp_info_8h" startline="399">h5pp::AttrInfo::cppTypeSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" compoundref="h5pp_hdf5_8h" startline="671" endline="730">h5pp::hdf5::getCppType</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a8eccc9b9f799043951371e13c773f458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_attr_info" kindref="compound">h5pp::AttrInfo</ref></type>
        <definition>h5pp::AttrInfo h5pp::scan::makeAttrInfo</definition>
        <argsstring>(const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>makeAttrInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Creates and returns a populated <ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> object based entirely on given options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="558" column="28" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="558" bodyend="562"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1aa5d532777483b276c8abb0e6d42b2c98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::inferAttrInfo</definition>
        <argsstring>(AttrInfo &amp;info, const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>inferAttrInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_attr_info" kindref="compound">AttrInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="567" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="567" bodyend="593"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_attr_info_1aaeef426a56e2f79375cbda2f8a7c68f2" compoundref="h5pp_info_8h" startline="390">h5pp::AttrInfo::linkPath</references>
        <references refid="structh5pp_1_1_options_1a8b8e0901aae85fddea3ee474ae599d29" compoundref="h5pp_info_8h" startline="87">h5pp::Options::attrName</references>
        <references refid="structh5pp_1_1_attr_info_1a9c92b7b99b87bf78d7e54171b76945da" compoundref="h5pp_info_8h" startline="389">h5pp::AttrInfo::attrName</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_attr_info_1a8ed327321a9513fae2eb98b9b17e02e3" compoundref="h5pp_info_8h" startline="392">h5pp::AttrInfo::linkExists</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="structh5pp_1_1_attr_info_1a3dc884fb4dea53c9f1d04727d362b8e7" compoundref="h5pp_info_8h" startline="383">h5pp::AttrInfo::h5Link</references>
        <references refid="structh5pp_1_1_attr_info_1a3bb46c9770d1b841eb153930ac287f9e" compoundref="h5pp_info_8h" startline="391">h5pp::AttrInfo::attrExists</references>
        <references refid="namespaceh5pp_1_1hdf5_1abdd9c3a3c661a27296ad15c28faff7dd" compoundref="h5pp_hdf5_8h" startline="524" endline="533">h5pp::hdf5::checkIfAttrExists</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a51df4e4b0d6d02b241064725df256a26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::readTableInfo</definition>
        <argsstring>(TableInfo &amp;info, const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>readTableInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
<para>Populates a <ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> object with properties read from file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="600" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="600" bodyend="700"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_table_info_1a8b339639540096f9e83adcf1dba1a48f" compoundref="h5pp_info_8h" startline="489">h5pp::TableInfo::h5File</references>
        <references refid="structh5pp_1_1_table_info_1ad9db6683bff24f33b3239d939fc5fbbd" compoundref="h5pp_info_8h" startline="502">h5pp::TableInfo::tableExists</references>
        <references refid="namespaceh5pp_1_1hdf5_1aec048d9dd91e5d72d49332df2f04a40e" compoundref="h5pp_hdf5_8h" startline="471" endline="488">h5pp::hdf5::checkIfLinkExists</references>
        <references refid="structh5pp_1_1_table_info_1a8ee0d7a0e07f049681603afb72cb91b1" compoundref="h5pp_info_8h" startline="509" endline="514">h5pp::TableInfo::getLocId</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="structh5pp_1_1_table_info_1aa99afd50684d01bc05f42b0168ad85f2" compoundref="h5pp_info_8h" startline="494">h5pp::TableInfo::tableGroupName</references>
        <references refid="structh5pp_1_1_table_info_1a1974c8014edf61caa821b4fbb11d2094" compoundref="h5pp_info_8h" startline="490">h5pp::TableInfo::h5Dset</references>
        <references refid="namespaceh5pp_1_1hdf5_1a303e50c1843addf7224e3dec93b4f9be" compoundref="h5pp_hdf5_8h" startline="491" endline="521">h5pp::hdf5::openLink</references>
        <references refid="structh5pp_1_1_table_info_1a62a7ddc51f727ab08be61b53d403afff" compoundref="h5pp_info_8h" startline="491">h5pp::TableInfo::h5Type</references>
        <references refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" compoundref="h5pp_info_8h" startline="496">h5pp::TableInfo::numRecords</references>
        <references refid="namespaceh5pp_1_1hdf5_1aa8f2dfc35e262fa205a817f7eb16060c" compoundref="h5pp_hdf5_8h" startline="93" endline="96">h5pp::hdf5::getDimensions</references>
        <references refid="structh5pp_1_1_table_info_1a0134faaab1a3c70a5c07cef6f1862815" compoundref="h5pp_info_8h" startline="495">h5pp::TableInfo::numFields</references>
        <references refid="structh5pp_1_1_table_info_1adca1998058259900599381c2463db726" compoundref="h5pp_info_8h" startline="492">h5pp::TableInfo::tableTitle</references>
        <references refid="structh5pp_1_1_table_info_1afbbda9cf5c07f618f545c2084259b3e4" compoundref="h5pp_info_8h" startline="501">h5pp::TableInfo::fieldTypes</references>
        <references refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" compoundref="h5pp_info_8h" startline="499">h5pp::TableInfo::fieldSizes</references>
        <references refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" compoundref="h5pp_info_8h" startline="500">h5pp::TableInfo::fieldOffsets</references>
        <references refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" compoundref="h5pp_info_8h" startline="497">h5pp::TableInfo::recordBytes</references>
        <references refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" compoundref="h5pp_info_8h" startline="498">h5pp::TableInfo::fieldNames</references>
        <references refid="structh5pp_1_1_table_info_1a781a212c634da1c444c724285c80024d" compoundref="h5pp_info_8h" startline="504">h5pp::TableInfo::chunkSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1af1da3a25187be4f7c4f7b89080f04c5f" compoundref="h5pp_hdf5_8h" startline="112" endline="125">h5pp::hdf5::getChunkDimensions</references>
        <references refid="structh5pp_1_1_table_info_1aeae14b48cded957e54b302a779334d85" compoundref="h5pp_info_8h" startline="503">h5pp::TableInfo::compressionLevel</references>
        <references refid="namespaceh5pp_1_1hdf5_1a702101457f9b2a061f1c082dcd526c76" compoundref="h5pp_hdf5_8h" startline="132" endline="144">h5pp::hdf5::getCompressionLevel</references>
        <references refid="structh5pp_1_1_table_info_1a1e4afb6d75b3951b15d8d49b173ad151" compoundref="h5pp_info_8h" startline="507">h5pp::TableInfo::cppTypeIndex</references>
        <references refid="structh5pp_1_1_table_info_1af76e3cd5090b4c63cf76c98c470554f2" compoundref="h5pp_info_8h" startline="505">h5pp::TableInfo::cppTypeName</references>
        <references refid="structh5pp_1_1_table_info_1acc7b5799753cf3fc1c8fcfab4b98758a" compoundref="h5pp_info_8h" startline="506">h5pp::TableInfo::cppTypeSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" compoundref="h5pp_hdf5_8h" startline="671" endline="730">h5pp::hdf5::getCppType</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a6a4033c41b4fe66b33991bdc9c1567a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref></type>
        <definition>TableInfo h5pp::scan::readTableInfo</definition>
        <argsstring>(const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>readTableInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="703" column="23" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="703" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1aef379dd72da58711b7522c624ba7ca82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::makeTableInfo</definition>
        <argsstring>(h5pp::TableInfo &amp;info, const h5x &amp;loc, const Options &amp;options, std::string_view tableTitle, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>makeTableInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_table_info" kindref="compound">h5pp::TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>tableTitle</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="711" column="5" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="711" bodyend="774"/>
        <references refid="structh5pp_1_1_table_info_1ad9db6683bff24f33b3239d939fc5fbbd" compoundref="h5pp_info_8h" startline="502">h5pp::TableInfo::tableExists</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="namespaceh5pp_1_1logger_1ae33f985957e93e9dfef42e01d43c9da4" compoundref="h5pp_logger_8h" startline="135" endline="141">h5pp::logger::setLogger</references>
        <references refid="structh5pp_1_1_options_1ad8eaf0ae5755411adfcf4b22fc556d8e" compoundref="h5pp_info_8h" startline="94">h5pp::Options::h5Type</references>
        <references refid="structh5pp_1_1_table_info_1a62a7ddc51f727ab08be61b53d403afff" compoundref="h5pp_info_8h" startline="491">h5pp::TableInfo::h5Type</references>
        <references refid="structh5pp_1_1_table_info_1adca1998058259900599381c2463db726" compoundref="h5pp_info_8h" startline="492">h5pp::TableInfo::tableTitle</references>
        <references refid="structh5pp_1_1_table_info_1a0134faaab1a3c70a5c07cef6f1862815" compoundref="h5pp_info_8h" startline="495">h5pp::TableInfo::numFields</references>
        <references refid="structh5pp_1_1_table_info_1a87a13274deaf940626cfe88cae4ca846" compoundref="h5pp_info_8h" startline="496">h5pp::TableInfo::numRecords</references>
        <references refid="structh5pp_1_1_table_info_1a88371ba4eb5150ceffdffa7b6bd3c737" compoundref="h5pp_info_8h" startline="497">h5pp::TableInfo::recordBytes</references>
        <references refid="structh5pp_1_1_table_info_1aeae14b48cded957e54b302a779334d85" compoundref="h5pp_info_8h" startline="503">h5pp::TableInfo::compressionLevel</references>
        <references refid="structh5pp_1_1_options_1afa678ec8e743b4ae30e5b3f4dce16a19" compoundref="h5pp_info_8h" startline="96">h5pp::Options::compression</references>
        <references refid="structh5pp_1_1_table_info_1a781a212c634da1c444c724285c80024d" compoundref="h5pp_info_8h" startline="504">h5pp::TableInfo::chunkSize</references>
        <references refid="structh5pp_1_1_options_1a5644c69c592b1fb2e35455f03ba1189e" compoundref="h5pp_info_8h" startline="89">h5pp::Options::dsetDimsChunk</references>
        <references refid="structh5pp_1_1_opt_dims_type_1aa3e046af43a65370969770b3b6e78aba" compoundref="h5pp_dimension_type_8h" startline="105" endline="105">h5pp::OptDimsType::operator-&gt;</references>
        <references refid="structh5pp_1_1_opt_dims_type_1afab86a953f1a6ed797a84cfc0402664e" compoundref="h5pp_dimension_type_8h" startline="100" endline="100">h5pp::OptDimsType::value</references>
        <references refid="namespaceh5pp_1_1util_1ab497c3103b3f9fa58d0cc9b3711a6ec6" compoundref="h5pp_utils_8h" startline="469" endline="527">h5pp::util::getChunkDimensions</references>
        <references refid="namespaceh5pp_1_1hdf5_1af74356caf55623e9ecfe87e2c6325dc8" compoundref="h5pp_hdf5_8h" startline="607" endline="623">h5pp::hdf5::getValidCompressionLevel</references>
        <references refid="structh5pp_1_1_table_info_1afbbda9cf5c07f618f545c2084259b3e4" compoundref="h5pp_info_8h" startline="501">h5pp::TableInfo::fieldTypes</references>
        <references refid="structh5pp_1_1_table_info_1adecb4f11e350debab888de21482c485f" compoundref="h5pp_info_8h" startline="500">h5pp::TableInfo::fieldOffsets</references>
        <references refid="structh5pp_1_1_table_info_1abbfc434ceb8ac00af3b5f9c3475795e0" compoundref="h5pp_info_8h" startline="499">h5pp::TableInfo::fieldSizes</references>
        <references refid="structh5pp_1_1_table_info_1aefd7e9bdb90c1add04e7be8582374004" compoundref="h5pp_info_8h" startline="498">h5pp::TableInfo::fieldNames</references>
        <references refid="structh5pp_1_1_table_info_1a1e4afb6d75b3951b15d8d49b173ad151" compoundref="h5pp_info_8h" startline="507">h5pp::TableInfo::cppTypeIndex</references>
        <references refid="structh5pp_1_1_table_info_1af76e3cd5090b4c63cf76c98c470554f2" compoundref="h5pp_info_8h" startline="505">h5pp::TableInfo::cppTypeName</references>
        <references refid="structh5pp_1_1_table_info_1acc7b5799753cf3fc1c8fcfab4b98758a" compoundref="h5pp_info_8h" startline="506">h5pp::TableInfo::cppTypeSize</references>
        <references refid="namespaceh5pp_1_1hdf5_1a97be622cb9d6be8a8c224e3c71125d7d" compoundref="h5pp_hdf5_8h" startline="671" endline="730">h5pp::hdf5::getCppType</references>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a99578cbda0b80c27d3645cebc3dd8afc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type><ref refid="structh5pp_1_1_table_info" kindref="compound">h5pp::TableInfo</ref></type>
        <definition>h5pp::TableInfo h5pp::scan::makeTableInfo</definition>
        <argsstring>(const h5x &amp;loc, const Options &amp;options, std::string_view tableTitle, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>makeTableInfo</name>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>tableTitle</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="779" column="5" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="779" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="namespaceh5pp_1_1scan_1a26554805ec1da7b64d68a298034d6480" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename h5x</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void h5pp::scan::inferTableInfo</definition>
        <argsstring>(TableInfo &amp;info, const h5x &amp;loc, const Options &amp;options, const PropertyLists &amp;plists=PropertyLists())</argsstring>
        <name>inferTableInfo</name>
        <param>
          <type><ref refid="structh5pp_1_1_table_info" kindref="compound">TableInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const h5x &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_options" kindref="compound">Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const <ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref> &amp;</type>
          <declname>plists</declname>
          <defval><ref refid="structh5pp_1_1_property_lists" kindref="compound">PropertyLists</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="787" column="17" bodyfile="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" bodystart="787" bodyend="804"/>
        <references refid="namespaceh5pp_1ac868e8b1c14646766625645c067d195c" compoundref="h5pp_format_8h" startline="113" endline="115">h5pp::print</references>
        <references refid="structh5pp_1_1_options_1a742bc51e348367beda138648d17bbc4a" compoundref="h5pp_info_8h" startline="86">h5pp::Options::linkPath</references>
        <references refid="structh5pp_1_1_table_info_1a4626b42c8a042f9bd7e6c17f9047b2da" compoundref="h5pp_info_8h" startline="493">h5pp::TableInfo::tablePath</references>
        <references refid="namespaceh5pp_1_1util_1ae6c73a0989d482fb452c89d604c1adee" compoundref="h5pp_utils_8h" startline="12" endline="32">h5pp::util::safe_str</references>
        <references refid="structh5pp_1_1_table_info_1ad9db6683bff24f33b3239d939fc5fbbd" compoundref="h5pp_info_8h" startline="502">h5pp::TableInfo::tableExists</references>
        <references refid="namespaceh5pp_1_1hdf5_1aec048d9dd91e5d72d49332df2f04a40e" compoundref="h5pp_hdf5_8h" startline="471" endline="488">h5pp::hdf5::checkIfLinkExists</references>
        <references refid="structh5pp_1_1_table_info_1a8ee0d7a0e07f049681603afb72cb91b1" compoundref="h5pp_info_8h" startline="509" endline="514">h5pp::TableInfo::getLocId</references>
        <references refid="structh5pp_1_1_property_lists_1a23d97920661e220edc6fc72260798515" compoundref="h5pp_property_lists_8h" startline="16">h5pp::PropertyLists::linkAccess</references>
        <references refid="structh5pp_1_1_table_info_1adca1998058259900599381c2463db726" compoundref="h5pp_info_8h" startline="492">h5pp::TableInfo::tableTitle</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/GitProjects/h5pp/h5pp/include/h5pp/details/h5ppScan.h" line="7" column="20"/>
  </compounddef>
</doxygen>
